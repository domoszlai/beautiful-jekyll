{"version":3,"sources":["service/RecipeService.ts","component/LoadFileDialog.tsx","component/SaveFileDialog.tsx","filter/RandomFilter.ts","filter/MinIngredientsFilter.ts","filter/MaxReuseFilter.ts","filter/Filter.ts","component/PlanSettings.tsx","model/Recipe.ts","component/IngredientLang.ts","component/RecipeEditor.tsx","AppDialogs.tsx","PlanExporter.ts","component/RecipeQuickView.tsx","component/RecipeSelector.tsx","component/Planner.tsx","AppBodies.tsx","model/PlanSettings.ts","service/RecipeDB.ts","model/Plan2.ts","component/IconBar.tsx","component/MenuBar.tsx","App.tsx","index.js"],"names":["RecipeService","db","this","ingredients","Set","all","forEach","r","getIngredients","i","add","getName","toLowerCase","c","Intl","Collator","Array","from","sort","compare","units","getUnit","LoadFileDialog","title","loadButtonTitle","onClose","onLoad","React","useState","file","setFile","Modal","show","onHide","Header","closeButton","Title","Body","Form","FormControl","type","onChange","e","target","files","Footer","Button","variant","onClick","disabled","SaveFileDialog","saveButtonTitle","onSave","data","initialFileName","extension","fileName","setFileName","Group","controlId","Label","Control","value","length","download","MinIngredientsFilter","name","id","filter","explicitRecipes","selectedRecipes","remainingRecipes","ingredientsAlreadyUsed","concat","flatMap","map","scoredRecipes","recipe","score","ingredientsAlreadyUSed","reduce","sum","has","a","b","result","scoredRecipe","push","MaxReuseFilter","randomFilter","max","Math","floor","random","filters","filterMap","Map","f","get","createFilters","PlanSettingsDialog","props","filterList","key","onSubmit","preventDefault","as","planSettings","nrRecipes","newNrRecipes","newSettings","clone","onUpdate","changeNrRecipes","parseInt","optimization","filterId","changeOptimization","Ingredient","amount","unit","o","Error","undefined","Recipe","summary","source","sourceUrl","readyInMinutes","toJSON","replace","toString","isArray","fromJSON","parseIngredients","text","errors","lines","split","line","trim","parts","CodeMirror","Pos","to","message","startpos","startAmount","endAmount","s","Number","parseFloat","autocomplete","cm","cursor","getCursor","getLine","start","ch","end","nrpart","substring","match","charAt","word","slice","trimLeft","selection","indexOf","startsWith","list","defineMode","Location","startState","location","token","stream","state","sol","next","eatWhile","registerHelper","Dialog","RecipeEditor","Object","create","recipeJSON","setRecipeJSON","isTitleInvalid","setIsTitleInvalid","isIngredientsInvalid","setIsIngredientsInvalid","getAmount","join","ingredientCSV","setIngredientCSV","deleteRecipe","onDelete","focusElement","createRef","ingredientEditorElement","onEntered","current","focus","fromTextArea","lineNumbers","mode","gutters","lint","extraKeys","on","instance","updateIngredients","getValue","showHint","hint","recipeService","getUnits","completeSingle","closeOnUnfocus","placeholder","isInvalid","newVal","currentTarget","ref","size","Feedback","rows","isNaN","getIngredientMap","recipes","ingredientMap","ingredientName","oneIngredientRecord","set","oneRecipeRecord","getId","calculateShoppingList","ingredientList","ingredient","values","oneUsage","ingredientsRows","amounts","exportShoppingList","recipeIndex","plan","getAll","getAllRecipeIds","keys","res","row","shift","exportPlan","uniqueRecipes","wb","XLSX","utils","book_new","planRows","_","range","getNrBuckets","bid","getRecipeIds","getTitle","planWS","aoa_to_sheet","book_append_sheet","ingredientsWS","mapHeaderRow","unshift","mapDataRows","recipeIngredient","au","mapRows","mapWS","recipeRows","getSummary","getReadyInMinutes","getSource","recipeWS","substr","bytes","write","bookType","bookSST","Blob","renderDialog","showDialog","LoadFile","closeDialog","loadFile","SaveFile","genRecipeFileContent","fileSaved","closeRecipeEditor","saveRecipe","recipeToEdit","SavePlanXLS","plan2","ShoppingList","cols","readOnly","PlanSettings","updatePlanSettings","RecipeQuickView","n","Col","sm","className","Container","Row","height","xs","fluid","RecipeListItem","selected","onEdit","useDrag","item","collect","monitor","isDragging","drag","style","position","width","backgroundColor","Card","opacity","top","right","zIndex","OverlayTrigger","placement","overlay","Popover","Content","RecipeSelector","setFilter","filteredRecipes","search","selectedRecipeSet","listItems","ListGroup","Item","InputGroup","Prepend","Text","event","RecipeCarousel","showIndicators","showThumbs","RecipeBox","bucketId","Bucket","recipeId","DroppableBucket","onDrop","onMove","useDrop","accept","drop","r2","isOver","left","Planner","recipeDB","updatePlan","addRecipe","bucketIdx","addRecipeId","deleteRecipeId","moveRecipe","renderInitialBody","isOpen","isInitialTour","onRequestClose","setIsInitialTour","steps","selector","content","Alert","renderDesktopBody","md","lg","xl","minHeight","editRecipe","getNrRecipes","Image","src","renderMobileBody","Optimization","RecipeIndex","index","recipesMap","fieldAccessors","fieldBoostFactors","termFilter","term","normalize","toUpdate","JSON","stringify","delete","newMap","addDocumentToIndex","words","addAll","idx","q","query","acc","removeDocumentFromIndex","count","createIndex","new","Plan2","buckets","List","nrBuckets","setSize","ret","bucket","bucketNr","deDuplicate","ids","IconBar","onLoadFile","onNewRecipe","onSaveFile","onEditSettings","unsavedChanges","Tooltip","color","MenuBar","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","process","App","AppDialogs","AppBodies","addRecipes","newRecipes","fromFile","setState","st","needsSave","newRecipeIndex","t","onFileLoaded","ev","json","parse","version","deserializeRecipes","error","reader","FileReader","onload","readAsText","str","TextEncoder","encode","serializeRecipes","dialog","dismissError","ps","setNrBuckets","dismissible","onBeforeunload","isMobileOnly","Component","ReactDOM","render","StrictMode","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.276e0645.chunk.js","sourcesContent":["import { RecipeIndex } from './RecipeDB'\r\n\r\nexport class RecipeService {\r\n\r\n    private readonly db: RecipeIndex;\r\n\r\n    constructor(db: RecipeIndex) {\r\n        this.db = db;\r\n    }\r\n\r\n    public getIngredients() {\r\n\r\n        let ingredients = new Set<string>();\r\n\r\n        this.db.all().forEach(r => {\r\n            r.getIngredients().forEach(i => {\r\n                ingredients.add(i.getName().toLowerCase());\r\n            })\r\n        });\r\n\r\n        const c = new Intl.Collator();\r\n        return Array.from(ingredients).sort(c.compare);\r\n    }\r\n\r\n    public getUnits() {\r\n\r\n        let units = new Set<string>();\r\n\r\n        this.db.all().forEach(r => {\r\n            r.getIngredients().forEach(i => {\r\n                units.add(i.getUnit().toLowerCase());\r\n            })\r\n        });\r\n\r\n        const c = new Intl.Collator();\r\n        return Array.from(units).sort(c.compare);\r\n    }\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\ntype LoadFileDialogProps = {\r\n    title: string,\r\n    loadButtonTitle: string,\r\n    onClose: () => void,\r\n    onLoad: (file: File) => void\r\n}\r\n\r\nexport const LoadFileDialog: FunctionComponent<LoadFileDialogProps> = ({title, loadButtonTitle, onClose, onLoad}) => {\r\n\r\n    const [file, setFile] = React.useState<null | File>(null);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <FormControl type=\"file\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                                if(e.target.files)\r\n                                                {\r\n                                                    setFile(e.target.files[0])\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    setFile(null)\r\n                                                }\r\n                                            }}/>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!file} \r\n                        onClick={() => {if(file) onLoad(file)}}>{loadButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, Button} from 'react-bootstrap';\r\n\r\nimport download from 'downloadjs'\r\n\r\ntype SaveFileDialogProps = {\r\n    title: string,\r\n    saveButtonTitle: string,\r\n    data: Blob,\r\n    type: string,\r\n    initialFileName: string,\r\n    extension: string,\r\n    onClose: () => void,\r\n    onSave: () => void\r\n}\r\n\r\nexport const SaveFileDialog: FunctionComponent<SaveFileDialogProps> \r\n                = ({title, saveButtonTitle, onClose, onSave, data, type, initialFileName, extension }) => {\r\n\r\n    const [fileName, setFileName] = React.useState(initialFileName);\r\n\r\n    const startDownload = () => {\r\n        download(data, fileName+\".\"+extension, type)\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <Form.Group controlId=\"formBasicFileName\">\r\n        <Form.Label>File name</Form.Label>\r\n        <Form.Control type=\"fileName\" value={fileName} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFileName(e.target.value)}/>\r\n        </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!fileName || fileName.length===0} \r\n                        onClick={() => {startDownload(); onSave()}}>{saveButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import { Filter } from \"./Filter\";\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nfunction getRandomInt(max: number) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport class RandomFilter implements Filter {\r\n  public name = \"Random filter\";\r\n  public id = \"rnd\";\r\n  public filter = (\r\n    explicitRecipes: Recipe[],\r\n    selectedRecipes: Recipe[],\r\n    remainingRecipes: Recipe[]\r\n  ) => {\r\n    if (remainingRecipes.length === 0) {\r\n      return [];\r\n    } else {\r\n      return [remainingRecipes[getRandomInt(remainingRecipes.length)]];\r\n    }\r\n  };\r\n}\r\n","import { Filter } from \"./Filter\";\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nfunction getScore(ingredientsAlreadyUSed: Set<string>, recipe: Recipe) {\r\n  return recipe.getIngredients().reduce((sum, i) => {\r\n    if (ingredientsAlreadyUSed.has(i.getName())) {\r\n      return sum;\r\n    } else {\r\n      return sum + 1;\r\n    }\r\n  }, 0);\r\n}\r\n\r\nexport class MinIngredientsFilter implements Filter {\r\n  public name = \"Minimal number of ingredients\";\r\n  public id = \"miningredients\";\r\n  public filter = (\r\n    explicitRecipes: Recipe[],\r\n    selectedRecipes: Recipe[],\r\n    remainingRecipes: Recipe[]\r\n  ) => {\r\n    const ingredientsAlreadyUsed = new Set<string>(\r\n      explicitRecipes\r\n        .concat(selectedRecipes)\r\n        .flatMap((r) => r.getIngredients().map((i) => i.getName()))\r\n    );\r\n\r\n    const scoredRecipes = remainingRecipes\r\n      .map((r) => ({ recipe: r, score: getScore(ingredientsAlreadyUsed, r) }))\r\n      .sort((a, b) => {\r\n        if (a.score < b.score) {\r\n          return -1;\r\n        } else if (a.score > b.score) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n\r\n    const result: Recipe[] = [];\r\n\r\n    if (scoredRecipes.length > 0) {\r\n      for (let scoredRecipe of scoredRecipes) {\r\n        if (scoredRecipes[0].score === scoredRecipe.score) {\r\n          result.push(scoredRecipe.recipe);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n","import { Filter } from \"./Filter\";\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nfunction getScore(ingredientsAlreadyUSed: Set<string>, recipe: Recipe) {\r\n  return recipe.getIngredients().reduce((sum, i) => {\r\n    if (ingredientsAlreadyUSed.has(i.getName())) {\r\n      return sum + 1;\r\n    } else {\r\n      return sum;\r\n    }\r\n  }, 0);\r\n}\r\n\r\nexport class MaxReuseFilter implements Filter {\r\n  public name = \"Maximal reuse of ingredients\";\r\n  public id = \"maxreuse\";\r\n  public filter = (\r\n    explicitRecipes: Recipe[],\r\n    selectedRecipes: Recipe[],\r\n    remainingRecipes: Recipe[]\r\n  ) => {\r\n    const ingredientsAlreadyUsed = new Set<string>(\r\n      explicitRecipes\r\n        .concat(selectedRecipes)\r\n        .flatMap((r) => r.getIngredients().map((i) => i.getName()))\r\n    );\r\n\r\n    const scoredRecipes = remainingRecipes\r\n      .map((r) => ({ recipe: r, score: getScore(ingredientsAlreadyUsed, r) }))\r\n      .sort((a, b) => {\r\n        if (a.score < b.score) {\r\n          return 1;\r\n        } else if (a.score > b.score) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n\r\n    const result: Recipe[] = [];\r\n\r\n    if (scoredRecipes.length > 0) {\r\n      for (let scoredRecipe of scoredRecipes) {\r\n        if (scoredRecipes[0].score === scoredRecipe.score) {\r\n          result.push(scoredRecipe.recipe);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n","import { Recipe } from \"../model/Recipe\";\r\n\r\nimport { RandomFilter } from \"./RandomFilter\";\r\nimport { MinIngredientsFilter } from \"./MinIngredientsFilter\";\r\nimport { MaxReuseFilter } from \"./MaxReuseFilter\";\r\n\r\nexport const randomFilter = new RandomFilter();\r\n\r\nexport interface Filter {\r\n  id: string;\r\n  name: string;\r\n  filter: (\r\n    explicitRecipes: Recipe[],\r\n    selectedRecipes: Recipe[],\r\n    remainingRecipes: Recipe[]\r\n  ) => Recipe[];\r\n}\r\n\r\nexport type Filters = {\r\n  all: () => Filter[];\r\n  get: (id: string) => Filter | undefined;\r\n};\r\n\r\nfunction createFilters() {\r\n  const filters = [\r\n    new MinIngredientsFilter(),\r\n    new MaxReuseFilter(),\r\n    randomFilter,\r\n  ];\r\n  const filterMap = new Map<string, Filter>(filters.map((f) => [f.id, f]));\r\n\r\n  return {\r\n    all: () => filters,\r\n    get: (id: string) => filterMap.get(id),\r\n  };\r\n}\r\n\r\nexport const filters: Filters = createFilters();\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { PlanSettings } from '../model/PlanSettings';\r\nimport { filters } from '../filter/Filter';\r\n\r\ntype PlanSettingsDialogProps = {\r\n    planSettings: PlanSettings,\r\n    onClose: () => void,\r\n    onUpdate: (planSettings: PlanSettings) => void\r\n}\r\n\r\nexport const PlanSettingsDialog: FunctionComponent<PlanSettingsDialogProps> = (props) => {\r\n\r\n    const changeNrRecipes = (newNrRecipes: number) => {\r\n        let newSettings = props.planSettings.clone();\r\n        newSettings.nrRecipes = newNrRecipes;\r\n        props.onUpdate(newSettings);\r\n    }\r\n\r\n    const changeOptimization = (filterId: string) => {\r\n        let filter = filters.get(filterId);\r\n        if (filter) {\r\n            let newSettings = props.planSettings.clone();\r\n            newSettings.optimization = filter;\r\n            props.onUpdate(newSettings);\r\n        }\r\n    }\r\n\r\n    const filterList = filters.all().map(f =>\r\n        <option value={f.id} key={f.id}>{f.name}</option>\r\n    )\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose}>\r\n        <Modal.Header closeButton>\r\n                <Modal.Title>Plan settings</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form onSubmit={(e) => e.preventDefault()}>\r\n            <Form.Group controlId=\"nrRecipes\">\r\n                <Form.Label>Number of recipes:</Form.Label>\r\n                <Form.Control as=\"select\" value={props.planSettings.nrRecipes}\r\n                    onChange={(e) => changeNrRecipes(parseInt(e.target.value))}>\r\n                    <option key=\"3\">3</option>\r\n                    <option key=\"4\">4</option>\r\n                    <option key=\"5\">5</option>\r\n                    <option key=\"6\">6</option>\r\n                    <option key=\"7\">7</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"optimization\">\r\n                <Form.Label>Optimize by:</Form.Label>\r\n                <Form.Control as=\"select\" value={props.planSettings.optimization.id}\r\n                    onChange={(e) => changeOptimization(e.target.value)}>\r\n                    {filterList}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n","export interface IngredientJSON {\r\n  name: string;\r\n  amount: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface RecipeJSON {\r\n  id: string;\r\n  title: string;\r\n  source?: string;\r\n  summary?: string;\r\n  readyInMinutes?: number;\r\n  ingredients: IngredientJSON[];\r\n}\r\n\r\ninterface RecipeFileJSON {\r\n  version: number;\r\n  recipes: RecipeJSON[];\r\n}\r\n\r\nexport class Ingredient {\r\n  private constructor(name: string, amount: number, unit: string) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n    this.unit = unit;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  public getUnit(): string {\r\n    return this.unit;\r\n  }\r\n\r\n  public static fromJSON(o: IngredientJSON): Ingredient {\r\n    if (!o.name) {\r\n      throw new Error(\"Missing ingredient name\");\r\n    }\r\n\r\n    if (!o.unit) {\r\n      throw new Error(\"Missing ingredient unit\");\r\n    }\r\n\r\n    if (o.amount === undefined) {\r\n      throw new Error(\"Missing ingredient amount\");\r\n    }\r\n\r\n    return new Ingredient(o.name, o.amount, o.unit);\r\n  }\r\n\r\n  public toJSON(): IngredientJSON {\r\n    return {\r\n      name: this.name,\r\n      amount: this.amount,\r\n      unit: this.unit,\r\n    };\r\n  }\r\n\r\n  private name: string;\r\n  private amount: number;\r\n  private unit: string;\r\n}\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport class Recipe {\r\n  private constructor(id: string, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.ingredients = [];\r\n  }\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public getTitle(): string {\r\n    return this.title;\r\n  }\r\n\r\n  public getSummary(): string | undefined {\r\n    return this.summary;\r\n  }\r\n\r\n  public getSource(): string | undefined {\r\n    return this.source;\r\n  }\r\n\r\n  public getReadyInMinutes(): number | undefined {\r\n    return this.readyInMinutes;\r\n  }\r\n\r\n  public getIngredients(): Ingredient[] {\r\n    return this.ingredients;\r\n  }\r\n\r\n  public static fromJSON(o: RecipeJSON): Recipe {\r\n    if (!o.id) {\r\n      o.id = uuidv4();\r\n    }\r\n\r\n    if (!o.title) {\r\n      throw new Error(\"Missing recipe title\");\r\n    }\r\n\r\n    let r = new Recipe(o.id, o.title);\r\n\r\n    r.summary = o.summary;\r\n    r.source = o.source;\r\n    r.readyInMinutes = o.readyInMinutes;\r\n\r\n    if (Array.isArray(o.ingredients)) {\r\n      r.ingredients = o.ingredients.map((i) => Ingredient.fromJSON(i));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  public toJSON(): RecipeJSON {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      summary: this.summary,\r\n      source: this.source,\r\n      readyInMinutes: this.readyInMinutes,\r\n      ingredients: this.ingredients.map((i) => i.toJSON()),\r\n    };\r\n  }\r\n\r\n  private id: string;\r\n  private title: string;\r\n  private summary?: string;\r\n  private source?: string;\r\n  private sourceUrl?: string;\r\n  private readyInMinutes?: number;\r\n  private ingredients: Ingredient[];\r\n}\r\n\r\nexport function serializeRecipes(recipes: Recipe[]) {\r\n  let str = JSON.stringify({ version: 1, recipes: recipes });\r\n  let bytes = new TextEncoder().encode(str);\r\n  let blob = new Blob([bytes], {\r\n    type: \"application/json;charset=utf-8\",\r\n  });\r\n  return blob;\r\n}\r\n\r\nexport function deserializeRecipes(data: string) {\r\n  let json = JSON.parse(data);\r\n\r\n  if (Array.isArray(json)) {\r\n    let v0: RecipeJSON[] = json;\r\n    return v0.map(Recipe.fromJSON);\r\n  }\r\n\r\n  if (typeof json === \"object\") {\r\n    let r: RecipeFileJSON = json;\r\n\r\n    if (typeof r.version !== \"undefined\") {\r\n      if (r.version !== 1) {\r\n        throw new Error(\"Invalid recipe file version\");\r\n      }\r\n\r\n      if (Array.isArray(r.recipes)) {\r\n        return r.recipes.map(Recipe.fromJSON);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Invalid recipe file\");\r\n}\r\n","import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\n\r\nimport { IngredientJSON } from '../model/Recipe';\r\n\r\nCodeMirror.defineMode(\"ingredients\", () => {\r\n  var Location = {\r\n    INGREDIENT: 0,\r\n    AMOUNT: 1,\r\n    UNIT: 2,\r\n    ERROR: 3,\r\n  };\r\n\r\n  return {\r\n    startState: function () {\r\n      return {\r\n        location: Location.INGREDIENT,\r\n      };\r\n    },\r\n    token: function (stream, state) {\r\n      if (stream.sol()) {\r\n        state.location = Location.INGREDIENT;\r\n      }\r\n\r\n      var ch = stream.next();\r\n\r\n      if (ch === \";\") {\r\n        if (state.location === Location.INGREDIENT)\r\n          state.location = Location.AMOUNT;\r\n        else if (state.location === Location.AMOUNT)\r\n          state.location = Location.UNIT;\r\n        else state.location = Location.ERROR;\r\n      }\r\n\r\n      if (state.location === Location.ERROR) {\r\n        return \"error\";\r\n      }\r\n\r\n      if (ch === \";\") {\r\n        return \"keyword\";\r\n      }\r\n\r\n      if (state.location === Location.INGREDIENT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      if (state.location === Location.AMOUNT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"number\";\r\n      }\r\n\r\n      if (state.location === Location.UNIT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      return \"error\";\r\n    },\r\n  };\r\n});\r\n\r\nexport function parseIngredients(text: string, errors: CodeMirror.Annotation[]) {\r\n\r\n  let ingredients: IngredientJSON[] = [];\r\n\r\n  let lines: string[] = text.split(/\\r?\\n/);\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let line = lines[i];\r\n\r\n    if (line.trim().length > 0) {\r\n      let parts = line.split(\";\");\r\n\r\n      if (parts.length < 3) {\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, 0),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Not enough parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      } else if (parts.length > 3) {\r\n        let startpos = parts[0].length + parts[1].length + parts[2].length + 2;\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, startpos),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Too many parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      }\r\n      else {\r\n        let startAmount = parts[0].length + 1;\r\n        let endAmount = startAmount + parts[1].length;\r\n\r\n        parts = parts.map(s => s.trim());\r\n\r\n        if (parts[0].length === 0 || parts[1].length === 0 || parts[2].length === 0) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, 0),\r\n            to: CodeMirror.Pos(i, line.length),\r\n            message: \"Empty part(s). Syntax: <name>;<amount>;<unit>\",\r\n          });\r\n        }\r\n        else if (\"\" + Number.parseFloat(parts[1]) !== parts[1]) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, startAmount),\r\n            to: CodeMirror.Pos(i, endAmount),\r\n            message: \"Amount should be a number.\",\r\n          });\r\n        }\r\n        else {\r\n          ingredients.push({ name: parts[0], amount: Number.parseFloat(parts[1]), unit: parts[2] })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ingredients;\r\n}\r\n\r\nCodeMirror.registerHelper(\"lint\", \"ingredients\", function (text: string) {\r\n  let errors: CodeMirror.Annotation[] = [];\r\n  parseIngredients(text, errors);\r\n  return errors;\r\n});\r\n\r\nexport function autocomplete(ingredients: string[], units: string[]) {\r\n  return function (\r\n    cm: CodeMirror.Editor,\r\n  ) {\r\n\r\n    var cursor = cm.getCursor(),\r\n      line = cm.getLine(cursor.line);\r\n    var start = cursor.ch,\r\n      end = cursor.ch;\r\n\r\n    let nrpart = (line.substring(0, end).match(/;/g) || []).length;\r\n\r\n    if (nrpart !== 0 && nrpart !== 2) {\r\n      return null;\r\n    }\r\n\r\n    while (start && line.charAt(start - 1) !== \";\") --start;\r\n    while (end < line.length && line.charAt(end) !== \";\") ++end;\r\n    var word = line.slice(start, end).trimLeft().toLowerCase();\r\n\r\n    let selection =\r\n      nrpart === 0\r\n        ? ingredients.filter((i) => i.indexOf(word) >= 0)\r\n        : units.filter((i) => i.startsWith(word));\r\n\r\n    if(selection.length === 1 && selection[0] === word) {\r\n        selection = []\r\n    }\r\n\r\n    return {\r\n      list: selection,\r\n      from: CodeMirror.Pos(cursor.line, start),\r\n      to: CodeMirror.Pos(cursor.line, end),\r\n    };\r\n  }\r\n};\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { RecipeJSON, Recipe, Ingredient } from '../model/Recipe';\r\nimport { RecipeService } from '../service/RecipeService';\r\n\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/addon/lint/lint.css';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/selection/active-line.js';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/lint/lint.js';\r\nimport 'codemirror/addon/display/placeholder.js';\r\n\r\nimport { autocomplete, parseIngredients } from './IngredientLang'\r\n\r\ntype RecipeEditorProps = {\r\n    recipe?: Recipe,\r\n    recipeService: RecipeService,\r\n    onClose: () => void,\r\n    onSave: (recipe: Recipe) => void,\r\n    onDelete: (recipe: Recipe) => void\r\n}\r\n\r\nexport const RecipeEditor: FunctionComponent<RecipeEditorProps> = (props) => {\r\n\r\n    const [recipeJSON, setRecipeJSON] = React.useState<RecipeJSON>(\r\n        props.recipe ? props.recipe.toJSON() : Object.create({}));\r\n    const [isTitleInvalid, setIsTitleInvalid] = React.useState(!props.recipe);\r\n    const [isIngredientsInvalid, setIsIngredientsInvalid] = React.useState(false);\r\n\r\n    const generateIngredientCSV = (ingredients: Ingredient[]) => {\r\n        return ingredients.map(i => i.getName() + \";\" + i.getAmount() + \";\" + i.getUnit()).join(\"\\n\")\r\n    }\r\n\r\n    const [ingredientCSV, setIngredientCSV] = React.useState(props.recipe ?\r\n        generateIngredientCSV(props.recipe.getIngredients()) : \"\");\r\n\r\n    const setTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal = e.currentTarget.value;\r\n        setIsTitleInvalid(!newVal || newVal.length === 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ title: newVal } }))\r\n    }\r\n\r\n    const setSummary = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ summary: newVal } }))\r\n    }\r\n\r\n    const setSource = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ source: newVal } }))\r\n    }\r\n\r\n    const setMinutes = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: number | undefined = Number.parseInt(e.currentTarget.value)\r\n        if (isNaN(newVal)) newVal = undefined\r\n        setRecipeJSON(r => ({ ...r, ...{ readyInMinutes: newVal } }))\r\n    }\r\n\r\n    const updateIngredients = (text: string) => {\r\n\r\n        setIngredientCSV(text);\r\n\r\n        let errors: CodeMirror.Annotation[] = [];\r\n        let ingredients = parseIngredients(text, errors);\r\n        let invalid = errors.length > 0;\r\n\r\n        if (invalid) {\r\n            setIsIngredientsInvalid(true);\r\n        }\r\n        else {\r\n            setIsIngredientsInvalid(false);\r\n            setRecipeJSON(r => ({ ...r, ...{ ingredients: ingredients } }))\r\n        }\r\n    }\r\n\r\n    const saveRecipe = () => {\r\n        props.onSave(Recipe.fromJSON(recipeJSON))\r\n    }\r\n\r\n    const deleteRecipe = () => {\r\n        if (props.recipe) {\r\n            props.onDelete(props.recipe)\r\n        }\r\n    }\r\n\r\n    const focusElement = React.createRef<HTMLInputElement>();\r\n    const ingredientEditorElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose} onEntered={() => {\r\n            if (focusElement.current) focusElement.current.focus();\r\n            if (ingredientEditorElement.current) {\r\n                let cm = CodeMirror.fromTextArea(ingredientEditorElement.current,\r\n                    {\r\n                        lineNumbers: false,\r\n                        mode: \"ingredients\",\r\n                        gutters: [\"CodeMirror-lint-markers\"],\r\n                        lint: true,\r\n                        extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n                    });\r\n\r\n                cm.on(\"change\", (instance: CodeMirror.Editor) => {\r\n                    updateIngredients(instance.getValue());\r\n                });\r\n                cm.on(\"cursorActivity\", (instance: CodeMirror.Editor) => {\r\n                    instance.showHint({\r\n                        hint: autocomplete(props.recipeService.getIngredients(), props.recipeService.getUnits()),\r\n                        completeSingle: false,\r\n                        closeOnUnfocus: true\r\n                    });\r\n                });\r\n            }\r\n        }}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add new recipe</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formTitle\">\r\n                        <Form.Control type=\"title\" value={recipeJSON.title} placeholder=\"Title\"\r\n                            isInvalid={isTitleInvalid} onChange={setTitle}\r\n                            ref={focusElement}\r\n                            size=\"sm\" />\r\n                        <Form.Control.Feedback type=\"invalid\">Required field!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formSummary\">\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            value={recipeJSON.summary}\r\n                            onChange={setSummary}\r\n                            rows={4}\r\n                            placeholder=\"Summary\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formSource\">\r\n                        <Form.Control\r\n                            type=\"source\"\r\n                            value={recipeJSON.source}\r\n                            onChange={setSource}\r\n                            placeholder=\"Where to find the recipe\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formMinutes\">\r\n                        <Form.Control\r\n                            type=\"minutes\"\r\n                            value={recipeJSON.readyInMinutes}\r\n                            onChange={setMinutes}\r\n                            placeholder=\"Number of minutes to cook\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formIngredients\">\r\n                        <Form.Control as=\"textarea\" value={ingredientCSV} ref={ingredientEditorElement}\r\n                            placeholder=\"Ingredients: <name>;<amount>;<unit>\" />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={saveRecipe} disabled={isTitleInvalid || isIngredientsInvalid}>Save recipe</Button>\r\n                {(() => {\r\n                    if (props.recipe) {\r\n                        return (<Button type=\"button\" variant=\"primary\" onClick={deleteRecipe}>Delete recipe</Button>)\r\n                    }\r\n                })()}\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { RecipeService } from \"./service/RecipeService\";\r\n\r\nimport { LoadFileDialog } from \"./component/LoadFileDialog\";\r\nimport { SaveFileDialog } from \"./component/SaveFileDialog\";\r\nimport { PlanSettingsDialog } from \"./component/PlanSettings\";\r\nimport { RecipeEditor } from \"./component/RecipeEditor\";\r\n\r\nimport { exportPlan, exportShoppingList } from \"./PlanExporter\";\r\n\r\nimport App from \"./App\";\r\n\r\nexport enum Dialog {\r\n    LoadFile,\r\n    SaveFile,\r\n    RecipeEditor,\r\n    SavePlanXLS,\r\n    ShoppingList,\r\n    PlanSettings\r\n}\r\n\r\nexport function renderDialog(this: App) {\r\n    switch (this.state.showDialog) {\r\n        case Dialog.LoadFile: {\r\n            return (\r\n                <LoadFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Load recipes file\"\r\n                    loadButtonTitle=\"Load recipes\"\r\n                    onLoad={this.loadFile}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SaveFile: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save recipes file\"\r\n                    saveButtonTitle=\"Save recipes\"\r\n                    data={this.genRecipeFileContent()}\r\n                    type=\"application/json\"\r\n                    initialFileName=\"recipes\"\r\n                    extension=\"json\"\r\n                    onSave={this.fileSaved}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.RecipeEditor: {\r\n            return (\r\n                <RecipeEditor\r\n                    onClose={this.closeRecipeEditor}\r\n                    onSave={this.saveRecipe}\r\n                    onDelete={this.deleteRecipe}\r\n                    recipe={this.state.recipeToEdit}\r\n                    recipeService={new RecipeService(this.state.recipeIndex)}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SavePlanXLS: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save plan\"\r\n                    saveButtonTitle=\"Save plan\"\r\n                    data={exportPlan(this.state.recipeIndex, this.state.plan2)}\r\n                    type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                    initialFileName=\"plan\"\r\n                    extension=\"xlsx\"\r\n                    onSave={this.closeDialog}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.ShoppingList: {\r\n            return (\r\n                <Modal show={true} onHide={this.closeDialog}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Shopping list</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={20}\r\n                                cols={80}\r\n                                value={exportShoppingList(this.state.recipeIndex, this.state.plan2)}\r\n                                readOnly />\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.closeDialog}>\r\n                            Close\r\n              </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            );\r\n        }\r\n\r\n        case Dialog.PlanSettings: {\r\n            return (\r\n                <PlanSettingsDialog\r\n                    onClose={this.closeDialog}\r\n                    planSettings={this.state.planSettings}\r\n                    onUpdate={this.updatePlanSettings} />\r\n            );\r\n        }\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n};\r\n","import { RecipeIndex } from './service/RecipeDB';\r\n\r\nimport { Plan2 } from './model/Plan2';\r\nimport { Recipe } from './model/Recipe';\r\n\r\nimport XLSX from 'xlsx';\r\nimport _ from 'lodash';\r\n\r\nexport function getIngredientMap(recipes: Recipe[]) {\r\n    // Ingredient -> (recipe id -> [amount, unit][])\r\n    let ingredientMap = new Map<string, Map<string, [number, string][]>>();\r\n\r\n    recipes.forEach(r => {\r\n\r\n        r.getIngredients().forEach(i => {\r\n            let ingredientName = i.getName().toLowerCase();\r\n            let oneIngredientRecord = ingredientMap.get(ingredientName);\r\n            if (!oneIngredientRecord) {\r\n                oneIngredientRecord = new Map()\r\n                ingredientMap.set(ingredientName, oneIngredientRecord);\r\n            }\r\n\r\n            let oneRecipeRecord = oneIngredientRecord.get(r.getId()) ?? [];\r\n            oneRecipeRecord.push([i.getAmount(), i.getUnit().toLowerCase()]);\r\n            oneIngredientRecord.set(r.getId(), oneRecipeRecord);\r\n        });\r\n    });\r\n\r\n    return ingredientMap;\r\n}\r\n\r\nfunction calculateShoppingList(\r\n    ingredientMap: Map<string, Map<string, [number, string][]>>,\r\n    ingredients: string[]) {\r\n    let ingredientList = ingredients.map(name => {\r\n\r\n        let oneIngredientRecord = new Map<string, number>()\r\n        let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string][]>()\r\n\r\n        // Group ingredient usages by unit\r\n        for (let oneUsage of ingredient.values()) {\r\n            for (let [amount, unit] of oneUsage) {\r\n                oneIngredientRecord.set(unit,\r\n                    (oneIngredientRecord.get(unit) ?? 0) + amount)\r\n            }\r\n        }   \r\n\r\n        return { \"name\": name, \"amounts\": oneIngredientRecord }\r\n    });\r\n\r\n    let ingredientsRows = []\r\n\r\n    for (let { name, amounts } of ingredientList) {\r\n        let line: [string] = [name]\r\n        for (let [unit, amount] of amounts) {\r\n            line.push(\"\" + amount + \" \" + unit)\r\n        }\r\n        ingredientsRows.push(line)\r\n    }\r\n\r\n    return ingredientsRows;\r\n}\r\n\r\n// Exports ShoppingList as list of MD lines\r\nexport function exportShoppingList(recipeIndex: RecipeIndex, plan: Plan2) {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let recipes = recipeIndex.getAll(plan.getAllRecipeIds(false)); \r\n    let ingredientMap = getIngredientMap(recipes);\r\n    let c = new Intl.Collator();\r\n    let ingredients = Array.from(ingredientMap.keys()).sort(c.compare);\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n\r\n    let res = \"\";\r\n\r\n    for (let row of ingredientsRows) {\r\n        res += \"**\" + row.shift() + \"**\";\r\n        res += \" - \";\r\n        res += row.join(\" + \");\r\n        res += \"\\n\";\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// Exports Plan as XLSX\r\nexport function exportPlan(recipeIndex: RecipeIndex, plan: Plan2): Blob {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let recipes = recipeIndex.getAll(plan.getAllRecipeIds(false));\r\n    let uniqueRecipes = new Set(recipes);\r\n    let ingredientMap = getIngredientMap(recipes);\r\n    let ingredients = Array.from(ingredientMap.keys()).sort();\r\n\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate map\r\n\r\n    let planRows = _.range(0, plan.getNrBuckets()).map(bid => \r\n        [\"Day #\"+(bid+1)].concat(\r\n            recipeIndex.getAll(plan.getRecipeIds(bid)).map(r => r.getTitle())));\r\n    let planWS = XLSX.utils.aoa_to_sheet(planRows);\r\n    XLSX.utils.book_append_sheet(wb, planWS, \"Plan\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Calculate shopping list\r\n\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n    let ingredientsWS = XLSX.utils.aoa_to_sheet(ingredientsRows);\r\n    XLSX.utils.book_append_sheet(wb, ingredientsWS, \"Shopping list\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate ingredient map\r\n\r\n    const mapHeaderRow = recipes.map(r => r.getTitle())\r\n    mapHeaderRow.unshift(\"\")\r\n\r\n    const mapDataRows = ingredients.map(name => {\r\n\r\n        let line = [name]\r\n\r\n        for (let r of recipes) {\r\n            let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string][]>();\r\n            let recipeIngredient = ingredient.get(r.getId());\r\n            if (recipeIngredient) {\r\n                line.push(recipeIngredient.map(au => \"\" + au[0] + \" \" + au[1]).join(\", \"));\r\n            }\r\n            else {\r\n                line.push(\"\");\r\n            }\r\n\r\n        }\r\n\r\n        return line;\r\n    });\r\n\r\n    let mapRows = [mapHeaderRow].concat(mapDataRows);\r\n    let mapWS = XLSX.utils.aoa_to_sheet(mapRows);\r\n    XLSX.utils.book_append_sheet(wb, mapWS, \"Ingredient map\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate recipes\r\n\r\n    // Recipes must be converted to a set to eliminate duplications\r\n    for (let r of uniqueRecipes) {\r\n        let recipeRows = [\r\n            [\"Title\", r.getTitle()],\r\n            [\"Summary\", r.getSummary() ?? \"-\"],\r\n            [\"Ready in minutes\", r.getReadyInMinutes() ?? \"-\"],\r\n            [\"Source\", r.getSource() ?? \"-\"],\r\n            [\"Ingredients:\"]\r\n        ];\r\n\r\n        for (let i of r.getIngredients()) {\r\n            recipeRows.push([i.getName().toLowerCase(), i.getAmount(), i.getUnit().toLowerCase()])\r\n        }\r\n\r\n        let recipeWS = XLSX.utils.aoa_to_sheet(recipeRows);\r\n        XLSX.utils.book_append_sheet(wb, recipeWS, r.getTitle().substr(0,31));\r\n    }\r\n\r\n    let bytes = XLSX.write(wb, { bookType: 'xlsx', bookSST: false, type: 'array' });\r\n    return new Blob([bytes], {\r\n        type: 'application/octet-stream'\r\n    });\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Binoculars, Clock, Cart2 } from 'react-bootstrap-icons';\r\n\r\nimport { Recipe } from '../model/Recipe';\r\n\r\ntype RecipePopoverProps = {\r\n    recipe: Recipe\r\n}\r\n\r\nexport const RecipeQuickView: FunctionComponent<RecipePopoverProps> = ({ recipe }) => {\r\n\r\n    const c = new Intl.Collator();\r\n    const ingredients = recipe.getIngredients().map(r => r.getName())\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    return (\r\n        <Container className=\"pl-0 pr-2\">\r\n            {recipe.getSummary() &&\r\n            <Row className=\"pb-2\">\r\n                <Col>{recipe.getSummary()}</Col>\r\n            </Row>\r\n            }\r\n            {recipe.getReadyInMinutes() &&\r\n            <Row className=\"pb-2\">\r\n                <Col sm=\"auto\"><Clock height=\"18\" /></Col>\r\n                <Col sm=\"auto\">{recipe.getReadyInMinutes() + \" minutes\"}</Col>\r\n            </Row>\r\n            }\r\n            {recipe.getSource() &&\r\n            <Row className=\"pb-2\">\r\n                <Col sm=\"auto\"><Binoculars height=\"18\" /></Col>\r\n                <Col sm=\"auto\">{recipe.getSource()}</Col>\r\n            </Row>\r\n            }\r\n            <Row>\r\n                <Col xs={1}>\r\n                    <Cart2 height=\"18\"/>\r\n                </Col>\r\n                <Col>\r\n                <Container fluid className=\"pl-0\">\r\n                    <Row>\r\n                    {ingredients}\r\n                    </Row>\r\n                </Container>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\n\r\nimport { Gear, Eye, Search } from 'react-bootstrap-icons';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { Plan2 } from '../model/Plan2';\r\nimport { RecipeIndex } from '../service/RecipeDB';\r\n\r\nimport { useDrag } from 'react-dnd'\r\n\r\ntype RecipeSelectorProps = {\r\n    recipeIndex: RecipeIndex,\r\n    plan: Plan2,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\ntype RecipeListItemProps = {\r\n    recipe: Recipe,\r\n    selected: boolean,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\nconst RecipeListItem: FunctionComponent<RecipeListItemProps> = ({ recipe, selected, onEdit }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId() },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#FFFFFF'\r\n            }}>\r\n\r\n            <Card\r\n                className=\"mealee-recipe-selector-item\"\r\n                key={recipe.getId()}\r\n                ref={drag}\r\n                style={{\r\n                    opacity: isDragging || selected ? 0.5 : 1,\r\n                    cursor: 'move',\r\n                }}>\r\n            <Card.Body className=\"p-0\">\r\n                {recipe.getTitle()}\r\n            </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 10,\r\n                    right: 10,\r\n                    height: 20,\r\n                    width: 40,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Gear height=\"18\" onClick={() => onEdit(recipe)} style={{ cursor: 'pointer' }} />\r\n                &nbsp;\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const RecipeSelector: FunctionComponent<RecipeSelectorProps> = ({ recipeIndex, plan, onEdit }) => {\r\n\r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeIndex.all() : recipeIndex.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = filteredRecipes\r\n        .map((recipe) =>\r\n            <ListGroup.Item className=\"p-0\">\r\n                <RecipeListItem\r\n                    key={recipe.getId()}\r\n                    recipe={recipe}\r\n                    onEdit={onEdit}\r\n                    selected={selectedRecipeSet.has(recipe.getId())} />\r\n            </ListGroup.Item>\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2 h-100 d-flex flex-column\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search/></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <Form.Group controlId=\"recipeGroup\" className=\"flex-grow-1 overflow-auto mealee-recipe-selector-list\">\r\n                <ListGroup>{listItems}</ListGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport const RecipeCarousel: FunctionComponent<RecipeSelectorProps> = ({ recipeIndex, plan, onEdit }) => {\r\n\r\n    const [index, setIndex] = React.useState(0);\r\n\r\n    const handleSelect = (selectedIndex: number) => {\r\n      setIndex(selectedIndex);\r\n    };\r\n  \r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeIndex.all() : recipeIndex.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = filteredRecipes\r\n        .map((recipe) =>\r\n            <RecipeListItem\r\n                key={recipe.getId()}\r\n                recipe={recipe}\r\n                onEdit={onEdit}\r\n                selected={selectedRecipeSet.has(recipe.getId())} />\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search/></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <Carousel showIndicators={false} showThumbs={false}>\r\n                {listItems}\r\n            </Carousel>\r\n        </Form>\r\n    );\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Trash, Eye } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { RecipeIndex } from \"../service/RecipeDB\";\r\nimport { Recipe } from \"../model/Recipe\";\r\nimport { Plan2 } from \"../model/Plan2\";\r\n\r\nimport { useDrop, useDrag } from 'react-dnd'\r\nimport _ from 'lodash';\r\n\r\ntype RecipeBoxProps = {\r\n    bucketId: number,\r\n    recipe: Recipe,\r\n    onDelete: (recipeId: string) => void\r\n}\r\n\r\nconst RecipeBox: FunctionComponent<RecipeBoxProps> = ({ bucketId, recipe, onDelete }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId(), from: bucketId},\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'move',\r\n            }}>\r\n\r\n            <Card className=\"mealee-bucket-recipe\">\r\n                <Card.Body className=\"mealee-bucket-recipe-body\">{recipe.getTitle()}</Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    height: 40,\r\n                    width: 20,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Trash height=\"18\" onClick={() => onDelete(recipe.getId())} style={{ cursor: 'pointer' }} />\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype BucketProps = {\r\n    bucketId: number,\r\n    recipes: Recipe[],\r\n    onDelete: (bucketid: number, recipeid: string) => void\r\n}\r\n\r\nconst Bucket: FunctionComponent<BucketProps> = ({ bucketId, recipes, onDelete }) => {\r\n\r\n    return (\r\n        <Card className=\"mealee-bucket\">\r\n            <Card.Header className=\"mealee-bucket-header\">{\"Day \" + (bucketId + 1)}</Card.Header>\r\n            <Card.Body className=\"mealee-bucket-body\">\r\n                {recipes.map(r => <RecipeBox key={r.getId()} bucketId={bucketId} recipe={r}\r\n                                        onDelete={(recipeId) => onDelete(bucketId, recipeId)} />)}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\ntype DroppableBucketProps = BucketProps & {\r\n    onDrop: (buckedId: number, recipeId: string) => void,\r\n    onMove: (from: number, to: number, recipeId: string) => void\r\n}\r\n\r\nconst DroppableBucket: FunctionComponent<DroppableBucketProps> = ({ bucketId, recipes, onDrop, onMove, onDelete }) => {\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: \"recipe\",\r\n        drop: (r) => {\r\n            let r2 = r as unknown as { id: string, from?: number };\r\n            if(r2.from !== undefined)\r\n            {\r\n                onMove(r2.from, bucketId, r2.id)\r\n            } \r\n            else\r\n            {\r\n                onDrop(bucketId, r2.id)\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}\r\n        >\r\n            <Bucket bucketId={bucketId} recipes={recipes} onDelete={onDelete}></Bucket>\r\n\r\n            {isOver && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                        opacity: 0.5,\r\n                        backgroundColor: 'yellow',\r\n                    }} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PlannerProps = {\r\n    recipeDB: RecipeIndex,\r\n    plan: Plan2,\r\n    updatePlan: (plan: Plan2) => void\r\n}\r\n\r\nexport const Planner: FunctionComponent<PlannerProps> = ({ recipeDB, plan, updatePlan }) => {\r\n\r\n    const addRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.addRecipeId(bucketIdx, recipeId))\r\n    }\r\n\r\n    const deleteRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeId(bucketIdx, recipeId))\r\n    }\r\n\r\n    const moveRecipe = (from: number, to: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeId(from, recipeId).addRecipeId(to, recipeId))\r\n    }\r\n\r\n    let cols = _.range(plan.getNrBuckets()).map(i => {\r\n        return (\r\n            <Col key={i} xs=\"auto\" className=\"pr-2 pl-0\">\r\n                <DroppableBucket\r\n                    bucketId={i}\r\n                    recipes={recipeDB.getAll(plan.getRecipeIds(i))}\r\n                    onDrop={addRecipe}\r\n                    onDelete={deleteRecipe}\r\n                    onMove={moveRecipe} />\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container className=\"pt-0 pb-2 pl-0 pr-0\">\r\n            <Row>\r\n                {cols}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\"; \r\nimport { Container, Col, Row, Image } from \"react-bootstrap\";\r\n\r\nimport { RecipeSelector, RecipeCarousel } from \"./component/RecipeSelector\";\r\nimport { Planner } from \"./component/Planner\";\r\n\r\nimport Tour from 'reactour';\r\n\r\nimport App from \"./App\";\r\nimport { Dialog } from \"./AppDialogs\";\r\n\r\nexport function renderInitialBody(this: App) {\r\n    return (\r\n        <Col xs=\"auto\" className=\"pt-3\">\r\n            <Tour\r\n                isOpen={this.state.isInitialTour}\r\n                onRequestClose={() => this.setIsInitialTour(false)}\r\n                steps={[\r\n                    {\r\n                        selector: '.my-first-step-a',\r\n                        content: <Container className=\"pt-4\">Load some recipes from a file or ...</Container>,\r\n                    },\r\n                    {\r\n                        selector: '.my-first-step-b',\r\n                        content: <Container className=\"pt-4\">... or add a new recipe manually!</Container>,\r\n                    }\r\n                ]} />\r\n            <Alert key=\"recipe\" variant=\"warning\">\r\n                I do not see any recipes. <Button variant=\"link\" className=\"pt-1\" onClick={() => this.setIsInitialTour(true)}>Are you new to Mealee?</Button>\r\n            </Alert>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport function renderDesktopBody(this: App) {\r\n\r\n    return (\r\n        <>\r\n            <Col xs=\"8\" sm=\"5\" md=\"4\" lg=\"3\" xl=\"3\" className=\"h-100\" style={{ minHeight: 0 }}>\r\n                <RecipeSelector\r\n                    plan={this.state.plan2}\r\n                    recipeIndex={this.state.recipeIndex}\r\n                    onEdit={this.editRecipe} />\r\n\r\n            </Col>\r\n            <Col>\r\n                <Container className=\"pt-2 pl-0 pr-0\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Planner\r\n                                recipeDB={this.state.recipeIndex}\r\n                                plan={this.state.plan2}\r\n                                updatePlan={this.updatePlan} />\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.plan2.getNrRecipes() > 0 &&\r\n                    <Row>\r\n                        <Col className=\"pl-0\">\r\n                            <Button\r\n                            variant=\"mealee\"\r\n                            onClick={this.showDialog(Dialog.SavePlanXLS)}>\r\n                                Export plan &nbsp;\r\n                                <Image src=\"xlsx_logo.svg\" height=\"18\" />\r\n                            </Button>\r\n                            <Button\r\n                            className=\"ml-2\"\r\n                            variant=\"mealee\"\r\n                            onClick={this.showDialog(Dialog.ShoppingList)}>\r\n                                Show shopping list &nbsp;\r\n                                <Image src=\"todoist_logo.svg\" height=\"18\" />\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n                </Container>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n\r\nexport function renderMobileBody(this: App) {\r\n    return (\r\n        <>\r\n            <Col xs=\"10\">\r\n                <RecipeCarousel\r\n                    plan={this.state.plan2}\r\n                    recipeIndex={this.state.recipeIndex}\r\n                    onEdit={this.editRecipe} />\r\n\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n","import { Filter, filters } from \"../filter/Filter\";\r\n\r\nexport enum Optimization {\r\n  MinimalNrIngrediants = 1,\r\n  MaximalResueOfIngredients,\r\n}\r\n\r\nexport class PlanSettings {\r\n  constructor() {\r\n    this.nrRecipes = 5;\r\n    this.optimization = filters.all()[0];\r\n  }\r\n\r\n  public clone(): PlanSettings {\r\n    return Object.create(this);\r\n  }\r\n\r\n  public nrRecipes: number;\r\n  public optimization: Filter;\r\n}\r\n","import {\r\n  Index,\r\n  createIndex,\r\n  addDocumentToIndex,\r\n  removeDocumentFromIndex,\r\n} from \"ndx\";\r\nimport { query, QueryResult } from \"ndx-query\";\r\nimport { words } from \"lodash\";\r\n\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nimport { Map } from \"immutable\";\r\n\r\nexport class RecipeIndex {\r\n  private readonly recipesMap: Map<string, Recipe>;\r\n  private readonly index: Index<string>;\r\n\r\n  private readonly fieldAccessors = [\r\n    (r: Recipe) => r.getTitle(),\r\n    (r: Recipe) => r.getSummary() ?? \"\",\r\n    (r: Recipe) =>\r\n      r\r\n        .getIngredients()\r\n        .map((i) => i.getName())\r\n        .join(\" \"),\r\n  ];\r\n\r\n  private readonly fieldBoostFactors = [2, 0.5, 1];\r\n\r\n  constructor(index?: Index<string>, recipesMap?: Map<string, Recipe>) {\r\n    this.index = index ? index : createIndex<string>(3);\r\n    this.recipesMap = recipesMap ? recipesMap : Map({});\r\n  }\r\n\r\n  private termFilter = (term: string) => {\r\n    return term\r\n      .normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .toLowerCase();\r\n  };\r\n\r\n  public static new = () => {\r\n    return new RecipeIndex();\r\n  };\r\n\r\n  // `add()` function will add documents to the index.\r\n  public add = (r: Recipe) => {\r\n    let key = r.getId();\r\n\r\n    let toUpdate = true;\r\n\r\n    if (this.recipesMap.has(key)) {\r\n      if (JSON.stringify(this.recipesMap.get(key)) === JSON.stringify(r)) {\r\n        toUpdate = false;\r\n      }\r\n    }\r\n\r\n    if (toUpdate) {\r\n      // Don't add the same document twice, ndx becomes crazy...\r\n      this.delete(key);\r\n      let newMap = this.recipesMap.set(key, r);\r\n\r\n      addDocumentToIndex(\r\n        this.index,\r\n        this.fieldAccessors,\r\n        // Tokenizer is a function that breaks text into words, phrases, symbols, or other meaningful elements\r\n        // called tokens.\r\n        // Lodash function `words()` splits string into an array of its words, see https://lodash.com/docs/#words for\r\n        // details.\r\n        words,\r\n        // Filter is a function that processes tokens and returns terms, terms are used in Inverted Index to\r\n        // index documents.\r\n        this.termFilter,\r\n        // Document key, it can be a unique document id or a reference to a document if you want to store all documents\r\n        // in memory.\r\n        key,\r\n        // Document.\r\n        r\r\n      );\r\n\r\n      return new RecipeIndex(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public addAll = (recipes: Recipe[]) => {\r\n    return recipes.reduce((idx: RecipeIndex, recipe: Recipe) => {\r\n      return idx.add(recipe);\r\n    }, this);\r\n  };\r\n\r\n  // `search()` function will be used to perform queries.\r\n  public search = (q: string) =>\r\n    query<string>(\r\n      this.index,\r\n      this.fieldBoostFactors,\r\n      // BM25 ranking function constants:\r\n      1.2, // BM25 k1 constant, controls non-linear term frequency normalization (saturation).\r\n      0.75, // BM25 b constant, controls to what degree document length normalizes tf values.\r\n      words,\r\n      this.termFilter,\r\n      // Set of removed documents, in this example we don't want to support removing documents from the index,\r\n      // so we can ignore it by specifying this set as `undefined` value.\r\n      undefined,\r\n      q\r\n    ).reduce((acc: QueryResult<Recipe>[], res) => {\r\n      let r = this.recipesMap.get(res.key);\r\n      if (r) {\r\n        acc.push({ key: r, score: res.score });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n  public all = () => {\r\n    return Array.from(this.recipesMap.values());\r\n  };\r\n\r\n  public get = (key: string) => {\r\n    return this.recipesMap.get(key);\r\n  };\r\n\r\n  public delete = (key: string) => {\r\n    if (this.recipesMap.has(key)) {\r\n      let newMap = this.recipesMap.delete(key);\r\n      removeDocumentFromIndex(this.index, new Set(), key);\r\n      return new RecipeIndex(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public getAll = (keys: string[]) => {\r\n    return keys.reduce((acc: Recipe[], key) => {\r\n      let r = this.recipesMap.get(key);\r\n      if (r) {\r\n        acc.push(r);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  public count = () => {\r\n    return this.recipesMap.size;\r\n  };\r\n}\r\n","import { List, Set } from \"immutable\";\r\n\r\nexport class Plan2 {\r\n\r\n  // Don't store Recipes, only ids. They are immutable, so if they change...\r\n  private buckets = List<Set<string>>();\r\n\r\n  private constructor(buckets: List<Set<string>>) {\r\n    this.buckets = buckets;\r\n  }\r\n\r\n  public static new = (nrBuckets: number) => {\r\n    return new Plan2(List().setSize(nrBuckets));\r\n  };\r\n\r\n  public setNrBuckets(nrBuckets: number) {\r\n    return new Plan2(this.buckets.setSize(nrBuckets));\r\n  }\r\n\r\n  public getNrBuckets() {\r\n    return this.buckets.size;\r\n  }\r\n\r\n  public getNrRecipes() {\r\n    let ret = 0;\r\n    for (let bucket of this.buckets) {\r\n        if (bucket) {\r\n            ret += bucket.count();\r\n        }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public addRecipeId(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Set();\r\n    return new Plan2(this.buckets.set(bucketNr, bucket.add(recipeId)));\r\n  }\r\n\r\n  public deleteRecipeId(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Set();\r\n    return new Plan2(this.buckets.set(bucketNr, bucket.delete(recipeId)));\r\n  }\r\n\r\n  public getRecipeIds(bucketNr: number) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Set();\r\n    return Array.from(bucket);\r\n  }\r\n\r\n  public getAllRecipeIds(deDuplicate: boolean = true) {\r\n    if(deDuplicate)\r\n    {\r\n        let ids = Set<string>();\r\n        for (let bucket of this.buckets) {\r\n            if (bucket) {\r\n                ids = ids.concat(bucket);\r\n            }\r\n        }\r\n        return Array.from(ids);\r\n    }\r\n    else\r\n    {\r\n        let ids = List<string>();\r\n        for (let bucket of this.buckets) {\r\n          if (bucket) {\r\n            ids = ids.concat(bucket);\r\n          }\r\n        }\r\n        return Array.from(ids);\r\n    }\r\n  }\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Upload, Download, PlusCircle, Gear } from 'react-bootstrap-icons';\r\n\r\ntype IconBarProps = {\r\n    onLoadFile: () => void;\r\n    onNewRecipe: () => void;\r\n    onSaveFile: () => void;\r\n    onEditSettings: () => void;\r\n    unsavedChanges: boolean;\r\n};\r\n\r\nexport const IconBar: FunctionComponent<IconBarProps> = ({\r\n    onLoadFile,\r\n    onNewRecipe,\r\n    onSaveFile,\r\n    onEditSettings,\r\n    unsavedChanges\r\n}) => {\r\n    return (\r\n        <Container className=\"pl-0 ml-2 mr-2 p-0\">\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"upload\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-upload\">\r\n                                Load recipes\r\n                </Tooltip>\r\n                        }>\r\n                        <Upload\r\n                            className=\"my-first-step-a\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onLoadFile} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"download\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-download\">\r\n                                Save recipes\r\n                </Tooltip>\r\n                        }>\r\n                        {unsavedChanges\r\n                            ? <Download\r\n                                className=\"text-warning\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onSaveFile} />\r\n                            : <Download\r\n                                style={{ color: \"#ffffff40\" }} />\r\n                        }\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Add new recipe\r\n                </Tooltip>\r\n                        }>\r\n                        <PlusCircle\r\n                            className=\"my-first-step-b\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onNewRecipe} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Plan settings\r\n                </Tooltip>\r\n                        }>\r\n\r\n                        <Gear style={{\r\n                            color: \"#ffffff\",\r\n                            cursor: \"pointer\"\r\n                        }} onClick={onEditSettings} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nfunction getVersionNumber() {\r\n    return `${process.env.REACT_APP_VERSION}`;\r\n}\r\n\r\nexport const MenuBar: FunctionComponent = () => {\r\n    return (\r\n        <Navbar bg=\"mealee-menu\" variant=\"dark\" className=\"pl-1\">\r\n            <Navbar.Brand className=\"logo\" href=\"#home\">Mealee</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"container-fluid\">\r\n                    <Nav.Item className=\"ml-auto\">\r\n                        <Nav.Link>v{getVersionNumber()}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport * as AppDialogs from \"./AppDialogs\";\r\nimport * as AppBodies from \"./AppBodies\";\r\n\r\nimport { RecipeIndex } from \"./service/RecipeDB\";\r\n\r\nimport { PlanSettings } from \"./model/PlanSettings\";\r\nimport { Plan2 } from \"./model/Plan2\";\r\nimport { Recipe, serializeRecipes, deserializeRecipes } from \"./model/Recipe\";\r\n\r\nimport { IconBar } from \"./component/IconBar\";\r\nimport { MenuBar } from \"./component/MenuBar\";\r\n\r\nimport { Beforeunload } from \"react-beforeunload\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\ntype AppState = {\r\n  recipeIndex: RecipeIndex;\r\n  planSettings: PlanSettings;\r\n  plan2: Plan2;\r\n  showDialog?: Dialog;\r\n  recipeToEdit?: Recipe;\r\n  error: string | null;\r\n  unsavedChanges: boolean;\r\n  isInitialTour: boolean;\r\n};\r\n\r\nenum Dialog {\r\n  LoadFile,\r\n  SaveFile,\r\n  RecipeEditor,\r\n  SavePlanXLS,\r\n  ShoppingList,\r\n  PlanSettings\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    let recipeIndex = new RecipeIndex();\r\n    let planSettings = new PlanSettings();\r\n\r\n    // Hard binding is needed if `loadFile` do not use arrow notation\r\n    // this.loadFile = this.loadFile.bind(this);\r\n    this.state = {\r\n      recipeIndex: recipeIndex,\r\n      planSettings: planSettings,\r\n      plan2: Plan2.new(planSettings.nrRecipes),\r\n      showDialog: undefined,\r\n      recipeToEdit: undefined,\r\n      error: null,\r\n      unsavedChanges: false,\r\n      isInitialTour: false\r\n    };\r\n  }\r\n\r\n  public renderDialog = AppDialogs.renderDialog;\r\n  public renderInitialBody = AppBodies.renderInitialBody;\r\n  public renderDesktopBody = AppBodies.renderDesktopBody;\r\n  public renderMobileBody = AppBodies.renderMobileBody;\r\n\r\n  addRecipes = (newRecipes: Recipe[], fromFile = false) => {\r\n    this.setState((st) => {\r\n      // You want to save if it is not a first file load\r\n      let needsSave =\r\n        st.unsavedChanges || !(fromFile && st.recipeIndex.count() === 0);\r\n\r\n      let ret = {};\r\n      let newRecipeIndex = st.recipeIndex.addAll(newRecipes);\r\n\r\n      if (newRecipeIndex !== st.recipeIndex) {\r\n        ret = {\r\n          recipeIndex: newRecipeIndex,\r\n          unsavedChanges: needsSave,\r\n        };\r\n      }\r\n\r\n      return ret;\r\n    });\r\n  };\r\n\r\n  setIsInitialTour = (t: boolean) => {\r\n    this.setState({ isInitialTour: t });\r\n  }\r\n\r\n  saveRecipe = (recipe: Recipe) => {\r\n    this.addRecipes([recipe]);\r\n    this.closeRecipeEditor();\r\n  };\r\n\r\n  onFileLoaded = (ev: ProgressEvent<FileReader>) => {\r\n    let res = ev.target?.result;\r\n\r\n    if (typeof res == \"string\") {\r\n      try {\r\n        this.addRecipes(deserializeRecipes(res), true);\r\n      } catch (e) {\r\n        this.setState({ error: e.message });\r\n      }\r\n    }\r\n    this.closeDialog();\r\n  };\r\n\r\n  loadFile = (file: File) => {\r\n    var reader = new FileReader();\r\n    reader.onload = (ev) => this.onFileLoaded(ev);\r\n    reader.readAsText(file, \"UTF-8\");\r\n  };\r\n\r\n  genRecipeFileContent = () => {\r\n    return serializeRecipes(this.state.recipeIndex.all());\r\n  };\r\n\r\n  fileSaved = () => {\r\n    this.setState({ unsavedChanges: false });\r\n    this.closeDialog();\r\n  };\r\n\r\n  showDialog = (dialog: Dialog) => {\r\n    return () => this.setState({ showDialog: dialog });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ showDialog: undefined });\r\n  };\r\n\r\n  closeRecipeEditor = () => {\r\n    this.setState({ recipeToEdit: undefined, showDialog: undefined });\r\n  };\r\n\r\n  dismissError = () => {\r\n    this.setState({ error: null });\r\n  };\r\n\r\n  updatePlanSettings = (ps: PlanSettings) => {\r\n    this.setState((st) => {\r\n      return {\r\n        planSettings: ps,\r\n        plan2: st.plan2.setNrBuckets(ps.nrRecipes)\r\n      };\r\n    });\r\n  };\r\n\r\n  updatePlan = (plan: Plan2) => {\r\n    this.setState({\r\n      plan2: plan\r\n    });\r\n  };\r\n\r\n  editRecipe = (recipe: Recipe) => {\r\n    this.setState({ showDialog: Dialog.RecipeEditor, recipeToEdit: recipe });\r\n  };\r\n\r\n  deleteRecipe = (recipe: Recipe) => {\r\n    this.setState((st) => {\r\n      let newRecipeIndex = st.recipeIndex.delete(recipe.getId());\r\n\r\n      return {\r\n        recipeIndex: newRecipeIndex,\r\n        showDialog: undefined,\r\n        recipeToEdit: undefined,\r\n        unsavedChanges: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render(this: App) {\r\n\r\n    return (\r\n      <Container fluid className=\"d-flex flex-column vh-100\">\r\n        <Alert\r\n          variant=\"danger\"\r\n          onClose={this.dismissError}\r\n          show={!!this.state.error}\r\n          dismissible>\r\n          {this.state.error}\r\n        </Alert>\r\n\r\n        {this.state.unsavedChanges &&\r\n          <Beforeunload onBeforeunload={() => \"You'll lose your data!\"} />\r\n        }\r\n\r\n        {this.renderDialog()}\r\n\r\n        <Row>\r\n          <Col>\r\n            <MenuBar />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"h-100\" style={{ minHeight: 0 }}>\r\n          <Col xs=\"auto\" className=\"pl-0 pr-2 pt-3\">\r\n            <IconBar\r\n              onLoadFile={this.showDialog(Dialog.LoadFile)}\r\n              onNewRecipe={this.showDialog(Dialog.RecipeEditor)}\r\n              onSaveFile={this.showDialog(Dialog.SaveFile)}\r\n              onEditSettings={this.showDialog(Dialog.PlanSettings)}\r\n              unsavedChanges={this.state.unsavedChanges} />\r\n          </Col>\r\n          {this.state.recipeIndex.count() === 0 && this.renderInitialBody()}\r\n          {this.state.recipeIndex.count() > 0 && !isMobileOnly && this.renderDesktopBody()}\r\n          {this.state.recipeIndex.count() > 0 && isMobileOnly && this.renderMobileBody()}\r\n        </Row>\r\n\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { TouchBackend } from 'react-dnd-touch-backend'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n      <App />\r\n    </DndProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}