{"version":3,"sources":["service/RecipeService.ts","component/LoadFileDialog.tsx","component/SaveFileDialog.tsx","component/Settings.tsx","model/Recipe.ts","component/IngredientLang.ts","component/RecipeEditor.tsx","AppDialogs.tsx","PlanExporter.ts","model/ScoringFun.ts","model/Scoring.ts","scoring/Scoring.ts","component/RecipeQuickView.tsx","component/RecipeSelector.tsx","model/Plan.ts","component/Planner.tsx","AppBodies.tsx","db/RecipeDB.ts","model/Settings.ts","component/IconBar.tsx","component/MenuBar.tsx","App.tsx","index.js"],"names":["RecipeService","db","this","ingredients","Set","all","forEach","r","getIngredients","i","add","getName","toLowerCase","c","Intl","Collator","Array","from","sort","compare","units","getUnit","LoadFileDialog","title","loadButtonTitle","onClose","onLoad","React","useState","file","setFile","Modal","show","onHide","Header","closeButton","Title","Body","Form","FormControl","type","onChange","e","target","files","Footer","Button","variant","onClick","disabled","SaveFileDialog","saveButtonTitle","onSave","data","initialFileName","extension","fileName","setFileName","Group","controlId","Label","Control","value","length","download","SettingsDialog","props","Tabs","defaultActiveKey","Tab","eventKey","Container","className","onSubmit","preventDefault","as","settings","nrRecipes","newNrRecipes","newSettings","clone","onUpdate","changeNrRecipes","parseInt","key","Ingredient","name","amount","unit","o","Error","undefined","Recipe","id","comment","source","serving","labels","map","toJSON","replace","Math","random","toString","isArray","fromJSON","error","parseIngredients","text","errors","lines","split","line","trim","parts","push","CodeMirror","Pos","to","message","startpos","startAmount","endAmount","s","Number","parseFloat","autocomplete","cm","cursor","getCursor","getLine","start","ch","end","nrpart","substring","match","charAt","word","slice","trimLeft","selection","filter","indexOf","startsWith","list","defineMode","Location","startState","location","token","stream","state","sol","next","eatWhile","registerHelper","Dialog","RecipeEditor","recipe","Object","create","recipeJSON","setRecipeJSON","isTitleInvalid","setIsTitleInvalid","isIngredientsInvalid","setIsIngredientsInvalid","getAmount","join","ingredientCSV","setIngredientCSV","getLabels","l","toUpperCase","labelCSV","setLabelCSV","focusElement","createRef","ingredientEditorElement","onEntered","current","focus","fromTextArea","lineNumbers","mode","gutters","lint","extraKeys","on","instance","updateIngredients","getValue","showHint","hint","recipeService","getUnits","completeSingle","closeOnUnfocus","placeholder","isInvalid","newVal","currentTarget","ref","size","Feedback","rows","isNaN","onDelete","calculateIngredientMap","recipes","ingredientMap","Map","t","pr","ingredientName","oneIngredientRecord","get","set","oneRecipeRecord","getServing","calculateShoppingList","ingredientList","ingredient","values","oneUsage","scale","ingredientsRows","amounts","exportShoppingList","recipeIndex","plan","plannedRecipes","getAllPlannedRecipes","getAll","getRecipeId","_","zip","keys","res","row","shift","exportPlan","zippedPlannedRecipes","uniqueRecipes","wb","XLSX","utils","book_new","planRows","range","getNrBuckets","bid","getPlannedRecipes","concat","getTitle","planWS","aoa_to_sheet","book_append_sheet","ingredientsWS","mapHeaderRow","unshift","mapDataRows","recipeIngredient","au","mapRows","mapWS","recipeRows","getComment","getSource","recipeWS","substr","bytes","write","bookType","bookSST","Blob","renderDialog","showDialog","LoadFile","closeDialog","loadFile","SaveFile","genRecipeFileContent","fileSaved","closeRecipeEditor","saveRecipe","deleteRecipe","recipeToEdit","SavePlanXLS","ShoppingList","cols","readOnly","PlanSettings","updateSettings","ScoringFun","script","RecipeScoring","scorings","sum","addScoring","scoringFun","score","getSum","getScorings","Scoring","scoring","recipeId","sf","has","rs","getScoring","scoringFuns","labelDict","countBy","_scoreRecipes","fun","evaluate","scoreRecipes","p","Parser","rlabels","precipeids","precipes","plabels","flatMap","functions","intersection","bs","hasLabel","label","ld","planHasLabel","planHasRecipe","getId","parse","getScript","max","normalize","curr","scores","RecipeQuickView","n","Col","sm","scoringLines","oneScore","Row","xs","toFixed","height","fluid","RecipeListItem","selected","onEdit","useDrag","item","collect","monitor","isDragging","drag","style","position","width","backgroundColor","Card","opacity","top","transform","right","zIndex","OverlayTrigger","placement","overlay","Popover","Content","RecipeSelector","setFilter","debouncedSetFilter","useCallback","debounce","filteredRecipes","search","selectedRecipeSet","getAllRecipeIds","listItems","sortBy","ListGroup","Item","InputGroup","Prepend","Text","event","PlannedRecipe","Plan","buckets","List","nrBuckets","setSize","ret","bucket","bucketNr","plannedRecipe","delete","valueSeq","ids","new","RecipeBox","bucketId","recipeDB","left","Tooltip","onWheel","newServing","deltaY","min","fontSize","paddingTop","paddingRight","Bucket","DroppableBucket","onDrop","onMove","useDrop","accept","drop","dragr","isOver","Planner","updatePlan","addRecipe","bucketIdx","setPlannedRecipe","deleteRecipeId","updatePlannedRecipe","movePlannedRecipe","renderInitialBody","isOpen","isInitialTour","onRequestClose","setIsInitialTour","steps","selector","content","Alert","renderDesktopBody","md","lg","xl","minHeight","editRecipe","getNrRecipes","Image","src","RecipeIndex","index","recipesMap","fieldAccessors","fieldBoostFactors","termFilter","term","toUpdate","JSON","stringify","newMap","addDocumentToIndex","words","addAll","reduce","idx","q","query","acc","removeDocumentFromIndex","count","createIndex","Settings","IconBar","onLoadFile","onNewRecipe","onSaveFile","onEditSettings","unsavedChanges","color","MenuBar","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","process","App","AppDialogs","AppBodies","addRecipes","newRecipes","fromFile","setState","st","needsSave","newRecipeIndex","onFileLoaded","ev","result","json","version","deserializeRecipes","reader","FileReader","onload","readAsText","str","TextEncoder","encode","serializeRecipes","dialog","dismissError","ps","setNrBuckets","planSettings","dismissible","onBeforeunload","isMobileOnly","Component","ReactDOM","render","StrictMode","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.b7905d87.chunk.js","sourcesContent":["import { RecipeIndex } from '../db/RecipeDB'\r\n\r\nexport class RecipeService {\r\n\r\n    private readonly db: RecipeIndex;\r\n\r\n    constructor(db: RecipeIndex) {\r\n        this.db = db;\r\n    }\r\n\r\n    public getIngredients() {\r\n\r\n        let ingredients = new Set<string>();\r\n\r\n        this.db.all().forEach(r => {\r\n            r.getIngredients().forEach(i => {\r\n                ingredients.add(i.getName().toLowerCase());\r\n            })\r\n        });\r\n\r\n        const c = new Intl.Collator();\r\n        return Array.from(ingredients).sort(c.compare);\r\n    }\r\n\r\n    public getUnits() {\r\n\r\n        let units = new Set<string>();\r\n\r\n        this.db.all().forEach(r => {\r\n            r.getIngredients().forEach(i => {\r\n                units.add(i.getUnit().toLowerCase());\r\n            })\r\n        });\r\n\r\n        const c = new Intl.Collator();\r\n        return Array.from(units).sort(c.compare);\r\n    }\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\ntype LoadFileDialogProps = {\r\n    title: string,\r\n    loadButtonTitle: string,\r\n    onClose: () => void,\r\n    onLoad: (file: File) => void\r\n}\r\n\r\nexport const LoadFileDialog: FunctionComponent<LoadFileDialogProps> = ({title, loadButtonTitle, onClose, onLoad}) => {\r\n\r\n    const [file, setFile] = React.useState<null | File>(null);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <FormControl type=\"file\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                                if(e.target.files)\r\n                                                {\r\n                                                    setFile(e.target.files[0])\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    setFile(null)\r\n                                                }\r\n                                            }}/>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!file} \r\n                        onClick={() => {if(file) onLoad(file)}}>{loadButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, Button} from 'react-bootstrap';\r\n\r\nimport download from 'downloadjs'\r\n\r\ntype SaveFileDialogProps = {\r\n    title: string,\r\n    saveButtonTitle: string,\r\n    data: Blob,\r\n    type: string,\r\n    initialFileName: string,\r\n    extension: string,\r\n    onClose: () => void,\r\n    onSave: () => void\r\n}\r\n\r\nexport const SaveFileDialog: FunctionComponent<SaveFileDialogProps> \r\n                = ({title, saveButtonTitle, onClose, onSave, data, type, initialFileName, extension }) => {\r\n\r\n    const [fileName, setFileName] = React.useState(initialFileName);\r\n\r\n    const startDownload = () => {\r\n        download(data, fileName+\".\"+extension, type)\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <Form.Group controlId=\"formBasicFileName\">\r\n        <Form.Label>File name</Form.Label>\r\n        <Form.Control type=\"fileName\" value={fileName} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFileName(e.target.value)}/>\r\n        </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!fileName || fileName.length===0} \r\n                        onClick={() => {startDownload(); onSave()}}>{saveButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Modal, Form, Button, Tabs, Tab, Container } from 'react-bootstrap';\r\n\r\nimport { Settings } from '../model/Settings';\r\n\r\ntype SettingsDialogProps = {\r\n    settings: Settings,\r\n    onClose: () => void,\r\n    onUpdate: (planSettings: Settings) => void\r\n}\r\n\r\nexport const SettingsDialog: FunctionComponent<SettingsDialogProps> = (props) => {\r\n\r\n    const changeNrRecipes = (newNrRecipes: number) => {\r\n        let newSettings = props.settings.clone();\r\n        newSettings.nrRecipes = newNrRecipes;\r\n        props.onUpdate(newSettings);\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Tabs defaultActiveKey=\"general\">\r\n                    <Tab eventKey=\"general\" title=\"General\">\r\n                        <Container className=\"p-3\">\r\n                            <Form onSubmit={(e) => e.preventDefault()}>\r\n                                <Form.Group controlId=\"nrRecipes\">\r\n                                    <Form.Label>Number of recipes:</Form.Label>\r\n                                    <Form.Control as=\"select\" value={props.settings.nrRecipes}\r\n                                        onChange={(e) => changeNrRecipes(parseInt(e.target.value))}>\r\n                                        <option key=\"3\">3</option>\r\n                                        <option key=\"4\">4</option>\r\n                                        <option key=\"5\">5</option>\r\n                                        <option key=\"6\">6</option>\r\n                                        <option key=\"7\">7</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Container>\r\n                    </Tab>\r\n                    <Tab eventKey=\"scoring\" title=\"Scoring\">\r\n\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n","export interface IngredientJSON {\r\n  name: string;\r\n  amount: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface RecipeJSON {\r\n  id: string;\r\n  title: string;\r\n  source?: string;\r\n  comment?: string;\r\n  serving?: number;\r\n  ingredients: IngredientJSON[];\r\n  labels?: string[];\r\n}\r\n\r\ninterface RecipeFileJSON {\r\n  version: number;\r\n  recipes: RecipeJSON[];\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Ingredient {\r\n  private constructor(name: string, amount: number, unit: string) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n    this.unit = unit;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  public getUnit(): string {\r\n    return this.unit;\r\n  }\r\n\r\n  public static fromJSON(o: IngredientJSON): Ingredient {\r\n    if (!o.name) {\r\n      throw new Error(\"Missing ingredient name\");\r\n    }\r\n\r\n    if (!o.unit) {\r\n      throw new Error(\"Missing ingredient unit\");\r\n    }\r\n\r\n    if (o.amount === undefined) {\r\n      throw new Error(\"Missing ingredient amount\");\r\n    }\r\n\r\n    return new Ingredient(o.name, o.amount, o.unit);\r\n  }\r\n\r\n  public toJSON(): IngredientJSON {\r\n    return {\r\n      name: this.name,\r\n      amount: this.amount,\r\n      unit: this.unit,\r\n    };\r\n  }\r\n\r\n  private name: string;\r\n  private amount: number;\r\n  private unit: string;\r\n}\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Recipe {\r\n  private constructor(id: string, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.ingredients = [];\r\n    this.labels = [];\r\n    this.serving = 4;\r\n  }\r\n\r\n  public static error = new Recipe(\"error\", \"Recipe cannot be found\")\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public getTitle(): string {\r\n    return this.title;\r\n  }\r\n\r\n  public getComment(): string | undefined {\r\n    return this.comment;\r\n  }\r\n\r\n  public getSource(): string | undefined {\r\n    return this.source;\r\n  }\r\n\r\n  public getServing(): number {\r\n    return this.serving;\r\n  }\r\n\r\n  public getIngredients(): Ingredient[] {\r\n    return this.ingredients;\r\n  }\r\n\r\n  public getLabels(): string[] {\r\n    return this.labels;\r\n  }\r\n\r\n  public static fromJSON(o: RecipeJSON): Recipe {\r\n    if (!o.id) {\r\n      o.id = uuidv4();\r\n    }\r\n\r\n    if (!o.title) {\r\n      throw new Error(\"Missing recipe title\");\r\n    }\r\n\r\n    let r = new Recipe(o.id, o.title);\r\n\r\n    r.comment = o.comment;\r\n    r.source = o.source;\r\n    r.serving = o.serving ?? 4;\r\n    r.labels = o.labels ?? [];\r\n\r\n    if (Array.isArray(o.ingredients)) {\r\n      r.ingredients = o.ingredients.map((i) => Ingredient.fromJSON(i));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  public toJSON(): RecipeJSON {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      comment: this.comment,\r\n      source: this.source,\r\n      serving: this.serving,\r\n      ingredients: this.ingredients.map((i) => i.toJSON()),\r\n      labels: this.labels\r\n    };\r\n  }\r\n\r\n  private id: string;\r\n  private title: string;\r\n  private comment?: string;\r\n  private source?: string;\r\n  private serving: number;\r\n  private ingredients: Ingredient[];\r\n  private labels: string[];\r\n}\r\n\r\nexport function serializeRecipes(recipes: Recipe[]) {\r\n  let str = JSON.stringify({ version: 1, recipes: recipes });\r\n  let bytes = new TextEncoder().encode(str);\r\n  let blob = new Blob([bytes], {\r\n    type: \"application/json;charset=utf-8\",\r\n  });\r\n  return blob;\r\n}\r\n\r\nexport function deserializeRecipes(data: string) {\r\n  let json = JSON.parse(data);\r\n\r\n  if (Array.isArray(json)) {\r\n    let v0: RecipeJSON[] = json;\r\n    return v0.map(Recipe.fromJSON);\r\n  }\r\n\r\n  if (typeof json === \"object\") {\r\n    let r: RecipeFileJSON = json;\r\n\r\n    if (typeof r.version !== \"undefined\") {\r\n      if (r.version !== 1) {\r\n        throw new Error(\"Invalid recipe file version\");\r\n      }\r\n\r\n      if (Array.isArray(r.recipes)) {\r\n        return r.recipes.map(Recipe.fromJSON);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Invalid recipe file\");\r\n}\r\n","import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\n\r\nimport { IngredientJSON } from '../model/Recipe';\r\n\r\nCodeMirror.defineMode(\"ingredients\", () => {\r\n  var Location = {\r\n    INGREDIENT: 0,\r\n    AMOUNT: 1,\r\n    UNIT: 2,\r\n    ERROR: 3,\r\n  };\r\n\r\n  return {\r\n    startState: function () {\r\n      return {\r\n        location: Location.INGREDIENT,\r\n      };\r\n    },\r\n    token: function (stream, state) {\r\n      if (stream.sol()) {\r\n        state.location = Location.INGREDIENT;\r\n      }\r\n\r\n      var ch = stream.next();\r\n\r\n      if (ch === \";\") {\r\n        if (state.location === Location.INGREDIENT)\r\n          state.location = Location.AMOUNT;\r\n        else if (state.location === Location.AMOUNT)\r\n          state.location = Location.UNIT;\r\n        else state.location = Location.ERROR;\r\n      }\r\n\r\n      if (state.location === Location.ERROR) {\r\n        return \"error\";\r\n      }\r\n\r\n      if (ch === \";\") {\r\n        return \"keyword\";\r\n      }\r\n\r\n      if (state.location === Location.INGREDIENT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      if (state.location === Location.AMOUNT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"number\";\r\n      }\r\n\r\n      if (state.location === Location.UNIT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      return \"error\";\r\n    },\r\n  };\r\n});\r\n\r\nexport function parseIngredients(text: string, errors: CodeMirror.Annotation[]) {\r\n\r\n  let ingredients: IngredientJSON[] = [];\r\n\r\n  let lines: string[] = text.split(/\\r?\\n/);\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let line = lines[i];\r\n\r\n    if (line.trim().length > 0) {\r\n      let parts = line.split(\";\");\r\n\r\n      if (parts.length < 3) {\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, 0),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Not enough parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      } else if (parts.length > 3) {\r\n        let startpos = parts[0].length + parts[1].length + parts[2].length + 2;\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, startpos),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Too many parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      }\r\n      else {\r\n        let startAmount = parts[0].length + 1;\r\n        let endAmount = startAmount + parts[1].length;\r\n\r\n        parts = parts.map(s => s.trim());\r\n\r\n        if (parts[0].length === 0 || parts[1].length === 0 || parts[2].length === 0) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, 0),\r\n            to: CodeMirror.Pos(i, line.length),\r\n            message: \"Empty part(s). Syntax: <name>;<amount>;<unit>\",\r\n          });\r\n        }\r\n        else if (\"\" + Number.parseFloat(parts[1]) !== parts[1]) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, startAmount),\r\n            to: CodeMirror.Pos(i, endAmount),\r\n            message: \"Amount should be a number.\",\r\n          });\r\n        }\r\n        else {\r\n          ingredients.push({ name: parts[0], amount: Number.parseFloat(parts[1]), unit: parts[2] })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ingredients;\r\n}\r\n\r\nCodeMirror.registerHelper(\"lint\", \"ingredients\", function (text: string) {\r\n  let errors: CodeMirror.Annotation[] = [];\r\n  parseIngredients(text, errors);\r\n  return errors;\r\n});\r\n\r\nexport function autocomplete(ingredients: string[], units: string[]) {\r\n  return function (\r\n    cm: CodeMirror.Editor,\r\n  ) {\r\n\r\n    var cursor = cm.getCursor(),\r\n      line = cm.getLine(cursor.line);\r\n    var start = cursor.ch,\r\n      end = cursor.ch;\r\n\r\n    let nrpart = (line.substring(0, end).match(/;/g) || []).length;\r\n\r\n    if (nrpart !== 0 && nrpart !== 2) {\r\n      return null;\r\n    }\r\n\r\n    while (start && line.charAt(start - 1) !== \";\") --start;\r\n    while (end < line.length && line.charAt(end) !== \";\") ++end;\r\n    var word = line.slice(start, end).trimLeft().toLowerCase();\r\n\r\n    let selection =\r\n      nrpart === 0\r\n        ? ingredients.filter((i) => i.indexOf(word) >= 0)\r\n        : units.filter((i) => i.startsWith(word));\r\n\r\n    if(selection.length === 1 && selection[0] === word) {\r\n        selection = []\r\n    }\r\n\r\n    return {\r\n      list: selection,\r\n      from: CodeMirror.Pos(cursor.line, start),\r\n      to: CodeMirror.Pos(cursor.line, end),\r\n    };\r\n  }\r\n};\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { RecipeJSON, Recipe, Ingredient } from '../model/Recipe';\r\nimport { RecipeService } from '../service/RecipeService';\r\n\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/addon/lint/lint.css';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/selection/active-line.js';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/lint/lint.js';\r\nimport 'codemirror/addon/display/placeholder.js';\r\n\r\nimport { autocomplete, parseIngredients } from './IngredientLang'\r\n\r\ntype RecipeEditorProps = {\r\n    recipe?: Recipe,\r\n    recipeService: RecipeService,\r\n    onClose: () => void,\r\n    onSave: (recipe: Recipe) => void,\r\n    onDelete: (recipe: Recipe) => void\r\n}\r\n\r\nexport const RecipeEditor: FunctionComponent<RecipeEditorProps> = (props) => {\r\n\r\n    const [recipeJSON, setRecipeJSON] = React.useState<RecipeJSON>(\r\n        props.recipe ? props.recipe.toJSON() : Object.create({}));\r\n    const [isTitleInvalid, setIsTitleInvalid] = React.useState(!props.recipe);\r\n    const [isIngredientsInvalid, setIsIngredientsInvalid] = React.useState(false);\r\n\r\n    const generateIngredientCSV = (ingredients: Ingredient[]) => {\r\n        return ingredients.map(i => i.getName() + \";\" + i.getAmount() + \";\" + i.getUnit()).join(\"\\n\")\r\n    }\r\n\r\n    const [ingredientCSV, setIngredientCSV] = React.useState(props.recipe ?\r\n        generateIngredientCSV(props.recipe.getIngredients()) : \"\");\r\n\r\n    const generateLabelCSV = (labels: string[]) => {\r\n        return labels.map(l => l.toUpperCase()).join(\", \")\r\n    }\r\n\r\n    const [labelCSV, setLabelCSV] = React.useState(props.recipe ?\r\n        generateLabelCSV(props.recipe.getLabels()) : \"\");\r\n\r\n    const setTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal = e.currentTarget.value;\r\n        setIsTitleInvalid(!newVal || newVal.length === 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ title: newVal } }))\r\n    }\r\n\r\n    const setComment = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ comment: newVal } }))\r\n    }\r\n\r\n    const setSource = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ source: newVal } }))\r\n    }\r\n\r\n    const setServing = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: number | undefined = Number.parseInt(e.currentTarget.value)\r\n        if (isNaN(newVal)) newVal = undefined\r\n        setRecipeJSON(r => ({ ...r, ...{ serving: newVal } }))\r\n    }\r\n\r\n    const updateLabels = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value.toUpperCase();\r\n        setLabelCSV(text)\r\n        let labels = text.split(\",\").map(l => l.trim()).filter(l => l.length > 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ labels: labels } }))\r\n    }\r\n\r\n    const updateIngredients = (text: string) => {\r\n\r\n        setIngredientCSV(text);\r\n\r\n        let errors: CodeMirror.Annotation[] = [];\r\n        let ingredients = parseIngredients(text, errors);\r\n        let invalid = errors.length > 0;\r\n\r\n        if (invalid) {\r\n            setIsIngredientsInvalid(true);\r\n        }\r\n        else {\r\n            setIsIngredientsInvalid(false);\r\n            setRecipeJSON(r => ({ ...r, ...{ ingredients: ingredients } }))\r\n        }\r\n    }\r\n\r\n    const saveRecipe = () => {\r\n        props.onSave(Recipe.fromJSON(recipeJSON))\r\n    }\r\n\r\n    const deleteRecipe = () => {\r\n        if (props.recipe) {\r\n            props.onDelete(props.recipe)\r\n        }\r\n    }\r\n\r\n    const focusElement = React.createRef<HTMLInputElement>();\r\n    const ingredientEditorElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose} onEntered={() => {\r\n            if (focusElement.current) focusElement.current.focus();\r\n            if (ingredientEditorElement.current) {\r\n                let cm = CodeMirror.fromTextArea(ingredientEditorElement.current,\r\n                    {\r\n                        lineNumbers: false,\r\n                        mode: \"ingredients\",\r\n                        gutters: [\"CodeMirror-lint-markers\"],\r\n                        lint: true,\r\n                        extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n                    });\r\n\r\n                cm.on(\"change\", (instance: CodeMirror.Editor) => {\r\n                    updateIngredients(instance.getValue());\r\n                });\r\n                cm.on(\"cursorActivity\", (instance: CodeMirror.Editor) => {\r\n                    instance.showHint({\r\n                        hint: autocomplete(props.recipeService.getIngredients(), props.recipeService.getUnits()),\r\n                        completeSingle: false,\r\n                        closeOnUnfocus: true\r\n                    });\r\n                });\r\n            }\r\n        }}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{props.recipe ? \"Edit\" : \"Add new \"} recipe</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formTitle\">\r\n                        <Form.Control type=\"title\" value={recipeJSON.title} placeholder=\"Title\"\r\n                            isInvalid={isTitleInvalid} onChange={setTitle}\r\n                            ref={focusElement}\r\n                            size=\"sm\" />\r\n                        <Form.Control.Feedback type=\"invalid\">Required field!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formComment\">\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            value={recipeJSON.comment}\r\n                            onChange={setComment}\r\n                            rows={2}\r\n                            placeholder=\"Comment\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formSource\">\r\n                        <Form.Control\r\n                            type=\"source\"\r\n                            value={recipeJSON.source}\r\n                            onChange={setSource}\r\n                            placeholder=\"Where to find the recipe\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formServing\">\r\n                        <Form.Control\r\n                            type=\"serving\"\r\n                            value={recipeJSON.serving}\r\n                            onChange={setServing}\r\n                            placeholder=\"Number of porties\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formLabels\">\r\n                        <Form.Control\r\n                            type=\"labels\"\r\n                            value={labelCSV}\r\n                            onChange={updateLabels}\r\n                            placeholder=\"Labels: LABEL1, LABEL2, ...\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formIngredients\">\r\n                        <Form.Control as=\"textarea\" value={ingredientCSV} ref={ingredientEditorElement}\r\n                            placeholder=\"Ingredients: <name>;<amount>;<unit>\" />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={saveRecipe} disabled={isTitleInvalid || isIngredientsInvalid}>Save recipe</Button>\r\n                {props.recipe &&\r\n                    <Button type=\"button\" variant=\"primary\" onClick={deleteRecipe}>Delete recipe</Button>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { RecipeService } from \"./service/RecipeService\";\r\n\r\nimport { LoadFileDialog } from \"./component/LoadFileDialog\";\r\nimport { SaveFileDialog } from \"./component/SaveFileDialog\";\r\nimport { SettingsDialog } from \"./component/Settings\";\r\nimport { RecipeEditor } from \"./component/RecipeEditor\";\r\n\r\nimport { exportPlan, exportShoppingList } from \"./PlanExporter\";\r\n\r\nimport App from \"./App\";\r\n\r\nexport enum Dialog {\r\n    LoadFile,\r\n    SaveFile,\r\n    RecipeEditor,\r\n    SavePlanXLS,\r\n    ShoppingList,\r\n    PlanSettings\r\n}\r\n\r\nexport function renderDialog(this: App) {\r\n    switch (this.state.showDialog) {\r\n        case Dialog.LoadFile: {\r\n            return (\r\n                <LoadFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Load recipes file\"\r\n                    loadButtonTitle=\"Load recipes\"\r\n                    onLoad={this.loadFile}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SaveFile: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save recipes file\"\r\n                    saveButtonTitle=\"Save recipes\"\r\n                    data={this.genRecipeFileContent()}\r\n                    type=\"application/json\"\r\n                    initialFileName=\"recipes\"\r\n                    extension=\"json\"\r\n                    onSave={this.fileSaved}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.RecipeEditor: {\r\n            return (\r\n                <RecipeEditor\r\n                    onClose={this.closeRecipeEditor}\r\n                    onSave={this.saveRecipe}\r\n                    onDelete={this.deleteRecipe}\r\n                    recipe={this.state.recipeToEdit}\r\n                    recipeService={new RecipeService(this.state.recipeIndex)}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SavePlanXLS: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save plan\"\r\n                    saveButtonTitle=\"Save plan\"\r\n                    data={exportPlan(this.state.recipeIndex, this.state.plan)}\r\n                    type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                    initialFileName=\"plan\"\r\n                    extension=\"xlsx\"\r\n                    onSave={this.closeDialog}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.ShoppingList: {\r\n            return (\r\n                <Modal show={true} onHide={this.closeDialog}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Shopping list</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={20}\r\n                                cols={80}\r\n                                value={exportShoppingList(this.state.recipeIndex, this.state.plan)}\r\n                                readOnly />\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.closeDialog}>\r\n                            Close\r\n              </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            );\r\n        }\r\n\r\n        case Dialog.PlanSettings: {\r\n            return (\r\n                <SettingsDialog\r\n                    onClose={this.closeDialog}\r\n                    settings={this.state.settings}\r\n                    onUpdate={this.updateSettings} />\r\n            );\r\n        }\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n};\r\n","import { RecipeIndex } from './db/RecipeDB';\r\n\r\nimport { Plan, PlannedRecipe } from './model/Plan';\r\nimport { Recipe } from './model/Recipe';\r\n\r\nimport XLSX from 'xlsx';\r\nimport _ from 'lodash';\r\n\r\n// Returns: Ingredient -> (recipe id -> [amount, unit, scale][])\r\nfunction calculateIngredientMap(recipes: [Recipe, PlannedRecipe][]) {\r\n    let ingredientMap = new Map<string, Map<PlannedRecipe, [number, string, number][]>>();\r\n\r\n    recipes.forEach(t => {\r\n\r\n        let r = t[0];\r\n        let pr = t[1];\r\n\r\n        r.getIngredients().forEach(i => {\r\n            let ingredientName = i.getName().toLowerCase();\r\n            let oneIngredientRecord = ingredientMap.get(ingredientName);\r\n            if (!oneIngredientRecord) {\r\n                oneIngredientRecord = new Map()\r\n                ingredientMap.set(ingredientName, oneIngredientRecord);\r\n            }\r\n\r\n            let oneRecipeRecord = oneIngredientRecord.get(pr) ?? [];\r\n            oneRecipeRecord.push([i.getAmount(), i.getUnit().toLowerCase(), pr.getServing() / r.getServing()]);\r\n            oneIngredientRecord.set(pr, oneRecipeRecord);\r\n        });\r\n    });\r\n\r\n    return ingredientMap;\r\n}\r\n\r\nfunction calculateShoppingList(\r\n    ingredientMap: Map<string, Map<PlannedRecipe, [number, string, number][]>>,\r\n    ingredients: string[]) {\r\n    let ingredientList = ingredients.map(name => {\r\n\r\n        let oneIngredientRecord = new Map<string, number>()\r\n        let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string, number][]>()\r\n\r\n        // Group ingredient usages by unit\r\n        for (let oneUsage of ingredient.values()) {\r\n            for (let [amount, unit, scale] of oneUsage) {\r\n                oneIngredientRecord.set(unit,\r\n                    (oneIngredientRecord.get(unit) ?? 0) + amount * scale)\r\n            }\r\n        }\r\n\r\n        return { \"name\": name, \"amounts\": oneIngredientRecord }\r\n    });\r\n\r\n    let ingredientsRows = []\r\n\r\n    for (let { name, amounts } of ingredientList) {\r\n        let line: [string] = [name]\r\n        for (let [unit, amount] of amounts) {\r\n            line.push(\"\" + amount + \" \" + unit)\r\n        }\r\n        ingredientsRows.push(line)\r\n    }\r\n\r\n    return ingredientsRows;\r\n}\r\n\r\n// Exports ShoppingList as list of MD lines\r\nexport function exportShoppingList(recipeIndex: RecipeIndex, plan: Plan) {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let plannedRecipes = plan.getAllPlannedRecipes();\r\n    let recipes = recipeIndex.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n    let ingredientMap = calculateIngredientMap(_.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]);\r\n\r\n    let c = new Intl.Collator();\r\n    let ingredients = Array.from(ingredientMap.keys()).sort(c.compare);\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n\r\n    let res = \"\";\r\n\r\n    for (let row of ingredientsRows) {\r\n        res += \"**\" + row.shift() + \"**\";\r\n        res += \" - \";\r\n        res += row.join(\" + \");\r\n        res += \"\\n\";\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// Exports Plan as XLSX\r\nexport function exportPlan(recipeIndex: RecipeIndex, plan: Plan): Blob {\r\n    // Want here the recipes as many times as they appear in the plan\r\n    let plannedRecipes = plan.getAllPlannedRecipes();\r\n    let recipes = recipeIndex.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n    let zippedPlannedRecipes = _.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]\r\n\r\n    let uniqueRecipes = new Set(recipes);\r\n    let ingredientMap = calculateIngredientMap(zippedPlannedRecipes);\r\n    let ingredients = Array.from(ingredientMap.keys()).sort();\r\n\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate map\r\n\r\n    let planRows: string[][] = _.range(0, plan.getNrBuckets()).map(bid => {\r\n        let plannedRecipes = plan.getPlannedRecipes(bid);\r\n        let recipes = recipeIndex.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n        let zippedPlannedRecipes = _.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]\r\n        return [\"Day #\" + (bid + 1)].concat(\r\n            zippedPlannedRecipes.map(t => t[0].getTitle() + \" (\" + t[1].getServing() + \" people)\"))\r\n    })\r\n    let planWS = XLSX.utils.aoa_to_sheet(planRows);\r\n    XLSX.utils.book_append_sheet(wb, planWS, \"Plan\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Calculate shopping list\r\n\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n    let ingredientsWS = XLSX.utils.aoa_to_sheet(ingredientsRows);\r\n    XLSX.utils.book_append_sheet(wb, ingredientsWS, \"Shopping list\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate ingredient map\r\n\r\n    const mapHeaderRow = zippedPlannedRecipes.map(t => t[0].getTitle() + \" (\" + t[1].getServing() + \" people)\")\r\n    mapHeaderRow.unshift(\"\")\r\n\r\n    const mapDataRows = ingredients.map(name => {\r\n\r\n        let line = [name]\r\n\r\n        for (let pr of plannedRecipes) {\r\n            let ingredient = ingredientMap.get(name) ?? new Map<PlannedRecipe, [number, string, number][]>();\r\n            let recipeIngredient = ingredient.get(pr);\r\n            if (recipeIngredient) {\r\n                line.push(recipeIngredient.map(au => \"\" + (au[0] * au[2]) + \" \" + au[1]).join(\", \"));\r\n            }\r\n            else {\r\n                line.push(\"\");\r\n            }\r\n\r\n        }\r\n\r\n        return line;\r\n    });\r\n\r\n    let mapRows = [mapHeaderRow].concat(mapDataRows);\r\n    let mapWS = XLSX.utils.aoa_to_sheet(mapRows);\r\n    XLSX.utils.book_append_sheet(wb, mapWS, \"Ingredient map\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate recipes\r\n\r\n    // Recipes must be converted to a set to eliminate duplications\r\n    for (let r of uniqueRecipes) {\r\n        let recipeRows = [\r\n            [\"Title\", r.getTitle()],\r\n            [\"Comment\", r.getComment() ?? \"-\"],\r\n            [\"Serves\", r.getServing()],\r\n            [\"Source\", r.getSource() ?? \"-\"],\r\n            [\"Ingredients:\"]\r\n        ];\r\n\r\n        for (let i of r.getIngredients()) {\r\n            recipeRows.push([i.getName().toLowerCase(), i.getAmount(), i.getUnit().toLowerCase()])\r\n        }\r\n\r\n        let recipeWS = XLSX.utils.aoa_to_sheet(recipeRows);\r\n        XLSX.utils.book_append_sheet(wb, recipeWS, r.getTitle().substr(0, 31));\r\n    }\r\n\r\n    let bytes = XLSX.write(wb, { bookType: 'xlsx', bookSST: false, type: 'array' });\r\n    return new Blob([bytes], {\r\n        type: 'application/octet-stream'\r\n    });\r\n}\r\n","/* IMMUTABLE */\r\nexport class ScoringFun {\r\n\r\n    private name: string;\r\n    private script: string;\r\n\r\n    constructor(name: string, script: string)\r\n    {\r\n        this.name = name;\r\n        this.script = script;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n\r\n    public getScript() {\r\n        return this.script;\r\n    }\r\n}\r\n","import { ScoringFun } from './ScoringFun';\r\n\r\n/* These classes are not immutable, but it is fine as these are \r\n   not used in any state */ \r\n\r\nexport class RecipeScoring {\r\n    private scorings: Map<ScoringFun, number>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scorings = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    addScoring = (scoringFun: ScoringFun, score: number) => {\r\n        this.scorings.set(scoringFun, score)\r\n        this.sum += score\r\n    }\r\n\r\n    getSum = () => {\r\n        return this.sum;\r\n    }\r\n\r\n    getScorings = () => {\r\n        return Array.from(this.scorings);\r\n    }\r\n}\r\n\r\nexport class Scoring {\r\n    private scoring: Map<string, RecipeScoring>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scoring = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    public addScoring = (recipeId: string, sf: ScoringFun, score: number) => {\r\n        if (!this.scoring.has(recipeId)) {\r\n            this.scoring.set(recipeId, new RecipeScoring())\r\n        }\r\n\r\n        this.scoring.get(recipeId)?.addScoring(sf, score);\r\n    }\r\n\r\n    public getSum = (recipeId: string) => {\r\n        let rs = this.scoring.get(recipeId);\r\n        if (rs) {\r\n            return rs.getSum();\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getScoring = (recipeId: string) => {\r\n        return this.scoring.get(recipeId);\r\n    }\r\n}\r\n","import { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { ScoringFun } from '../model/ScoringFun';\r\nimport { Scoring } from '../model/Scoring';\r\n\r\nimport { RecipeIndex } from '../db/RecipeDB';\r\n\r\nimport { Parser, Expression } from 'expr-eval';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst scoringFuns = [\r\n    new ScoringFun(\"random\", \"random(1)\"),\r\n    new ScoringFun(\"SLOW\", \"planHasLabel(\\\"SLOW\\\") > 0 and hasLabel(this, \\\"SLOW\\\") ? -1 : 0\"),\r\n    new ScoringFun(\"+1\", \"hasLabel(this, \\\"+1\\\") ? 0.15 : 0\"),\r\n    new ScoringFun(\"-1\", \"hasLabel(this, \\\"-1\\\") ? -0.15 : 0\"),\r\n    new ScoringFun(\"EASY\", \"hasLabel(this, \\\"EASY\\\") ? 0.15/(1+planHasLabel(\\\"EASY\\\")) : 0\"),\r\n    new ScoringFun(\"Side dish\", \"hasLabel(this, \\\"SD\\\") ? (planHasLabel(\\\"SD\\\") < planHasLabel(\\\"NSD\\\") ? 5 : -5) : 0\"),\r\n    new ScoringFun(\"Few ingredients\", \"(1-normalize(length(ingredients(this))))/6\"),\r\n    new ScoringFun(\"Repetition\", \"planHasRecipe(this) > 0 and (not hasLabel(this, \\\"SD\\\")) ? -2 : 0\")\r\n]\r\n\r\nfunction labelDict(r: Recipe) {\r\n    return _.countBy(r.getLabels().map(l => l.toUpperCase()));\r\n}\r\n\r\nfunction _scoreRecipes(e: Expression, recipes: Recipe[], fun: ScoringFun) {\r\n    return new Map(recipes.map(r => {\r\n        // Dirty trick to be able to pass Recipe type\r\n        let s = e.evaluate({ \"this\": r as unknown as string });\r\n        return [r, s]\r\n    }));\r\n}\r\n\r\nexport function scoreRecipes(recipeIndex: RecipeIndex, plan: Plan) {\r\n    let p = new Parser();\r\n\r\n    let recipes = recipeIndex.all();\r\n    let rlabels = new Map(recipes.map(r => [r, labelDict(r)]))\r\n    let precipeids = plan.getAllPlannedRecipes().map(r => r.getRecipeId())\r\n    let precipes = _.countBy(precipeids)\r\n    let plabels = _.countBy(_.flatMap(recipeIndex.getAll(precipeids), r => r.getLabels()).map(l => l.toUpperCase()))\r\n\r\n    p.functions.intersection = (as: any[], bs: any[]) => {\r\n        return _.intersection(as, bs);\r\n    }\r\n\r\n    p.functions.sum = (as: number[]) => {\r\n        return _.sum(as);\r\n    }\r\n\r\n    p.functions.ingredients = (r: Recipe) => {\r\n        return r.getIngredients();\r\n    }\r\n\r\n    p.functions.hasLabel = (r: Recipe, label: string) => {\r\n        let ld = rlabels.get(r);\r\n        if (ld) {\r\n            return ld[label] > 0;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    p.functions.planHasLabel = (label: string) => {\r\n        return plabels[label] ?? 0;\r\n    }\r\n\r\n    p.functions.planHasRecipe = (r: Recipe) => {\r\n        return precipes[r.getId()] ?? 0;\r\n    }\r\n\r\n    let scoring = new Scoring()\r\n\r\n    for (let sf of scoringFuns) {\r\n        let e = p.parse(sf.getScript())\r\n\r\n        let max = -1;\r\n\r\n        p.functions.normalize = (curr: number) => {\r\n            if (curr > max) {\r\n                max = curr;\r\n            }\r\n\r\n            return curr;\r\n        }\r\n\r\n        let scores = _scoreRecipes(e, recipes, sf);\r\n\r\n        // If `normalize` was used, we need to run it again\r\n        if (max > 0) {\r\n            p.functions.normalize = (curr: number) => {\r\n                return curr / max;\r\n            }\r\n\r\n            scores = _scoreRecipes(e, recipes, sf);\r\n        }\r\n\r\n        for (let [r, s] of scores) {\r\n            scoring.addScoring(r.getId(), sf, s);\r\n        }\r\n    }\r\n\r\n    return scoring;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Binoculars, People, Cart2, ExclamationCircle, ChatRightText, SortNumericUpAlt } from 'react-bootstrap-icons';\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { RecipeScoring } from '../model/Scoring';\r\n\r\ntype RecipePopoverProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring\r\n}\r\n\r\nexport const RecipeQuickView: FunctionComponent<RecipePopoverProps> = ({ recipe, scoring }) => {\r\n\r\n    const c = new Intl.Collator();\r\n    const ingredients = recipe.getIngredients().map(r => r.getName())\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const scoringLines = scoring &&\r\n        scoring.getScorings().map(oneScore =>\r\n            <Row>\r\n                <Col xs=\"2\">\r\n                    {oneScore[1].toFixed(2)}\r\n                </Col>\r\n                <Col xs=\"1\">\r\n                    ←\r\n                </Col>\r\n                <Col>\r\n                    {oneScore[0].getName()}\r\n                </Col>\r\n            </Row>);\r\n\r\n    return (\r\n        <Container className=\"pl-0 pr-2\">\r\n            {recipe.getComment() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><ChatRightText height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getComment()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getServing() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><People height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getServing()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getSource() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><Binoculars height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getSource()}</Col>\r\n                </Row>\r\n            }\r\n            <Row className=\"pb-2\">\r\n                <Col xs={1}>\r\n                    <Cart2 height=\"18\" />\r\n                </Col>\r\n                <Col>\r\n                    <Container fluid className=\"pl-0\">\r\n                        <Row>\r\n                            {ingredients}\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n            {recipe.getLabels().length > 0 &&\r\n                <Row className=\"pb-2\">\r\n                    <Col xs={1}>\r\n                        <ExclamationCircle height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container fluid className=\"pl-0\">\r\n                            <Row>\r\n                                {labels}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {scoring &&\r\n                <Row>\r\n                    <Col xs={1}>\r\n                        <SortNumericUpAlt height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container className=\"ml-0 pl-0\">\r\n                            {scoringLines}\r\n                            <Row>\r\n                                <Col xs=\"2\" className=\"border\">\r\n                                    {scoring.getSum().toFixed(2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { Gear, Eye, Search } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { Scoring, RecipeScoring } from '../model/Scoring';\r\nimport { RecipeIndex } from '../db/RecipeDB';\r\n\r\nimport { useDrag } from 'react-dnd'\r\n\r\nimport _ from 'lodash';\r\n\r\ntype RecipeSelectorProps = {\r\n    recipeIndex: RecipeIndex,\r\n    scoring: Scoring,\r\n    plan: Plan,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\ntype RecipeListItemProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring,\r\n    selected: boolean,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\nconst RecipeListItem: FunctionComponent<RecipeListItemProps> = ({ recipe, selected, scoring, onEdit }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId() },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-recipe-selector-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#FFFFFF'\r\n            }}>\r\n\r\n            <Card\r\n                className=\"mealee-recipe-selector-item\"\r\n                key={recipe.getId()}\r\n                ref={drag}\r\n                style={{\r\n                    opacity: isDragging || selected ? 0.5 : 1,\r\n                    cursor: 'move',\r\n                }}>\r\n                <Card.Body className=\"p-0\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    right: 10,\r\n                    height: 20,\r\n                    width: 40,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Gear height=\"18\" onClick={() => onEdit(recipe)} style={{ cursor: 'pointer' }} />\r\n                &nbsp;\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} scoring={scoring} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const RecipeSelector: FunctionComponent<RecipeSelectorProps> = ({ recipeIndex, scoring, plan, onEdit }) => {\r\n\r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n    const debouncedSetFilter = React.useCallback(\r\n        _.debounce(setFilter, 150),\r\n        [], // will be created only once initially\r\n    );\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        debouncedSetFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeIndex.all() : recipeIndex.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = _.sortBy(filteredRecipes, r => scoring.getSum(r.getId()) * -1)\r\n        .map((recipe) =>\r\n            <ListGroup.Item className=\"p-0\" key={recipe.getId()}>\r\n                <RecipeListItem\r\n                    key={recipe.getId()}\r\n                    recipe={recipe}\r\n                    scoring={scoring.getScoring(recipe.getId())}\r\n                    onEdit={onEdit}\r\n                    selected={selectedRecipeSet.has(recipe.getId())} />\r\n            </ListGroup.Item>\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2 h-100 d-flex flex-column\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search /></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <Form.Group controlId=\"recipeGroup\" className=\"flex-grow-1 overflow-auto mealee-recipe-selector-list\">\r\n                <ListGroup>{listItems}</ListGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n","import { List, Map, Set } from \"immutable\";\r\n\r\nexport class PlannedRecipe {\r\n\r\n  constructor(recipeId: string, serving: number) {\r\n    this.recipeId = recipeId;\r\n    this.serving = serving;\r\n  }\r\n\r\n  public getRecipeId() {\r\n    return this.recipeId;\r\n  }\r\n\r\n  /* get actual serving */\r\n  public getServing() {\r\n    return this.serving;\r\n  }\r\n\r\n  private recipeId: string;\r\n  private serving: number;\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Plan {\r\n\r\n  // Don't store Recipes, only ids. They are immutable, so if they change...\r\n  private buckets = List<Map<string, PlannedRecipe>>();\r\n\r\n  private constructor(buckets: List<Map<string, PlannedRecipe>>) {\r\n    this.buckets = buckets;\r\n  }\r\n\r\n  public static new = (nrBuckets: number) => {\r\n    return new Plan(List().setSize(nrBuckets));\r\n  };\r\n\r\n  public setNrBuckets(nrBuckets: number) {\r\n    return new Plan(this.buckets.setSize(nrBuckets));\r\n  }\r\n\r\n  public getNrBuckets() {\r\n    return this.buckets.size;\r\n  }\r\n\r\n  public getNrRecipes() {\r\n    let ret = 0;\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ret += bucket.size\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public setPlannedRecipe(bucketNr: number, plannedRecipe: PlannedRecipe) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.set(plannedRecipe.getRecipeId(), plannedRecipe)));\r\n  }\r\n\r\n  public deleteRecipeId(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.delete(recipeId)));\r\n  }\r\n\r\n  public getPlannedRecipes(bucketNr: number) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return Array.from(bucket.valueSeq());\r\n  }\r\n\r\n  public getAllPlannedRecipes() {\r\n    let ids = List<PlannedRecipe>();\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ids = ids.concat(bucket.values());\r\n      }\r\n    }\r\n    return Array.from(ids);\r\n  }\r\n\r\n  /* A unique list of recipe ids */\r\n  public getAllRecipeIds() {\r\n    let ids = Set<string>();\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ids = ids.concat(bucket.valueSeq().map(pr => pr.getRecipeId()));\r\n      }\r\n    }\r\n    return Array.from(ids);\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { Trash, Eye, People } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { RecipeIndex } from \"../db/RecipeDB\";\r\nimport { Recipe } from \"../model/Recipe\";\r\nimport { Plan, PlannedRecipe } from \"../model/Plan\";\r\n\r\nimport { useDrop, useDrag } from 'react-dnd'\r\nimport _ from 'lodash';\r\n\r\ntype RecipeBoxProps = {\r\n    bucketId: number,\r\n    recipeDB: RecipeIndex,\r\n    plannedRecipe: PlannedRecipe,\r\n    onDelete: (recipeId: string) => void\r\n    onUpdate: (plannedRecipe: PlannedRecipe) => void\r\n}\r\n\r\nconst RecipeBox: FunctionComponent<RecipeBoxProps> = ({\r\n    bucketId,\r\n    recipeDB,\r\n    plannedRecipe,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    let recipe = recipeDB.get(plannedRecipe.getRecipeId()) ?? Recipe.error\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", plannedRecipe: plannedRecipe, from: bucketId },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const updateServing = (e: React.WheelEvent<HTMLDivElement>) => {\r\n        var newServing = e.deltaY > 0\r\n            ? Math.max(1, plannedRecipe.getServing() - 1)\r\n            : Math.min(9, plannedRecipe.getServing() + 1);\r\n\r\n        onUpdate(new PlannedRecipe(plannedRecipe.getRecipeId(), newServing))\r\n    }\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-bucker-recipe-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'move',\r\n            }}>\r\n\r\n            <Card className=\"mealee-bucket-recipe\">\r\n                <Card.Body className=\"mealee-bucket-recipe-body\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    height: 40,\r\n                    width: 20,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Trash height=\"18\" onClick={() => onDelete(recipe.getId())} style={{ cursor: 'pointer' }} />\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 3,\r\n                    height: 20,\r\n                    width: 25,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <OverlayTrigger\r\n                    key=\"new\"\r\n                    placement=\"right\"\r\n                    overlay={\r\n                        <Tooltip id=\"tooltip-new\">\r\n                            Scroll up/down to change\r\n                        </Tooltip>\r\n                    }>\r\n                    <div onWheel={updateServing}>\r\n                        <span style={{ fontSize: 12, paddingTop: 2, paddingRight: 0 }}>{plannedRecipe.getServing()}</span>\r\n                        <People height=\"12\" />\r\n                    </div>\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype BucketProps = {\r\n    bucketId: number,\r\n    recipeDB: RecipeIndex,\r\n    plannedRecipes: PlannedRecipe[],\r\n    onDelete: (bucketid: number, recipeDd: string) => void,\r\n    onUpdate: (bucketid: number, plannedRecipe: PlannedRecipe) => void,\r\n}\r\n\r\nconst Bucket: FunctionComponent<BucketProps> = ({\r\n    bucketId,\r\n    recipeDB,\r\n    plannedRecipes,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    return (\r\n        <Card className=\"mealee-bucket\">\r\n            <Card.Header className=\"mealee-bucket-header\">{\"Day \" + (bucketId + 1)}</Card.Header>\r\n            <Card.Body className=\"mealee-bucket-body\">\r\n                {plannedRecipes.map(r =>\r\n                    <RecipeBox key={r.getRecipeId()}\r\n                        bucketId={bucketId}\r\n                        recipeDB={recipeDB}\r\n                        plannedRecipe={r}\r\n                        onDelete={(recipeId) => onDelete(bucketId, recipeId)}\r\n                        onUpdate={(plannedRecipe) => onUpdate(bucketId, plannedRecipe)} />)}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\ntype DroppableBucketProps = BucketProps & {\r\n    onDrop: (buckedId: number, plannedRecipe: PlannedRecipe) => void,\r\n    onMove: (from: number, to: number, plannedRecipe: PlannedRecipe) => void\r\n}\r\n\r\nconst DroppableBucket: FunctionComponent<DroppableBucketProps> = ({\r\n    bucketId,\r\n    recipeDB,\r\n    plannedRecipes,\r\n    onDrop,\r\n    onMove,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: \"recipe\",\r\n        drop: (dragr) => {\r\n            let r = dragr as unknown as { id: string, from?: number, plannedRecipe?: PlannedRecipe };\r\n            if (r.from !== undefined && r.plannedRecipe !== undefined) {\r\n                onMove(r.from, bucketId, r.plannedRecipe)\r\n            }\r\n            else {\r\n                let recipe = recipeDB.get(r.id)\r\n                onDrop(bucketId, new PlannedRecipe(r.id, recipe ? recipe.getServing() : 0))\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}>\r\n\r\n            <Bucket\r\n                bucketId={bucketId}\r\n                recipeDB={recipeDB}\r\n                plannedRecipes={plannedRecipes}\r\n                onDelete={onDelete}\r\n                onUpdate={onUpdate} />\r\n\r\n            {isOver && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                        opacity: 0.5,\r\n                        backgroundColor: 'yellow',\r\n                    }} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PlannerProps = {\r\n    recipeDB: RecipeIndex,\r\n    plan: Plan,\r\n    updatePlan: (plan: Plan) => void\r\n}\r\n\r\nexport const Planner: FunctionComponent<PlannerProps> = ({ recipeDB, plan, updatePlan }) => {\r\n\r\n    const addRecipe = (bucketIdx: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.setPlannedRecipe(bucketIdx, plannedRecipe))\r\n    }\r\n\r\n    const deleteRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeId(bucketIdx, recipeId))\r\n    }\r\n\r\n    const updatePlannedRecipe = (bucketIdx: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.setPlannedRecipe(bucketIdx, plannedRecipe))\r\n    }\r\n\r\n    const movePlannedRecipe = (from: number, to: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.deleteRecipeId(from, plannedRecipe.getRecipeId()).setPlannedRecipe(to, plannedRecipe))\r\n    }\r\n\r\n    let cols = _.range(plan.getNrBuckets()).map(i => {\r\n        return (\r\n            <Col key={i} xs=\"auto\" className=\"pr-2 pl-0\">\r\n                <DroppableBucket\r\n                    bucketId={i}\r\n                    recipeDB={recipeDB}\r\n                    plannedRecipes={plan.getPlannedRecipes(i)}\r\n                    onDrop={addRecipe}\r\n                    onDelete={deleteRecipe}\r\n                    onUpdate={updatePlannedRecipe}\r\n                    onMove={movePlannedRecipe} />\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container className=\"pt-0 pb-2 pl-0 pr-0\">\r\n            <Row>\r\n                {cols}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nimport { Container, Col, Row, Image } from \"react-bootstrap\";\r\n\r\nimport { scoreRecipes } from './scoring/Scoring';\r\n\r\nimport { RecipeSelector } from \"./component/RecipeSelector\";\r\nimport { Planner } from \"./component/Planner\";\r\n\r\nimport Tour from 'reactour';\r\n\r\nimport App from \"./App\";\r\nimport { Dialog } from \"./AppDialogs\";\r\n\r\nexport function renderInitialBody(this: App) {\r\n    return (\r\n        <Col xs=\"auto\" className=\"pt-3\">\r\n            <Tour\r\n                isOpen={this.state.isInitialTour}\r\n                onRequestClose={() => this.setIsInitialTour(false)}\r\n                steps={[\r\n                    {\r\n                        selector: '.my-first-step-a',\r\n                        content: <Container className=\"pt-4\">Load some recipes from a file or ...</Container>,\r\n                    },\r\n                    {\r\n                        selector: '.my-first-step-b',\r\n                        content: <Container className=\"pt-4\">... or add a new recipe manually!</Container>,\r\n                    }\r\n                ]} />\r\n            <Alert key=\"recipe\" variant=\"warning\">\r\n                I do not see any recipes. <Button variant=\"link\" className=\"pt-1\" onClick={() => this.setIsInitialTour(true)}>Are you new to Mealee?</Button>\r\n            </Alert>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport function renderDesktopBody(this: App) {\r\n\r\n    return (\r\n        <>\r\n            <Col xs=\"8\" sm=\"5\" md=\"4\" lg=\"3\" xl=\"3\" className=\"h-100\" style={{ minHeight: 0 }}>\r\n                <RecipeSelector\r\n                    plan={this.state.plan}\r\n                    scoring={scoreRecipes(this.state.recipeIndex, this.state.plan)}\r\n                    recipeIndex={this.state.recipeIndex}\r\n                    onEdit={this.editRecipe} />\r\n\r\n            </Col>\r\n            <Col>\r\n                <Container className=\"pt-2 pl-0 pr-0\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Planner\r\n                                recipeDB={this.state.recipeIndex}\r\n                                plan={this.state.plan}\r\n                                updatePlan={this.updatePlan} />\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.plan.getNrRecipes() > 0 &&\r\n                        <Row>\r\n                            <Col className=\"pl-0\">\r\n                                <Button\r\n                                    variant=\"mealee\"\r\n                                    onClick={this.showDialog(Dialog.SavePlanXLS)}>\r\n                                    Export plan &nbsp;\r\n                                <Image src=\"xlsx_logo.svg\" height=\"18\" />\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"ml-2\"\r\n                                    variant=\"mealee\"\r\n                                    onClick={this.showDialog(Dialog.ShoppingList)}>\r\n                                    Show shopping list &nbsp;\r\n                                <Image src=\"todoist_logo.svg\" height=\"18\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Container>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n","import {\r\n  Index,\r\n  createIndex,\r\n  addDocumentToIndex,\r\n  removeDocumentFromIndex,\r\n} from \"ndx\";\r\nimport { query, QueryResult } from \"ndx-query\";\r\nimport { words } from \"lodash\";\r\n\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nimport { Map } from \"immutable\";\r\n\r\nexport class RecipeIndex {\r\n  private readonly recipesMap: Map<string, Recipe>;\r\n  private readonly index: Index<string>;\r\n\r\n  private readonly fieldAccessors = [\r\n    (r: Recipe) => r.getTitle(),\r\n    (r: Recipe) => r.getComment() ?? \"\",\r\n    (r: Recipe) => r.getSource() ?? \"\",\r\n    (r: Recipe) => r.getIngredients().map((i) => i.getName()).join(\" \"),\r\n    (r: Recipe) => r.getLabels().join(\" \")\r\n  ];\r\n\r\n  private readonly fieldBoostFactors = [2, 1, 1, 1, 2];\r\n\r\n  constructor(index?: Index<string>, recipesMap?: Map<string, Recipe>) {\r\n    this.index = index ? index : createIndex<string>(this.fieldAccessors.length);\r\n    this.recipesMap = recipesMap ? recipesMap : Map({});\r\n  }\r\n\r\n  private termFilter = (term: string) => {\r\n    return term\r\n      .normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .toLowerCase();\r\n  };\r\n\r\n  public static new = () => {\r\n    return new RecipeIndex();\r\n  };\r\n\r\n  // `add()` function will add documents to the index.\r\n  public add = (r: Recipe) => {\r\n    let key = r.getId();\r\n\r\n    let toUpdate = true;\r\n\r\n    if (this.recipesMap.has(key)) {\r\n      if (JSON.stringify(this.recipesMap.get(key)) === JSON.stringify(r)) {\r\n        toUpdate = false;\r\n      }\r\n    }\r\n\r\n    if (toUpdate) {\r\n      // Don't add the same document twice, ndx becomes crazy...\r\n      this.delete(key);\r\n      let newMap = this.recipesMap.set(key, r);\r\n\r\n      addDocumentToIndex(\r\n        this.index,\r\n        this.fieldAccessors,\r\n        // Tokenizer is a function that breaks text into words, phrases, symbols, or other meaningful elements\r\n        // called tokens.\r\n        // Lodash function `words()` splits string into an array of its words, see https://lodash.com/docs/#words for\r\n        // details.\r\n        words,\r\n        // Filter is a function that processes tokens and returns terms, terms are used in Inverted Index to\r\n        // index documents.\r\n        this.termFilter,\r\n        // Document key, it can be a unique document id or a reference to a document if you want to store all documents\r\n        // in memory.\r\n        key,\r\n        // Document.\r\n        r\r\n      );\r\n\r\n      return new RecipeIndex(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public addAll = (recipes: Recipe[]) => {\r\n    return recipes.reduce((idx: RecipeIndex, recipe: Recipe) => {\r\n      return idx.add(recipe);\r\n    }, this);\r\n  };\r\n\r\n  // `search()` function will be used to perform queries.\r\n  public search = (q: string) =>\r\n    query<string>(\r\n      this.index,\r\n      this.fieldBoostFactors,\r\n      // BM25 ranking function constants:\r\n      1.2, // BM25 k1 constant, controls non-linear term frequency normalization (saturation).\r\n      0.75, // BM25 b constant, controls to what degree document length normalizes tf values.\r\n      words,\r\n      this.termFilter,\r\n      // Set of removed documents, in this example we don't want to support removing documents from the index,\r\n      // so we can ignore it by specifying this set as `undefined` value.\r\n      undefined,\r\n      q\r\n    ).reduce((acc: QueryResult<Recipe>[], res) => {\r\n      let r = this.recipesMap.get(res.key);\r\n      if (r) {\r\n        acc.push({ key: r, score: res.score });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n  public all = () => {\r\n    return Array.from(this.recipesMap.values());\r\n  };\r\n\r\n  public get = (key: string) => {\r\n    return this.recipesMap.get(key);\r\n  };\r\n\r\n  public delete = (key: string) => {\r\n    if (this.recipesMap.has(key)) {\r\n      let newMap = this.recipesMap.delete(key);\r\n      removeDocumentFromIndex(this.index, new Set(), key);\r\n      return new RecipeIndex(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public getAll = (keys: string[]) => {\r\n    return keys.reduce((acc: Recipe[], key) => {\r\n      let r = this.recipesMap.get(key);\r\n      if (r) {\r\n        acc.push(r);\r\n      }\r\n      else {\r\n        acc.push(Recipe.error)\r\n      }\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  public count = () => {\r\n    return this.recipesMap.size;\r\n  };\r\n}\r\n","/* Should be IMMUTABLE */\r\nexport class Settings {\r\n  constructor() {\r\n    this.nrRecipes = 5;\r\n  }\r\n\r\n  public clone(): Settings {\r\n    return Object.create(this);\r\n  }\r\n\r\n  public nrRecipes: number;\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Upload, Download, PlusCircle, Gear } from 'react-bootstrap-icons';\r\n\r\ntype IconBarProps = {\r\n    onLoadFile: () => void;\r\n    onNewRecipe: () => void;\r\n    onSaveFile: () => void;\r\n    onEditSettings: () => void;\r\n    unsavedChanges: boolean;\r\n};\r\n\r\nexport const IconBar: FunctionComponent<IconBarProps> = ({\r\n    onLoadFile,\r\n    onNewRecipe,\r\n    onSaveFile,\r\n    onEditSettings,\r\n    unsavedChanges\r\n}) => {\r\n    return (\r\n        <Container className=\"pl-0 ml-2 mr-2 p-0\">\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"upload\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-upload\">\r\n                                Load recipes\r\n                            </Tooltip>\r\n                        }>\r\n                        <Upload\r\n                            className=\"my-first-step-a\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onLoadFile} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"download\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-download\">\r\n                                Save recipes\r\n                            </Tooltip>\r\n                        }>\r\n                        {unsavedChanges\r\n                            ? <Download\r\n                                className=\"text-warning\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onSaveFile} />\r\n                            : <Download\r\n                                style={{ color: \"#ffffff40\" }} />\r\n                        }\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Add new recipe\r\n                            </Tooltip>\r\n                        }>\r\n                        <PlusCircle\r\n                            className=\"my-first-step-b\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onNewRecipe} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Settings\r\n                            </Tooltip>\r\n                        }>\r\n\r\n                        <Gear style={{\r\n                            color: \"#ffffff\",\r\n                            cursor: \"pointer\"\r\n                        }} onClick={onEditSettings} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\r\n\r\nfunction getVersionNumber() {\r\n    return `${process.env.REACT_APP_VERSION}`;\r\n}\r\n\r\nexport const MenuBar: FunctionComponent = () => {\r\n    return (\r\n        <Navbar bg=\"mealee-menu\" variant=\"dark\" className=\"pl-1\">\r\n            <Navbar.Brand className=\"logo\" href=\"#home\"><Image src=\"mealee_logo_v9.svg\" height={60}/></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"container-fluid\">\r\n                    <Nav.Item className=\"ml-auto\">\r\n                        <Nav.Link>v{getVersionNumber()}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport * as AppDialogs from \"./AppDialogs\";\r\nimport * as AppBodies from \"./AppBodies\";\r\n\r\nimport { RecipeIndex } from \"./db/RecipeDB\";\r\n\r\nimport { Settings } from \"./model/Settings\";\r\nimport { Plan } from \"./model/Plan\";\r\nimport { Recipe, serializeRecipes, deserializeRecipes } from \"./model/Recipe\";\r\n\r\nimport { IconBar } from \"./component/IconBar\";\r\nimport { MenuBar } from \"./component/MenuBar\";\r\n\r\nimport { Beforeunload } from \"react-beforeunload\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\ntype AppState = {\r\n  recipeIndex: RecipeIndex;\r\n  settings: Settings;\r\n  plan: Plan;\r\n  showDialog?: Dialog;\r\n  recipeToEdit?: Recipe;\r\n  error: string | null;\r\n  unsavedChanges: boolean;\r\n  isInitialTour: boolean;\r\n};\r\n\r\nenum Dialog {\r\n  LoadFile,\r\n  SaveFile,\r\n  RecipeEditor,\r\n  SavePlanXLS,\r\n  ShoppingList,\r\n  PlanSettings\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    let recipeIndex = new RecipeIndex();\r\n    let planSettings = new Settings();\r\n    let plan = Plan.new(planSettings.nrRecipes);\r\n\r\n    // Hard binding is needed if `loadFile` do not use arrow notation\r\n    // this.loadFile = this.loadFile.bind(this);\r\n    this.state = {\r\n      recipeIndex: recipeIndex,\r\n      settings: planSettings,\r\n      plan: plan,\r\n      showDialog: undefined,\r\n      recipeToEdit: undefined,\r\n      error: null,\r\n      unsavedChanges: false,\r\n      isInitialTour: false\r\n    };\r\n  }\r\n\r\n  public renderDialog = AppDialogs.renderDialog;\r\n  public renderInitialBody = AppBodies.renderInitialBody;\r\n  public renderDesktopBody = AppBodies.renderDesktopBody;\r\n\r\n  addRecipes = (newRecipes: Recipe[], fromFile = false) => {\r\n    this.setState((st) => {\r\n      // You want to save only if it is not a first file load\r\n      let needsSave =\r\n        st.unsavedChanges || !(fromFile && st.recipeIndex.count() === 0);\r\n\r\n      let ret = {};\r\n      let newRecipeIndex = st.recipeIndex.addAll(newRecipes);\r\n\r\n      if (newRecipeIndex !== st.recipeIndex) {\r\n        ret = {\r\n          recipeIndex: newRecipeIndex,\r\n          unsavedChanges: needsSave,\r\n        };\r\n      }\r\n\r\n      return ret;\r\n    });\r\n  };\r\n\r\n  setIsInitialTour = (t: boolean) => {\r\n    this.setState({ isInitialTour: t });\r\n  }\r\n\r\n  saveRecipe = (recipe: Recipe) => {\r\n    this.addRecipes([recipe]);\r\n    this.closeRecipeEditor();\r\n  };\r\n\r\n  onFileLoaded = (ev: ProgressEvent<FileReader>) => {\r\n    let res = ev.target?.result;\r\n\r\n    if (typeof res == \"string\") {\r\n      try {\r\n        this.addRecipes(deserializeRecipes(res), true);\r\n      } catch (e) {\r\n        this.setState({ error: e.message });\r\n      }\r\n    }\r\n    this.closeDialog();\r\n  };\r\n\r\n  loadFile = (file: File) => {\r\n    var reader = new FileReader();\r\n    reader.onload = (ev) => this.onFileLoaded(ev);\r\n    reader.readAsText(file, \"UTF-8\");\r\n  };\r\n\r\n  genRecipeFileContent = () => {\r\n    return serializeRecipes(this.state.recipeIndex.all());\r\n  };\r\n\r\n  fileSaved = () => {\r\n    this.setState({ unsavedChanges: false });\r\n    this.closeDialog();\r\n  };\r\n\r\n  showDialog = (dialog: Dialog) => {\r\n    return () => this.setState({ showDialog: dialog });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ showDialog: undefined });\r\n  };\r\n\r\n  closeRecipeEditor = () => {\r\n    this.setState({ recipeToEdit: undefined, showDialog: undefined });\r\n  };\r\n\r\n  dismissError = () => {\r\n    this.setState({ error: null });\r\n  };\r\n\r\n  updateSettings = (ps: Settings) => {\r\n    this.setState((st) => {\r\n      return {\r\n        settings: ps,\r\n        plan: st.plan.setNrBuckets(ps.nrRecipes)\r\n      };\r\n    });\r\n  };\r\n\r\n  updatePlan = (plan: Plan) => {\r\n    this.setState({\r\n      plan: plan\r\n    });\r\n  };\r\n\r\n  editRecipe = (recipe: Recipe) => {\r\n    this.setState({ showDialog: Dialog.RecipeEditor, recipeToEdit: recipe });\r\n  };\r\n\r\n  deleteRecipe = (recipe: Recipe) => {\r\n    this.setState((st) => {\r\n      let newRecipeIndex = st.recipeIndex.delete(recipe.getId());\r\n\r\n      return {\r\n        recipeIndex: newRecipeIndex,\r\n        showDialog: undefined,\r\n        recipeToEdit: undefined,\r\n        unsavedChanges: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render(this: App) {\r\n\r\n    return (\r\n      <Container fluid className=\"d-flex flex-column vh-100\">\r\n        <Alert\r\n          variant=\"danger\"\r\n          onClose={this.dismissError}\r\n          show={!!this.state.error}\r\n          dismissible>\r\n          {this.state.error}\r\n        </Alert>\r\n\r\n        {this.state.unsavedChanges &&\r\n          <Beforeunload onBeforeunload={() => \"You'll lose your data!\"} />\r\n        }\r\n\r\n        {this.renderDialog()}\r\n\r\n        <Row>\r\n          <Col>\r\n            <MenuBar />\r\n          </Col>\r\n        </Row>\r\n\r\n        {!isMobileOnly\r\n          ?\r\n          <Row className=\"h-100\" style={{ minHeight: 0 }}>\r\n            <Col xs=\"auto\" className=\"pl-0 pr-2 pt-3\">\r\n              <IconBar\r\n                onLoadFile={this.showDialog(Dialog.LoadFile)}\r\n                onNewRecipe={this.showDialog(Dialog.RecipeEditor)}\r\n                onSaveFile={this.showDialog(Dialog.SaveFile)}\r\n                onEditSettings={this.showDialog(Dialog.PlanSettings)}\r\n                unsavedChanges={this.state.unsavedChanges} />\r\n            </Col>\r\n            {this.state.recipeIndex.count() === 0 && this.renderInitialBody()}\r\n            {this.state.recipeIndex.count() > 0 && !isMobileOnly && this.renderDesktopBody()}\r\n          </Row>\r\n          :\r\n          <Row>\r\n            <Col className=\"mt-3\">\r\n              <Alert key=\"recipe\" variant=\"danger\">\r\n                Mobile is not supported as for now. Please try it on a little bit bigger device. Sorry for that.\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n        }\r\n\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { TouchBackend } from 'react-dnd-touch-backend'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n      <App />\r\n    </DndProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}