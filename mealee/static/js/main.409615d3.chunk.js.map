{"version":3,"sources":["component/LoadFileDialog.tsx","component/SaveFileDialog.tsx","model/ScoringFun.ts","model/Settings.ts","component/Settings.tsx","model/Recipe.ts","store/RecipeStore.ts","service/RecipeService.ts","component/IngredientLang.ts","component/RecipeEditor.tsx","model/Plan.ts","AppDialogs.tsx","service/PlanExporterService.ts","model/Scoring.ts","service/ScoringService.ts","component/RecipeQuickView.tsx","component/RecipeSelector.tsx","component/Planner.tsx","AppBodies.tsx","model/Workspace.ts","service/WorkspaceService.ts","component/InfoBox.tsx","component/IconBar.tsx","component/MenuBar.tsx","App.tsx","index.js"],"names":["LoadFileDialog","title","loadButtonTitle","onClose","onLoad","React","useState","file","setFile","Modal","show","onHide","Header","closeButton","Title","Body","Form","FormControl","type","onChange","e","target","files","Footer","Button","variant","onClick","disabled","SaveFileDialog","saveButtonTitle","onSave","data","initialFileName","extension","fileName","setFileName","Group","controlId","Label","Control","value","length","download","ScoringFun","name","script","this","o","Error","SettingsBuilder","settings","json","toJSON","nrBuckets","scoringfuns","scoringFuns","Settings","fromJSON","map","f","s","SettingsDialog","props","settingsChanged","setSettingsChanged","settingsJSON","setSettingsJSON","isValidName","idx","trim","isValidScript","scoringFunRows","style","width","isInvalid","className","size","newName","Object","assign","changeName","currentTarget","rows","split","as","height","newScript","changeScript","_","concat","take","drop","deleteScoringFun","cursor","dialogClassName","Tabs","defaultActiveKey","Tab","eventKey","Container","onSubmit","preventDefault","newNrBuckets","changeNrRecipes","parseInt","key","Table","hover","Ingredient","amount","unit","undefined","Recipe","id","comment","source","serving","ingredients","labels","i","replace","c","r","Math","random","toString","Array","isArray","error","RecipeStore","index","recipesMap","fieldAccessors","getTitle","getComment","getSource","getIngredients","getName","join","getLabels","fieldBoostFactors","termFilter","term","normalize","toLowerCase","add","getId","toUpdate","has","JSON","stringify","get","delete","newMap","set","addDocumentToIndex","words","addAll","recipes","reduce","recipe","search","q","query","acc","res","push","score","all","from","values","removeDocumentFromIndex","Set","getAll","keys","count","createIndex","Map","new","prototype","forEach","Intl","Collator","sort","compare","getUnits","units","getUnit","l","toUpperCase","parseIngredients","text","errors","lines","line","parts","CodeMirror","Pos","to","message","startpos","startAmount","endAmount","Number","parseFloat","autocomplete","cm","getCursor","getLine","start","ch","end","nrpart","substring","match","charAt","word","slice","trimLeft","selection","filter","indexOf","startsWith","list","defineMode","Location","startState","location","token","stream","state","sol","next","eatWhile","registerHelper","RecipeEditor","create","recipeJSON","setRecipeJSON","isTitleInvalid","setIsTitleInvalid","isIngredientsInvalid","setIsIngredientsInvalid","getAmount","ingredientCSV","setIngredientCSV","allLabels","recipeStore","label","focusElement","createRef","ingredientEditorElement","onEntered","current","focus","fromTextArea","lineNumbers","mode","gutters","lint","extraKeys","on","instance","updateIngredients","getValue","showHint","hint","completeSingle","closeOnUnfocus","placeholder","newVal","ref","Feedback","isNaN","styles","menu","provided","zIndex","options","isMulti","newValue","onDelete","PlannedRecipe","recipeId","Plan","buckets","List","setSize","ret","bucket","bucketNr","plannedRecipe","getRecipeId","valueSeq","ids","pr","Dialog","calculateIngredientMap","ingredientMap","t","ingredientName","oneIngredientRecord","oneRecipeRecord","getServing","calculateShoppingList","ingredientList","ingredient","oneUsage","scale","ingredientsRows","amounts","renderDialog","showDialog","LoadFile","closeDialog","loadFile","SaveFile","genRecipeFileContent","fileSaved","closeRecipeEditor","saveRecipe","deleteRecipe","recipeToEdit","SavePlanXLS","plan","export","ShoppingList","cols","exportShoppingList","readOnly","PlanSettings","updateSettings","plannedRecipes","getAllPlannedRecipes","zip","row","shift","zippedPlannedRecipes","uniqueRecipes","wb","XLSX","utils","book_new","planRows","range","getNrBuckets","bid","getPlannedRecipes","planWS","aoa_to_sheet","book_append_sheet","ingredientsWS","mapHeaderRow","unshift","mapDataRows","recipeIngredient","au","mapRows","mapWS","recipeRows","recipeWS","substr","bytes","write","bookType","bookSST","Blob","RecipeScoring","scorings","sum","addScoring","scoringFun","getSum","getScorings","Scoring","scoring","sf","rs","getScoring","labelDict","countBy","_scoreRecipes","fun","evaluate","scoreBy","p","Parser","rlabels","precipeids","precipes","plabels","flatMap","functions","intersection","bs","hasLabel","ld","countLabelInPlan","countRecipeInPlan","parse","getScript","max","curr","scores","RecipeQuickView","n","Col","sm","scoringLines","oneScore","Row","xs","toFixed","fluid","RecipeListItem","selected","onEdit","useDrag","item","collect","monitor","isDragging","drag","position","backgroundColor","Card","opacity","top","transform","right","OverlayTrigger","placement","overlay","Popover","Content","RecipeSelector","setFilter","debouncedSetFilter","useCallback","debounce","filteredRecipes","selectedRecipeSet","getAllRecipeIds","listItems","sortBy","ListGroup","Item","InputGroup","Prepend","Text","event","RecipeBox","bucketId","onUpdate","left","Tooltip","onWheel","newServing","deltaY","min","fontSize","paddingTop","paddingRight","Bucket","DroppableBucket","onDrop","onMove","useDrop","accept","dragr","isOver","Planner","updatePlan","addRecipe","bucketIdx","setPlannedRecipe","deleteRecipeById","updatePlannedRecipe","movePlannedRecipe","renderInitialBody","isOpen","isInitialTour","onRequestClose","setIsInitialTour","steps","selector","content","Alert","renderDesktopBody","md","lg","xl","minHeight","getScoringFuns","editRecipe","getNrRecipes","Image","src","Workspace","lastUpdated","Date","serialize","str","fileVersion","getRecipes","getSettings","getLastUpdated","toISOString","TextEncoder","encode","InfoBox","wsInfo","toLocaleString","nrRecipes","IconBar","onLoadFile","onNewRecipe","onSaveFile","onEditSettings","unsavedChanges","color","MenuBar","Navbar","bg","Brand","href","marginTop","fontFamily","fontWeight","Toggle","aria-controls","Collapse","Nav","process","App","AppDialogs","AppBodies","addRecipes","newRecipes","fromFile","setState","st","needsSave","newRecipeStore","onFileLoaded","ev","result","ws","deserializeWokspaceFile","reader","FileReader","onload","readAsText","dialog","dismissError","ps","setNrBuckets","planSettings","dismissible","onBeforeunload","isMobileOnly","Component","ReactGA","initialize","ReactDOM","render","StrictMode","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.409615d3.chunk.js","sourcesContent":["import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\ntype LoadFileDialogProps = {\r\n    title: string,\r\n    loadButtonTitle: string,\r\n    onClose: () => void,\r\n    onLoad: (file: File) => void\r\n}\r\n\r\nexport const LoadFileDialog: FunctionComponent<LoadFileDialogProps> = ({title, loadButtonTitle, onClose, onLoad}) => {\r\n\r\n    const [file, setFile] = React.useState<null | File>(null);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <FormControl type=\"file\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                                if(e.target.files)\r\n                                                {\r\n                                                    setFile(e.target.files[0])\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    setFile(null)\r\n                                                }\r\n                                            }}/>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!file} \r\n                        onClick={() => {if(file) onLoad(file)}}>{loadButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, Button} from 'react-bootstrap';\r\n\r\nimport download from 'downloadjs'\r\n\r\ntype SaveFileDialogProps = {\r\n    title: string,\r\n    saveButtonTitle: string,\r\n    data: Blob,\r\n    type: string,\r\n    initialFileName: string,\r\n    extension: string,\r\n    onClose: () => void,\r\n    onSave: () => void\r\n}\r\n\r\nexport const SaveFileDialog: FunctionComponent<SaveFileDialogProps> \r\n                = ({title, saveButtonTitle, onClose, onSave, data, type, initialFileName, extension }) => {\r\n\r\n    const [fileName, setFileName] = React.useState(initialFileName);\r\n\r\n    const startDownload = () => {\r\n        download(data, fileName+\".\"+extension, type)\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <Form.Group controlId=\"formBasicFileName\">\r\n        <Form.Label>File name</Form.Label>\r\n        <Form.Control type=\"fileName\" value={fileName} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFileName(e.target.value)}/>\r\n        </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!fileName || fileName.length===0} \r\n                        onClick={() => {startDownload(); onSave()}}>{saveButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","export interface ScoringFunJSON {\r\n    name: string\r\n    script: string\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class ScoringFun {\r\n\r\n    private name: string\r\n    private script: string\r\n\r\n    constructor(name: string, script: string) {\r\n        this.name = name\r\n        this.script = script\r\n    }\r\n\r\n    public toJSON(): ScoringFunJSON {\r\n        return {\r\n            name: this.name,\r\n            script: this.script\r\n        };\r\n    }\r\n\r\n    public static fromJSON(o: ScoringFunJSON): ScoringFun {\r\n        if (!o.name) {\r\n            throw new Error(\"Missing name field\")\r\n        }\r\n\r\n        if (!o.script) {\r\n            throw new Error(\"Missing script field\")\r\n        }\r\n\r\n        return new ScoringFun(o.name, o.script)\r\n    }\r\n\r\n    public getName() {\r\n        return this.name\r\n    }\r\n\r\n    public getScript() {\r\n        return this.script\r\n    }\r\n}\r\n","import { ScoringFun, ScoringFunJSON } from './ScoringFun'\r\n\r\nexport interface SettingsJSON {\r\n    nrBuckets: number;\r\n    scoringFuns: ScoringFunJSON[];\r\n}\r\n\r\nexport class SettingsBuilder {\r\n    private json: SettingsJSON\r\n\r\n    constructor(settings?: Settings) {\r\n        this.json = settings ? settings.toJSON() : {} as SettingsJSON\r\n    }\r\n\r\n    buckets(nrBuckets: number): SettingsBuilder {\r\n        this.json.nrBuckets = nrBuckets\r\n        return this\r\n    }\r\n\r\n    scoringFuns(scoringfuns: ScoringFunJSON[]) {\r\n        this.json.scoringFuns = scoringfuns\r\n        return this\r\n    }\r\n\r\n    build(): Settings {\r\n        return Settings.fromJSON(this.json)\r\n    }\r\n}\r\n\r\nexport class Settings {\r\n    constructor() {\r\n        this.nrBuckets = 7\r\n        this.scoringFuns = []\r\n    }\r\n\r\n    static builder(settings?: Settings): SettingsBuilder {\r\n        return new SettingsBuilder(settings)\r\n    }\r\n\r\n    public toJSON(): SettingsJSON {\r\n        return {\r\n            nrBuckets: this.nrBuckets,\r\n            scoringFuns: this.scoringFuns.map(f => f.toJSON())\r\n        };\r\n    }\r\n\r\n    public static fromJSON(o: SettingsJSON): Settings {\r\n        if (!o.nrBuckets) {\r\n            o.nrBuckets = 7\r\n        }\r\n\r\n        if (o.nrBuckets < 1 || o.nrBuckets > 7) {\r\n            throw new Error(\"Wrong number of recipes\")\r\n        }\r\n\r\n        if (!o.scoringFuns) {\r\n            o.scoringFuns = []\r\n        }\r\n\r\n        let s = new Settings()\r\n        s.nrBuckets = o.nrBuckets\r\n        s.scoringFuns = o.scoringFuns.map(f => ScoringFun.fromJSON(f))\r\n\r\n        return s\r\n    }\r\n\r\n    public getNrBuckets() {\r\n        return this.nrBuckets\r\n    }\r\n\r\n    public getScoringFuns() {\r\n        return this.scoringFuns\r\n    }\r\n\r\n    private nrBuckets: number\r\n    private scoringFuns: ScoringFun[]\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Modal, Form, Button, Tabs, Tab, Container, Table } from 'react-bootstrap';\r\nimport { Trash } from 'react-bootstrap-icons';\r\n\r\nimport { Settings } from '../model/Settings';\r\n\r\nimport _ from 'lodash';\r\n\r\ntype SettingsDialogProps = {\r\n    settings: Settings,\r\n    onClose: () => void,\r\n    onSave: (planSettings: Settings) => void\r\n}\r\n\r\nexport const SettingsDialog: FunctionComponent<SettingsDialogProps> = (props) => {\r\n\r\n    const [settingsChanged, setSettingsChanged] = React.useState(false);\r\n\r\n    const [settingsJSON, setSettingsJSON] =\r\n        React.useState(props.settings.toJSON());\r\n\r\n    const changeNrRecipes = (newNrBuckets: number) => {\r\n        let s = Object.assign({}, settingsJSON)\r\n        s.nrBuckets = newNrBuckets\r\n        setSettingsJSON(s)\r\n        setSettingsChanged(true)\r\n    }\r\n\r\n    const addEmptyScoringFun = () => {\r\n        let s = Object.assign({}, settingsJSON)\r\n        s.scoringFuns = s.scoringFuns.concat([{ name: \"new scoring fun\", script: \"random(1)\" }])\r\n        setSettingsJSON(s)\r\n        setSettingsChanged(true)\r\n    }\r\n\r\n    const deleteScoringFun = (idx: number) => {\r\n        let s = Object.assign({}, settingsJSON)\r\n        s.scoringFuns = _.concat(_.take(s.scoringFuns, idx), _.drop(s.scoringFuns, idx + 1))\r\n        setSettingsJSON(s)\r\n        setSettingsChanged(true)\r\n    }\r\n\r\n    const changeName = (idx: number, newName: string) => {\r\n        let s = Object.assign({}, settingsJSON)\r\n        s.scoringFuns[idx].name = newName\r\n        setSettingsJSON(s)\r\n        setSettingsChanged(true)\r\n    }\r\n\r\n    const changeScript = (idx: number, newScript: string) => {\r\n        let s = Object.assign({}, settingsJSON)\r\n        s.scoringFuns[idx].script = newScript\r\n        setSettingsJSON(s)\r\n        setSettingsChanged(true)\r\n    }\r\n\r\n    const isValidName = (idx: number) => {\r\n        return settingsJSON.scoringFuns[idx].name.trim().length > 0\r\n    }\r\n\r\n    const isValidScript = (idx: number) => {\r\n        return settingsJSON.scoringFuns[idx].script.trim().length > 0\r\n    }\r\n\r\n    const scoringFunRows = settingsJSON.scoringFuns.map((f, idx) => {\r\n        return (\r\n            <tr>\r\n                <td style={{ width: 150 }}>\r\n                    <Form.Control\r\n                        isInvalid={!isValidName(idx)}\r\n                        className=\"mealee-table-edit\"\r\n                        type=\"name\"\r\n                        size=\"sm\"\r\n                        value={f.name}\r\n                        onChange={e => changeName(idx, e.currentTarget.value)} />\r\n                </td>\r\n                <td>\r\n                    <Form.Control\r\n                        isInvalid={!isValidScript(idx)}\r\n                        rows={isValidScript(idx) ? f.script.split(/\\r\\n|\\r|\\n/).length + 1 : 1}\r\n                        as=\"textarea\"\r\n                        className=\"mealee-table-edit\"\r\n                        type=\"name\"\r\n                        size=\"sm\"\r\n                        style={{ height: \"100%\" }}\r\n                        value={f.script}\r\n                        onChange={e => changeScript(idx, e.currentTarget.value)} />\r\n                </td>\r\n                <td style={{ width: 30 }}>\r\n                    <Trash\r\n                        onClick={() => deleteScoringFun(idx)}\r\n                        style={{ cursor: 'pointer' }} />\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    const saveSettings = () => {\r\n        props.onSave(Settings.fromJSON(settingsJSON))\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose} dialogClassName=\"mealee-settings-dialog\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body style={{ width: 800 }}>\r\n                <Tabs defaultActiveKey=\"general\">\r\n                    <Tab eventKey=\"general\" title=\"General\">\r\n                        <Container className=\"p-3\">\r\n                            <Form onSubmit={(e) => e.preventDefault()}>\r\n                                <Form.Group controlId=\"nrRecipes\">\r\n                                    <Form.Label>Number of recipes:</Form.Label>\r\n                                    <Form.Control as=\"select\" value={settingsJSON.nrBuckets}\r\n                                        onChange={(e) => changeNrRecipes(parseInt(e.target.value))}>\r\n                                        <option key=\"3\">3</option>\r\n                                        <option key=\"4\">4</option>\r\n                                        <option key=\"5\">5</option>\r\n                                        <option key=\"6\">6</option>\r\n                                        <option key=\"7\">7</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Container>\r\n                    </Tab>\r\n                    <Tab eventKey=\"scoring\" title=\"Scoring\" className=\"h-100\">\r\n                        <Container className=\"p-3 h-100 d-flex flex-column\">\r\n                            <Form onSubmit={(e) => e.preventDefault()} className=\"h-100 d-grow-1\">\r\n                                <div className=\"p-0 tableFixHead\">\r\n                                    <Table hover size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <th>Expression</th>\r\n                                                <th className=\"m-0 p-0\" style={{ width: 0 }}>&nbsp;</th>\r\n                                            </tr>\r\n                                        </thead><tbody>\r\n                                            {scoringFunRows}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                                <Button onClick={addEmptyScoringFun}>Add scoring function</Button>\r\n                            </Form>\r\n                        </Container>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"primary\" onClick={saveSettings} disabled={!settingsChanged}>Save</Button>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    );\r\n}\r\n","export interface IngredientJSON {\r\n  name: string;\r\n  amount: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface RecipeJSON {\r\n  id: string;\r\n  title: string;\r\n  source?: string;\r\n  comment?: string;\r\n  serving?: number;\r\n  ingredients: IngredientJSON[];\r\n  labels?: string[];\r\n}\r\n\r\ninterface RecipeFileJSON {\r\n  version: number;\r\n  recipes: RecipeJSON[];\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Ingredient {\r\n  private constructor(name: string, amount: number, unit: string) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n    this.unit = unit;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  public getUnit(): string {\r\n    return this.unit;\r\n  }\r\n\r\n  public static fromJSON(o: IngredientJSON): Ingredient {\r\n    if (!o.name) {\r\n      throw new Error(\"Missing ingredient name\");\r\n    }\r\n\r\n    if (!o.unit) {\r\n      throw new Error(\"Missing ingredient unit\");\r\n    }\r\n\r\n    if (o.amount === undefined) {\r\n      throw new Error(\"Missing ingredient amount\");\r\n    }\r\n\r\n    return new Ingredient(o.name, o.amount, o.unit);\r\n  }\r\n\r\n  public toJSON(): IngredientJSON {\r\n    return {\r\n      name: this.name,\r\n      amount: this.amount,\r\n      unit: this.unit,\r\n    };\r\n  }\r\n\r\n  private name: string;\r\n  private amount: number;\r\n  private unit: string;\r\n}\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Recipe {\r\n  private constructor(id: string, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.ingredients = [];\r\n    this.labels = [];\r\n    this.serving = 4;\r\n  }\r\n\r\n  public static error = new Recipe(\"error\", \"Recipe cannot be found\")\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public getTitle(): string {\r\n    return this.title;\r\n  }\r\n\r\n  public getComment(): string | undefined {\r\n    return this.comment;\r\n  }\r\n\r\n  public getSource(): string | undefined {\r\n    return this.source;\r\n  }\r\n\r\n  public getServing(): number {\r\n    return this.serving;\r\n  }\r\n\r\n  public getIngredients(): Ingredient[] {\r\n    return this.ingredients;\r\n  }\r\n\r\n  public getLabels(): string[] {\r\n    return this.labels;\r\n  }\r\n\r\n  public static fromJSON(o: RecipeJSON): Recipe {\r\n    if (!o.id) {\r\n      o.id = uuidv4();\r\n    }\r\n\r\n    if (!o.title) {\r\n      throw new Error(\"Missing recipe title\");\r\n    }\r\n\r\n    let r = new Recipe(o.id, o.title);\r\n\r\n    r.comment = o.comment;\r\n    r.source = o.source;\r\n    r.serving = o.serving ?? 4;\r\n    r.labels = o.labels ?? [];\r\n\r\n    if (Array.isArray(o.ingredients)) {\r\n      r.ingredients = o.ingredients.map((i) => Ingredient.fromJSON(i));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  public toJSON(): RecipeJSON {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      comment: this.comment,\r\n      source: this.source,\r\n      serving: this.serving,\r\n      ingredients: this.ingredients.map((i) => i.toJSON()),\r\n      labels: this.labels\r\n    };\r\n  }\r\n\r\n  private id: string;\r\n  private title: string;\r\n  private comment?: string;\r\n  private source?: string;\r\n  private serving: number;\r\n  private ingredients: Ingredient[];\r\n  private labels: string[];\r\n}\r\n","import { Index, createIndex, addDocumentToIndex, removeDocumentFromIndex } from \"ndx\";\r\nimport { query, QueryResult } from \"ndx-query\";\r\n\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nimport { words } from \"lodash\";\r\nimport { Map } from \"immutable\";\r\n\r\n// It is not quite immutable only looks like that. The underlying full text search index\r\n// is mutable, so be sure that old versions are not used. \r\nexport class RecipeStore {\r\n  private readonly recipesMap: Map<string, Recipe>;\r\n  private readonly index: Index<string>;\r\n\r\n  private readonly fieldAccessors = [\r\n    (r: Recipe) => r.getTitle(),\r\n    (r: Recipe) => r.getComment() ?? \"\",\r\n    (r: Recipe) => r.getSource() ?? \"\",\r\n    (r: Recipe) => r.getIngredients().map((i) => i.getName()).join(\" \"),\r\n    (r: Recipe) => r.getLabels().join(\" \")\r\n  ];\r\n\r\n  private readonly fieldBoostFactors = [2, 1, 1, 1, 2];\r\n\r\n  constructor(index?: Index<string>, recipesMap?: Map<string, Recipe>) {\r\n    this.index = index ? index : createIndex<string>(this.fieldAccessors.length);\r\n    this.recipesMap = recipesMap ? recipesMap : Map({});\r\n  }\r\n\r\n  private termFilter = (term: string) => {\r\n    return term\r\n      .normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .toLowerCase();\r\n  };\r\n\r\n  public static new = () => {\r\n    return new RecipeStore();\r\n  };\r\n\r\n  // `add()` function will add documents to the index.\r\n  public add = (r: Recipe) => {\r\n    let key = r.getId();\r\n\r\n    let toUpdate = true;\r\n\r\n    if (this.recipesMap.has(key)) {\r\n      if (JSON.stringify(this.recipesMap.get(key)) === JSON.stringify(r)) {\r\n        toUpdate = false;\r\n      }\r\n    }\r\n\r\n    if (toUpdate) {\r\n      // Don't add the same document twice, ndx becomes crazy...\r\n      this.delete(key);\r\n      let newMap = this.recipesMap.set(key, r);\r\n\r\n      addDocumentToIndex(\r\n        this.index,\r\n        this.fieldAccessors,\r\n        // Tokenizer is a function that breaks text into words, phrases, symbols, or other meaningful elements\r\n        // called tokens.\r\n        // Lodash function `words()` splits string into an array of its words, see https://lodash.com/docs/#words for\r\n        // details.\r\n        words,\r\n        // Filter is a function that processes tokens and returns terms, terms are used in Inverted Index to\r\n        // index documents.\r\n        this.termFilter,\r\n        // Document key, it can be a unique document id or a reference to a document if you want to store all documents\r\n        // in memory.\r\n        key,\r\n        // Document.\r\n        r\r\n      );\r\n\r\n      return new RecipeStore(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public addAll = (recipes: Recipe[]) => {\r\n    return recipes.reduce((idx: RecipeStore, recipe: Recipe) => {\r\n      return idx.add(recipe);\r\n    }, this);\r\n  };\r\n\r\n  // `search()` function will be used to perform queries.\r\n  public search = (q: string) =>\r\n    query<string>(\r\n      this.index,\r\n      this.fieldBoostFactors,\r\n      // BM25 ranking function constants:\r\n      1.2, // BM25 k1 constant, controls non-linear term frequency normalization (saturation).\r\n      0.75, // BM25 b constant, controls to what degree document length normalizes tf values.\r\n      words,\r\n      this.termFilter,\r\n      // Set of removed documents, in this example we don't want to support removing documents from the index,\r\n      // so we can ignore it by specifying this set as `undefined` value.\r\n      undefined,\r\n      q\r\n    ).reduce((acc: QueryResult<Recipe>[], res) => {\r\n      let r = this.recipesMap.get(res.key);\r\n      if (r) {\r\n        acc.push({ key: r, score: res.score });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n  public all = () => {\r\n    return Array.from(this.recipesMap.values());\r\n  };\r\n\r\n  public get = (key: string) => {\r\n    return this.recipesMap.get(key);\r\n  };\r\n\r\n  public delete = (key: string) => {\r\n    if (this.recipesMap.has(key)) {\r\n      let newMap = this.recipesMap.delete(key);\r\n      removeDocumentFromIndex(this.index, new Set(), key);\r\n      return new RecipeStore(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public getAll = (keys: string[]) => {\r\n    return keys.reduce((acc: Recipe[], key) => {\r\n      let r = this.recipesMap.get(key);\r\n      if (r) {\r\n        acc.push(r);\r\n      }\r\n      else {\r\n        acc.push(Recipe.error)\r\n      }\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  public count = () => {\r\n    return this.recipesMap.size;\r\n  };\r\n}\r\n","import { RecipeStore } from '../store/RecipeStore'\r\n\r\ndeclare module '../store/RecipeStore' {\r\n    interface RecipeStore {\r\n        getIngredients(): string[],\r\n        getUnits(): string[],\r\n        getLabels(): string[]\r\n    }\r\n}\r\n\r\nRecipeStore.prototype.getIngredients = function () {\r\n    let ingredients = new Set<string>();\r\n\r\n    this.all().forEach(r => {\r\n        r.getIngredients().forEach(i => {\r\n            ingredients.add(i.getName().toLowerCase());\r\n        })\r\n    });\r\n\r\n    const c = new Intl.Collator();\r\n    return Array.from(ingredients).sort(c.compare);\r\n};\r\n\r\nRecipeStore.prototype.getUnits = function () {\r\n\r\n    let units = new Set<string>();\r\n\r\n    this.all().forEach(r => {\r\n        r.getIngredients().forEach(i => {\r\n            units.add(i.getUnit().toLowerCase());\r\n        })\r\n    });\r\n\r\n    const c = new Intl.Collator();\r\n    return Array.from(units).sort(c.compare);\r\n}\r\n\r\nRecipeStore.prototype.getLabels = function () {\r\n\r\n    let labels = new Set<string>();\r\n\r\n    this.all().forEach(r => {\r\n        r.getLabels().forEach(l => {\r\n            labels.add(l.toUpperCase());\r\n        })\r\n    });\r\n\r\n    const c = new Intl.Collator();\r\n    return Array.from(labels).sort(c.compare);\r\n}","import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\n\r\nimport { IngredientJSON } from '../model/Recipe';\r\n\r\nCodeMirror.defineMode(\"ingredients\", () => {\r\n  var Location = {\r\n    INGREDIENT: 0,\r\n    AMOUNT: 1,\r\n    UNIT: 2,\r\n    ERROR: 3,\r\n  };\r\n\r\n  return {\r\n    startState: function () {\r\n      return {\r\n        location: Location.INGREDIENT,\r\n      };\r\n    },\r\n    token: function (stream, state) {\r\n      if (stream.sol()) {\r\n        state.location = Location.INGREDIENT;\r\n      }\r\n\r\n      var ch = stream.next();\r\n\r\n      if (ch === \";\") {\r\n        if (state.location === Location.INGREDIENT)\r\n          state.location = Location.AMOUNT;\r\n        else if (state.location === Location.AMOUNT)\r\n          state.location = Location.UNIT;\r\n        else state.location = Location.ERROR;\r\n      }\r\n\r\n      if (state.location === Location.ERROR) {\r\n        return \"error\";\r\n      }\r\n\r\n      if (ch === \";\") {\r\n        return \"keyword\";\r\n      }\r\n\r\n      if (state.location === Location.INGREDIENT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      if (state.location === Location.AMOUNT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"number\";\r\n      }\r\n\r\n      if (state.location === Location.UNIT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      return \"error\";\r\n    },\r\n  };\r\n});\r\n\r\nexport function parseIngredients(text: string, errors: CodeMirror.Annotation[]) {\r\n\r\n  let ingredients: IngredientJSON[] = [];\r\n\r\n  let lines: string[] = text.split(/\\r?\\n/);\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let line = lines[i];\r\n\r\n    if (line.trim().length > 0) {\r\n      let parts = line.split(\";\");\r\n\r\n      if (parts.length < 3) {\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, 0),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Not enough parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      } else if (parts.length > 3) {\r\n        let startpos = parts[0].length + parts[1].length + parts[2].length + 2;\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, startpos),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Too many parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      }\r\n      else {\r\n        let startAmount = parts[0].length + 1;\r\n        let endAmount = startAmount + parts[1].length;\r\n\r\n        parts = parts.map(s => s.trim());\r\n\r\n        if (parts[0].length === 0 || parts[1].length === 0 || parts[2].length === 0) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, 0),\r\n            to: CodeMirror.Pos(i, line.length),\r\n            message: \"Empty part(s). Syntax: <name>;<amount>;<unit>\",\r\n          });\r\n        }\r\n        else if (\"\" + Number.parseFloat(parts[1]) !== parts[1]) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, startAmount),\r\n            to: CodeMirror.Pos(i, endAmount),\r\n            message: \"Amount should be a number.\",\r\n          });\r\n        }\r\n        else {\r\n          ingredients.push({ name: parts[0], amount: Number.parseFloat(parts[1]), unit: parts[2] })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ingredients;\r\n}\r\n\r\nCodeMirror.registerHelper(\"lint\", \"ingredients\", function (text: string) {\r\n  let errors: CodeMirror.Annotation[] = [];\r\n  parseIngredients(text, errors);\r\n  return errors;\r\n});\r\n\r\nexport function autocomplete(ingredients: string[], units: string[]) {\r\n  return function (\r\n    cm: CodeMirror.Editor,\r\n  ) {\r\n\r\n    var cursor = cm.getCursor(),\r\n      line = cm.getLine(cursor.line);\r\n    var start = cursor.ch,\r\n      end = cursor.ch;\r\n\r\n    let nrpart = (line.substring(0, end).match(/;/g) || []).length;\r\n\r\n    if (nrpart !== 0 && nrpart !== 2) {\r\n      return null;\r\n    }\r\n\r\n    while (start && line.charAt(start - 1) !== \";\") --start;\r\n    while (end < line.length && line.charAt(end) !== \";\") ++end;\r\n    var word = line.slice(start, end).trimLeft().toLowerCase();\r\n\r\n    let selection =\r\n      nrpart === 0\r\n        ? ingredients.filter((i) => i.indexOf(word) >= 0)\r\n        : units.filter((i) => i.startsWith(word));\r\n\r\n    if(selection.length === 1 && selection[0] === word) {\r\n        selection = []\r\n    }\r\n\r\n    return {\r\n      list: selection,\r\n      from: CodeMirror.Pos(cursor.line, start),\r\n      to: CodeMirror.Pos(cursor.line, end),\r\n    };\r\n  }\r\n};\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nimport { RecipeJSON, Recipe, Ingredient } from '../model/Recipe';\r\nimport { RecipeStore } from '../store/RecipeStore';\r\nimport '../service/RecipeService';\r\n\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/addon/lint/lint.css';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/selection/active-line.js';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/lint/lint.js';\r\nimport 'codemirror/addon/display/placeholder.js';\r\n\r\nimport { autocomplete, parseIngredients } from './IngredientLang'\r\n\r\ntype RecipeEditorProps = {\r\n    recipe?: Recipe,\r\n    recipeStore: RecipeStore,\r\n    onClose: () => void,\r\n    onSave: (recipe: Recipe) => void,\r\n    onDelete: (recipe: Recipe) => void\r\n}\r\n\r\nexport const RecipeEditor: FunctionComponent<RecipeEditorProps> = (props) => {\r\n\r\n    const [recipeJSON, setRecipeJSON] = React.useState<RecipeJSON>(\r\n        props.recipe ? props.recipe.toJSON() : Object.create({}));\r\n    const [isTitleInvalid, setIsTitleInvalid] = React.useState(!props.recipe);\r\n    const [isIngredientsInvalid, setIsIngredientsInvalid] = React.useState(false);\r\n\r\n    const generateIngredientCSV = (ingredients: Ingredient[]) => {\r\n        return ingredients.map(i => i.getName() + \";\" + i.getAmount() + \";\" + i.getUnit()).join(\"\\n\")\r\n    }\r\n\r\n    const [ingredientCSV, setIngredientCSV] = React.useState(props.recipe ?\r\n        generateIngredientCSV(props.recipe.getIngredients()) : \"\");\r\n\r\n    const allLabels = props.recipeStore.getLabels().map(\r\n        l => { return { value: l, label: l } })\r\n\r\n    const labels = recipeJSON.labels\r\n        ? recipeJSON.labels.map(\r\n            l => { return { value: l.toUpperCase(), label: l.toUpperCase() } })\r\n        : []\r\n\r\n    const setTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal = e.currentTarget.value;\r\n        setIsTitleInvalid(!newVal || newVal.length === 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ title: newVal } }))\r\n    }\r\n\r\n    const setComment = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ comment: newVal } }))\r\n    }\r\n\r\n    const setSource = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ source: newVal } }))\r\n    }\r\n\r\n    const setServing = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: number | undefined = Number.parseInt(e.currentTarget.value)\r\n        if (isNaN(newVal)) newVal = undefined\r\n        setRecipeJSON(r => ({ ...r, ...{ serving: newVal } }))\r\n    }\r\n\r\n    const updateLabels = (newValue: any) => {\r\n        let labels = (newValue as { label: string }[]).map(o => o.label)\r\n        setRecipeJSON(r => ({ ...r, ...{ labels: labels } }))\r\n    }\r\n\r\n    const updateIngredients = (text: string) => {\r\n\r\n        setIngredientCSV(text);\r\n\r\n        let errors: CodeMirror.Annotation[] = [];\r\n        let ingredients = parseIngredients(text, errors);\r\n        let invalid = errors.length > 0;\r\n\r\n        if (invalid) {\r\n            setIsIngredientsInvalid(true);\r\n        }\r\n        else {\r\n            setIsIngredientsInvalid(false);\r\n            setRecipeJSON(r => ({ ...r, ...{ ingredients: ingredients } }))\r\n        }\r\n    }\r\n\r\n    const saveRecipe = () => {\r\n        props.onSave(Recipe.fromJSON(recipeJSON))\r\n    }\r\n\r\n    const deleteRecipe = () => {\r\n        if (props.recipe) {\r\n            props.onDelete(props.recipe)\r\n        }\r\n    }\r\n\r\n    const focusElement = React.createRef<HTMLInputElement>();\r\n    const ingredientEditorElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose} onEntered={() => {\r\n            if (focusElement.current) focusElement.current.focus();\r\n            if (ingredientEditorElement.current) {\r\n                let cm = CodeMirror.fromTextArea(ingredientEditorElement.current,\r\n                    {\r\n                        lineNumbers: false,\r\n                        mode: \"ingredients\",\r\n                        gutters: [\"CodeMirror-lint-markers\"],\r\n                        lint: true,\r\n                        extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n                    });\r\n\r\n                cm.on(\"change\", (instance: CodeMirror.Editor) => {\r\n                    updateIngredients(instance.getValue());\r\n                });\r\n                cm.on(\"cursorActivity\", (instance: CodeMirror.Editor) => {\r\n                    instance.showHint({\r\n                        hint: autocomplete(props.recipeStore.getIngredients(), props.recipeStore.getUnits()),\r\n                        completeSingle: false,\r\n                        closeOnUnfocus: true\r\n                    });\r\n                });\r\n            }\r\n        }}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{props.recipe ? \"Edit\" : \"Add new \"} recipe</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formTitle\">\r\n                        <Form.Control type=\"title\" value={recipeJSON.title} placeholder=\"Title\"\r\n                            isInvalid={isTitleInvalid} onChange={setTitle}\r\n                            ref={focusElement}\r\n                            size=\"sm\" />\r\n                        <Form.Control.Feedback type=\"invalid\">Required field!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formComment\">\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            value={recipeJSON.comment}\r\n                            onChange={setComment}\r\n                            rows={2}\r\n                            placeholder=\"Comment\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formSource\">\r\n                        <Form.Control\r\n                            type=\"source\"\r\n                            value={recipeJSON.source}\r\n                            onChange={setSource}\r\n                            placeholder=\"Where to find the recipe\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formServing\">\r\n                        <Form.Control\r\n                            type=\"serving\"\r\n                            value={recipeJSON.serving}\r\n                            onChange={setServing}\r\n                            placeholder=\"Number of porties\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formLabel\">\r\n                        <CreatableSelect\r\n                            styles={{\r\n                                menu: provided => ({ ...provided, zIndex: 9999 })\r\n                            }}\r\n                            size=\"sm\"\r\n                            options={allLabels}\r\n                            isMulti\r\n                            placeholder=\"Labels\"\r\n                            onChange={updateLabels}\r\n                            value={labels} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formIngredients\">\r\n                        <Form.Control as=\"textarea\" value={ingredientCSV} ref={ingredientEditorElement}\r\n                            placeholder=\"Ingredients: <name>;<amount>;<unit>\" />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={saveRecipe} disabled={isTitleInvalid || isIngredientsInvalid}>Save recipe</Button>\r\n                {props.recipe &&\r\n                    <Button type=\"button\" variant=\"primary\" onClick={deleteRecipe}>Delete recipe</Button>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >)\r\n}\r\n","import { List, Map, Set } from \"immutable\";\r\n\r\nexport class PlannedRecipe {\r\n\r\n  constructor(recipeId: string, serving: number) {\r\n    this.recipeId = recipeId;\r\n    this.serving = serving;\r\n  }\r\n\r\n  public getRecipeId() {\r\n    return this.recipeId;\r\n  }\r\n\r\n  /* get actual serving */\r\n  public getServing() {\r\n    return this.serving;\r\n  }\r\n\r\n  private recipeId: string;\r\n  private serving: number;\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Plan {\r\n\r\n  // Don't store Recipes, only ids. They are immutable, so if they change...\r\n  private buckets = List<Map<string, PlannedRecipe>>();\r\n\r\n  private constructor(buckets: List<Map<string, PlannedRecipe>>) {\r\n    this.buckets = buckets;\r\n  }\r\n\r\n  public static new = (nrBuckets: number) => {\r\n    return new Plan(List().setSize(nrBuckets));\r\n  };\r\n\r\n  public setNrBuckets(nrBuckets: number) {\r\n    return new Plan(this.buckets.setSize(nrBuckets));\r\n  }\r\n\r\n  public getNrBuckets() {\r\n    return this.buckets.size;\r\n  }\r\n\r\n  public getNrRecipes() {\r\n    let ret = 0;\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ret += bucket.size\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public setPlannedRecipe(bucketNr: number, plannedRecipe: PlannedRecipe) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.set(plannedRecipe.getRecipeId(), plannedRecipe)));\r\n  }\r\n\r\n  public deleteRecipeById(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.delete(recipeId)));\r\n  }\r\n\r\n  public getPlannedRecipes(bucketNr: number) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return Array.from(bucket.valueSeq());\r\n  }\r\n\r\n  public getAllPlannedRecipes() {\r\n    let ids = List<PlannedRecipe>();\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ids = ids.concat(bucket.values());\r\n      }\r\n    }\r\n    return Array.from(ids);\r\n  }\r\n\r\n  /* A unique list of recipe ids */\r\n  public getAllRecipeIds() {\r\n    let ids = Set<string>();\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ids = ids.concat(bucket.valueSeq().map(pr => pr.getRecipeId()));\r\n      }\r\n    }\r\n    return Array.from(ids);\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { LoadFileDialog } from \"./component/LoadFileDialog\";\r\nimport { SaveFileDialog } from \"./component/SaveFileDialog\";\r\nimport { SettingsDialog } from \"./component/Settings\";\r\nimport { RecipeEditor } from \"./component/RecipeEditor\";\r\n\r\nimport \"./service/PlanExporterService\";\r\n\r\nimport App from \"./App\";\r\n\r\nexport enum Dialog {\r\n    LoadFile,\r\n    SaveFile,\r\n    RecipeEditor,\r\n    SavePlanXLS,\r\n    ShoppingList,\r\n    PlanSettings\r\n}\r\n\r\nexport function renderDialog(this: App) {\r\n    switch (this.state.showDialog) {\r\n        case Dialog.LoadFile: {\r\n            return (\r\n                <LoadFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Load recipes file\"\r\n                    loadButtonTitle=\"Load recipes\"\r\n                    onLoad={this.loadFile}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SaveFile: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save recipes file\"\r\n                    saveButtonTitle=\"Save recipes\"\r\n                    data={this.genRecipeFileContent()}\r\n                    type=\"application/json\"\r\n                    initialFileName=\"recipes\"\r\n                    extension=\"json\"\r\n                    onSave={this.fileSaved}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.RecipeEditor: {\r\n            return (\r\n                <RecipeEditor\r\n                    onClose={this.closeRecipeEditor}\r\n                    onSave={this.saveRecipe}\r\n                    onDelete={this.deleteRecipe}\r\n                    recipe={this.state.recipeToEdit}\r\n                    recipeStore={this.state.recipeStore}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SavePlanXLS: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save plan\"\r\n                    saveButtonTitle=\"Save plan\"\r\n                    data={this.state.plan.export(this.state.recipeStore)}\r\n                    type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                    initialFileName=\"plan\"\r\n                    extension=\"xlsx\"\r\n                    onSave={this.closeDialog}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.ShoppingList: {\r\n            return (\r\n                <Modal show={true} onHide={this.closeDialog}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Shopping list</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={20}\r\n                                cols={80}\r\n                                value={this.state.plan.exportShoppingList(this.state.recipeStore)}\r\n                                readOnly />\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.closeDialog}>\r\n                            Close\r\n              </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            );\r\n        }\r\n\r\n        case Dialog.PlanSettings: {\r\n            return (\r\n                <SettingsDialog\r\n                    onClose={this.closeDialog}\r\n                    settings={this.state.settings}\r\n                    onSave={this.updateSettings} />\r\n            );\r\n        }\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n};\r\n","import { RecipeStore } from '../store/RecipeStore';\r\n\r\nimport { Plan, PlannedRecipe } from '../model/Plan';\r\nimport { Recipe } from '../model/Recipe';\r\n\r\nimport XLSX from 'xlsx';\r\nimport _ from 'lodash';\r\n\r\ndeclare module '../model/Plan' {\r\n    interface Plan {\r\n        exportShoppingList(recipeStore: RecipeStore): string\r\n        export(recipeStore: RecipeStore): Blob\r\n    }\r\n}\r\n\r\n// Returns: Ingredient -> (recipe id -> [amount, unit, scale][])\r\nfunction calculateIngredientMap(recipes: [Recipe, PlannedRecipe][]) {\r\n    let ingredientMap = new Map<string, Map<PlannedRecipe, [number, string, number][]>>();\r\n\r\n    recipes.forEach(t => {\r\n\r\n        let r = t[0];\r\n        let pr = t[1];\r\n\r\n        r.getIngredients().forEach(i => {\r\n            let ingredientName = i.getName().toLowerCase();\r\n            let oneIngredientRecord = ingredientMap.get(ingredientName);\r\n            if (!oneIngredientRecord) {\r\n                oneIngredientRecord = new Map()\r\n                ingredientMap.set(ingredientName, oneIngredientRecord);\r\n            }\r\n\r\n            let oneRecipeRecord = oneIngredientRecord.get(pr) ?? [];\r\n            oneRecipeRecord.push([i.getAmount(), i.getUnit().toLowerCase(), pr.getServing() / r.getServing()]);\r\n            oneIngredientRecord.set(pr, oneRecipeRecord);\r\n        });\r\n    });\r\n\r\n    return ingredientMap;\r\n}\r\n\r\nfunction calculateShoppingList(\r\n    ingredientMap: Map<string, Map<PlannedRecipe, [number, string, number][]>>,\r\n    ingredients: string[]) {\r\n    let ingredientList = ingredients.map(name => {\r\n\r\n        let oneIngredientRecord = new Map<string, number>()\r\n        let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string, number][]>()\r\n\r\n        // Group ingredient usages by unit\r\n        for (let oneUsage of ingredient.values()) {\r\n            for (let [amount, unit, scale] of oneUsage) {\r\n                oneIngredientRecord.set(unit,\r\n                    (oneIngredientRecord.get(unit) ?? 0) + amount * scale)\r\n            }\r\n        }\r\n\r\n        return { \"name\": name, \"amounts\": oneIngredientRecord }\r\n    });\r\n\r\n    let ingredientsRows = []\r\n\r\n    for (let { name, amounts } of ingredientList) {\r\n        let line: [string] = [name]\r\n        for (let [unit, amount] of amounts) {\r\n            line.push(\"\" + amount + \" \" + unit)\r\n        }\r\n        ingredientsRows.push(line)\r\n    }\r\n\r\n    return ingredientsRows;\r\n}\r\n\r\n// Exports ShoppingList as list of MD lines\r\nPlan.prototype.exportShoppingList = function (recipeStore: RecipeStore) {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let plannedRecipes = this.getAllPlannedRecipes();\r\n    let recipes = recipeStore.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n    let ingredientMap = calculateIngredientMap(_.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]);\r\n\r\n    let c = new Intl.Collator();\r\n    let ingredients = Array.from(ingredientMap.keys()).sort(c.compare);\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n\r\n    let res = \"\";\r\n\r\n    for (let row of ingredientsRows) {\r\n        res += \"**\" + row.shift() + \"**\";\r\n        res += \" - \";\r\n        res += row.join(\" + \");\r\n        res += \"\\n\";\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// Exports Plan as XLSX\r\nPlan.prototype.export = function (recipeStore: RecipeStore): Blob {\r\n    // Want here the recipes as many times as they appear in the plan\r\n    let plannedRecipes = this.getAllPlannedRecipes();\r\n    let recipes = recipeStore.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n    let zippedPlannedRecipes = _.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]\r\n\r\n    let uniqueRecipes = new Set(recipes);\r\n    let ingredientMap = calculateIngredientMap(zippedPlannedRecipes);\r\n    let ingredients = Array.from(ingredientMap.keys()).sort();\r\n\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate map\r\n\r\n    let planRows: string[][] = _.range(0, this.getNrBuckets()).map(bid => {\r\n        let plannedRecipes = this.getPlannedRecipes(bid);\r\n        let recipes = recipeStore.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n        let zippedPlannedRecipes = _.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]\r\n        return [\"Day #\" + (bid + 1)].concat(\r\n            zippedPlannedRecipes.map(t => t[0].getTitle() + \" (\" + t[1].getServing() + \" people)\"))\r\n    })\r\n    let planWS = XLSX.utils.aoa_to_sheet(planRows);\r\n    XLSX.utils.book_append_sheet(wb, planWS, \"Plan\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Calculate shopping list\r\n\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n    let ingredientsWS = XLSX.utils.aoa_to_sheet(ingredientsRows);\r\n    XLSX.utils.book_append_sheet(wb, ingredientsWS, \"Shopping list\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate ingredient map\r\n\r\n    const mapHeaderRow = zippedPlannedRecipes.map(t => t[0].getTitle() + \" (\" + t[1].getServing() + \" people)\")\r\n    mapHeaderRow.unshift(\"\")\r\n\r\n    const mapDataRows = ingredients.map(name => {\r\n\r\n        let line = [name]\r\n\r\n        for (let pr of plannedRecipes) {\r\n            let ingredient = ingredientMap.get(name) ?? new Map<PlannedRecipe, [number, string, number][]>();\r\n            let recipeIngredient = ingredient.get(pr);\r\n            if (recipeIngredient) {\r\n                line.push(recipeIngredient.map(au => \"\" + (au[0] * au[2]) + \" \" + au[1]).join(\", \"));\r\n            }\r\n            else {\r\n                line.push(\"\");\r\n            }\r\n\r\n        }\r\n\r\n        return line;\r\n    });\r\n\r\n    let mapRows = [mapHeaderRow].concat(mapDataRows);\r\n    let mapWS = XLSX.utils.aoa_to_sheet(mapRows);\r\n    XLSX.utils.book_append_sheet(wb, mapWS, \"Ingredient map\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate recipes\r\n\r\n    // Recipes must be converted to a set to eliminate duplications\r\n    for (let r of uniqueRecipes) {\r\n        let recipeRows = [\r\n            [\"Title\", r.getTitle()],\r\n            [\"Comment\", r.getComment() ?? \"-\"],\r\n            [\"Serves\", r.getServing()],\r\n            [\"Source\", r.getSource() ?? \"-\"],\r\n            [\"Ingredients:\"]\r\n        ];\r\n\r\n        for (let i of r.getIngredients()) {\r\n            recipeRows.push([i.getName().toLowerCase(), i.getAmount(), i.getUnit().toLowerCase()])\r\n        }\r\n\r\n        let recipeWS = XLSX.utils.aoa_to_sheet(recipeRows);\r\n        XLSX.utils.book_append_sheet(wb, recipeWS, r.getTitle().substr(0, 31));\r\n    }\r\n\r\n    let bytes = XLSX.write(wb, { bookType: 'xlsx', bookSST: false, type: 'array' });\r\n    return new Blob([bytes], {\r\n        type: 'application/octet-stream'\r\n    });\r\n}\r\n","import { ScoringFun } from './ScoringFun';\r\n\r\n/* These classes are not immutable, but it is fine as these are \r\n   not used in any state */ \r\n\r\nexport class RecipeScoring {\r\n    private scorings: Map<ScoringFun, number>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scorings = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    addScoring = (scoringFun: ScoringFun, score: number) => {\r\n        this.scorings.set(scoringFun, score)\r\n        this.sum += score\r\n    }\r\n\r\n    getSum = () => {\r\n        return this.sum;\r\n    }\r\n\r\n    getScorings = () => {\r\n        return Array.from(this.scorings);\r\n    }\r\n}\r\n\r\nexport class Scoring {\r\n    private scoring: Map<string, RecipeScoring>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scoring = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    public addScoring = (recipeId: string, sf: ScoringFun, score: number) => {\r\n        if (!this.scoring.has(recipeId)) {\r\n            this.scoring.set(recipeId, new RecipeScoring())\r\n        }\r\n\r\n        this.scoring.get(recipeId)?.addScoring(sf, score);\r\n    }\r\n\r\n    public getSum = (recipeId: string) => {\r\n        let rs = this.scoring.get(recipeId);\r\n        if (rs) {\r\n            return rs.getSum();\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getScoring = (recipeId: string) => {\r\n        return this.scoring.get(recipeId);\r\n    }\r\n}\r\n","import { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { ScoringFun } from '../model/ScoringFun';\r\nimport { Scoring } from '../model/Scoring';\r\n\r\nimport { RecipeStore } from '../store/RecipeStore';\r\n\r\nimport { Parser, Expression } from 'expr-eval';\r\n\r\nimport _ from 'lodash';\r\n\r\ndeclare module '../store/RecipeStore' {\r\n    interface RecipeStore {\r\n        scoreBy(plan: Plan, scoringFuns: ScoringFun[]): Scoring\r\n    }\r\n}\r\n\r\nfunction labelDict(r: Recipe) {\r\n    return _.countBy(r.getLabels().map(l => l.toUpperCase()));\r\n}\r\n\r\nfunction _scoreRecipes(e: Expression, recipes: Recipe[], fun: ScoringFun) {\r\n    return new Map(recipes.map(r => {\r\n        // Dirty trick to be able to pass Recipe type\r\n        let s = e.evaluate({ \"this\": r as unknown as string });\r\n        return [r, s]\r\n    }));\r\n}\r\n\r\nRecipeStore.prototype.scoreBy = function (plan: Plan, scoringFuns: ScoringFun[]) {\r\n    let p = new Parser();\r\n\r\n    let recipes = this.all();\r\n    let rlabels = new Map(recipes.map(r => [r, labelDict(r)]))\r\n    let precipeids = plan.getAllPlannedRecipes().map(r => r.getRecipeId())\r\n    let precipes = _.countBy(precipeids)\r\n    let plabels = _.countBy(_.flatMap(this.getAll(precipeids), r => r.getLabels()).map(l => l.toUpperCase()))\r\n\r\n    p.functions.intersection = (as: any[], bs: any[]) => {\r\n        return _.intersection(as, bs);\r\n    }\r\n\r\n    p.functions.sum = (as: number[]) => {\r\n        return _.sum(as);\r\n    }\r\n\r\n    p.functions.ingredients = (r: Recipe) => {\r\n        return r.getIngredients();\r\n    }\r\n\r\n    p.functions.hasLabel = (r: Recipe, label: string) => {\r\n        let ld = rlabels.get(r);\r\n        if (ld) {\r\n            return ld[label] > 0;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    p.functions.countLabelInPlan = (label: string) => {\r\n        return plabels[label] ?? 0;\r\n    }\r\n\r\n    p.functions.countRecipeInPlan = (r: Recipe) => {\r\n        return precipes[r.getId()] ?? 0;\r\n    }\r\n\r\n    let scoring = new Scoring()\r\n\r\n    for (let sf of scoringFuns) {\r\n        let e = p.parse(sf.getScript())\r\n\r\n        let max = -1;\r\n\r\n        p.functions.normalize = (curr: number) => {\r\n            if (curr > max) {\r\n                max = curr;\r\n            }\r\n\r\n            return curr;\r\n        }\r\n\r\n        let scores = _scoreRecipes(e, recipes, sf);\r\n\r\n        // If `normalize` was used, we need to run it again\r\n        if (max > 0) {\r\n            p.functions.normalize = (curr: number) => {\r\n                return curr / max;\r\n            }\r\n\r\n            scores = _scoreRecipes(e, recipes, sf);\r\n        }\r\n\r\n        for (let [r, s] of scores) {\r\n            scoring.addScoring(r.getId(), sf, s);\r\n        }\r\n    }\r\n\r\n    return scoring;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Binoculars, People, Cart2, ExclamationCircle, ChatRightText, SortNumericUpAlt } from 'react-bootstrap-icons';\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { RecipeScoring } from '../model/Scoring';\r\n\r\ntype RecipeQuickViewProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring\r\n}\r\n\r\nexport const RecipeQuickView: FunctionComponent<RecipeQuickViewProps> = ({ recipe, scoring }) => {\r\n\r\n    const c = new Intl.Collator();\r\n    const ingredients = recipe.getIngredients().map(r => r.getName())\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const scoringLines = scoring &&\r\n        scoring.getScorings().map(oneScore =>\r\n            <Row key={oneScore[0].getName()}>\r\n                <Col xs=\"2\">\r\n                    {oneScore[1].toFixed(2)}\r\n                </Col>\r\n                <Col xs=\"1\">\r\n                    ←\r\n                </Col>\r\n                <Col>\r\n                    {oneScore[0].getName()}\r\n                </Col>\r\n            </Row>);\r\n\r\n    return (\r\n        <Container className=\"pl-0 pr-2\">\r\n            {recipe.getComment() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><ChatRightText height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getComment()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getServing() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><People height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getServing()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getSource() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><Binoculars height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getSource()}</Col>\r\n                </Row>\r\n            }\r\n            <Row className=\"pb-2\">\r\n                <Col xs={1}>\r\n                    <Cart2 height=\"18\" />\r\n                </Col>\r\n                <Col>\r\n                    <Container fluid className=\"pl-0\">\r\n                        <Row>\r\n                            {ingredients}\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n            {recipe.getLabels().length > 0 &&\r\n                <Row className=\"pb-2\">\r\n                    <Col xs={1}>\r\n                        <ExclamationCircle height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container fluid className=\"pl-0\">\r\n                            <Row>\r\n                                {labels}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {scoring &&\r\n                <Row>\r\n                    <Col xs={1}>\r\n                        <SortNumericUpAlt height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container className=\"ml-0 pl-0\">\r\n                            {scoringLines}\r\n                            <Row>\r\n                                <Col xs=\"2\" className=\"border\">\r\n                                    {scoring.getSum().toFixed(2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { Pencil, Eye, Search } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { Scoring, RecipeScoring } from '../model/Scoring';\r\nimport { RecipeStore } from '../store/RecipeStore';\r\n\r\nimport { useDrag } from 'react-dnd'\r\n\r\nimport _ from 'lodash';\r\n\r\ntype RecipeSelectorProps = {\r\n    recipeStore: RecipeStore,\r\n    scoring: Scoring,\r\n    plan: Plan,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\ntype RecipeListItemProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring,\r\n    selected: boolean,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\nconst RecipeListItem: FunctionComponent<RecipeListItemProps> = ({ recipe, selected, scoring, onEdit }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId() },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-recipe-selector-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#FFFFFF'\r\n            }}>\r\n\r\n            <Card\r\n                className=\"mealee-recipe-selector-item\"\r\n                key={recipe.getId()}\r\n                ref={drag}\r\n                style={{\r\n                    opacity: isDragging || selected ? 0.5 : 1,\r\n                    cursor: 'move',\r\n                }}>\r\n                <Card.Body className=\"p-0\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    right: 10,\r\n                    height: 20,\r\n                    width: 40,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Pencil height=\"18\" onClick={() => onEdit(recipe)} style={{ cursor: 'pointer' }} />\r\n                &nbsp;\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-recipe-quick-view\" className=\"recipe-quick-view\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} scoring={scoring} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const RecipeSelector: FunctionComponent<RecipeSelectorProps> = ({ recipeStore, scoring, plan, onEdit }) => {\r\n\r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n    const debouncedSetFilter = React.useCallback(\r\n        _.debounce(setFilter, 150),\r\n        [], // will be created only once initially\r\n    );\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        debouncedSetFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeStore.all() : recipeStore.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = _.sortBy(filteredRecipes, r => scoring.getSum(r.getId()) * -1)\r\n        .map((recipe) =>\r\n            <ListGroup.Item className=\"p-0\" key={recipe.getId()}>\r\n                <RecipeListItem\r\n                    key={recipe.getId()}\r\n                    recipe={recipe}\r\n                    scoring={scoring.getScoring(recipe.getId())}\r\n                    onEdit={onEdit}\r\n                    selected={selectedRecipeSet.has(recipe.getId())} />\r\n            </ListGroup.Item>\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2 h-100 d-flex flex-column\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search /></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <Form.Group controlId=\"recipeGroup\" className=\"flex-grow-1 overflow-auto mealee-recipe-selector-list\">\r\n                <ListGroup>{listItems}</ListGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { Trash, Eye, People } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { RecipeStore } from \"../store/RecipeStore\";\r\nimport { Recipe } from \"../model/Recipe\";\r\nimport { Plan, PlannedRecipe } from \"../model/Plan\";\r\n\r\nimport { useDrop, useDrag } from 'react-dnd'\r\nimport _ from 'lodash';\r\n\r\ntype RecipeBoxProps = {\r\n    bucketId: number,\r\n    recipeStore: RecipeStore,\r\n    plannedRecipe: PlannedRecipe,\r\n    onDelete: (recipeId: string) => void\r\n    onUpdate: (plannedRecipe: PlannedRecipe) => void\r\n}\r\n\r\nconst RecipeBox: FunctionComponent<RecipeBoxProps> = ({\r\n    bucketId,\r\n    recipeStore,\r\n    plannedRecipe,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    let recipe = recipeStore.get(plannedRecipe.getRecipeId()) ?? Recipe.error\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", plannedRecipe: plannedRecipe, from: bucketId },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const updateServing = (e: React.WheelEvent<HTMLDivElement>) => {\r\n        var newServing = e.deltaY > 0\r\n            ? Math.max(1, plannedRecipe.getServing() - 1)\r\n            : Math.min(9, plannedRecipe.getServing() + 1);\r\n\r\n        onUpdate(new PlannedRecipe(plannedRecipe.getRecipeId(), newServing))\r\n    }\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-bucker-recipe-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'move',\r\n            }}>\r\n\r\n            <Card className=\"mealee-bucket-recipe\">\r\n                <Card.Body className=\"mealee-bucket-recipe-body\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    height: 40,\r\n                    width: 20,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Trash height=\"18\" onClick={() => onDelete(recipe.getId())} style={{ cursor: 'pointer' }} />\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-recipe-quick-view\" className=\"recipe-quick-view\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 3,\r\n                    height: 20,\r\n                    width: 25,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <OverlayTrigger\r\n                    key=\"new\"\r\n                    placement=\"right\"\r\n                    overlay={\r\n                        <Tooltip id=\"tooltip-new\">\r\n                            Scroll up/down to change\r\n                        </Tooltip>\r\n                    }>\r\n                    <div onWheel={updateServing}>\r\n                        <span style={{ fontSize: 12, paddingTop: 2, paddingRight: 0 }}>{plannedRecipe.getServing()}</span>\r\n                        <People height=\"12\" />\r\n                    </div>\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype BucketProps = {\r\n    bucketId: number,\r\n    recipeStore: RecipeStore,\r\n    plannedRecipes: PlannedRecipe[],\r\n    onDelete: (bucketid: number, recipeStore: string) => void,\r\n    onUpdate: (bucketid: number, plannedRecipe: PlannedRecipe) => void,\r\n}\r\n\r\nconst Bucket: FunctionComponent<BucketProps> = ({\r\n    bucketId,\r\n    recipeStore,\r\n    plannedRecipes,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    return (\r\n        <Card className=\"mealee-bucket\">\r\n            <Card.Header className=\"mealee-bucket-header\">{\"Day \" + (bucketId + 1)}</Card.Header>\r\n            <Card.Body className=\"mealee-bucket-body\">\r\n                {plannedRecipes.map(r =>\r\n                    <RecipeBox key={r.getRecipeId()}\r\n                        bucketId={bucketId}\r\n                        recipeStore={recipeStore}\r\n                        plannedRecipe={r}\r\n                        onDelete={(recipeId) => onDelete(bucketId, recipeId)}\r\n                        onUpdate={(plannedRecipe) => onUpdate(bucketId, plannedRecipe)} />)}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\ntype DroppableBucketProps = BucketProps & {\r\n    onDrop: (buckedId: number, plannedRecipe: PlannedRecipe) => void,\r\n    onMove: (from: number, to: number, plannedRecipe: PlannedRecipe) => void\r\n}\r\n\r\nconst DroppableBucket: FunctionComponent<DroppableBucketProps> = ({\r\n    bucketId,\r\n    recipeStore,\r\n    plannedRecipes,\r\n    onDrop,\r\n    onMove,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: \"recipe\",\r\n        drop: (dragr) => {\r\n            let r = dragr as unknown as { id: string, from?: number, plannedRecipe?: PlannedRecipe };\r\n            if (r.from !== undefined && r.plannedRecipe !== undefined) {\r\n                onMove(r.from, bucketId, r.plannedRecipe)\r\n            }\r\n            else {\r\n                let recipe = recipeStore.get(r.id)\r\n                onDrop(bucketId, new PlannedRecipe(r.id, recipe ? recipe.getServing() : 0))\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}>\r\n\r\n            <Bucket\r\n                bucketId={bucketId}\r\n                recipeStore={recipeStore}\r\n                plannedRecipes={plannedRecipes}\r\n                onDelete={onDelete}\r\n                onUpdate={onUpdate} />\r\n\r\n            {isOver && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                        opacity: 0.5,\r\n                        backgroundColor: 'yellow',\r\n                    }} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PlannerProps = {\r\n    recipeStore: RecipeStore,\r\n    plan: Plan,\r\n    updatePlan: (plan: Plan) => void\r\n}\r\n\r\nexport const Planner: FunctionComponent<PlannerProps> = ({ recipeStore, plan, updatePlan }) => {\r\n\r\n    const addRecipe = (bucketIdx: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.setPlannedRecipe(bucketIdx, plannedRecipe))\r\n    }\r\n\r\n    const deleteRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeById(bucketIdx, recipeId))\r\n    }\r\n\r\n    const updatePlannedRecipe = (bucketIdx: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.setPlannedRecipe(bucketIdx, plannedRecipe))\r\n    }\r\n\r\n    const movePlannedRecipe = (from: number, to: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.deleteRecipeById(from, plannedRecipe.getRecipeId()).setPlannedRecipe(to, plannedRecipe))\r\n    }\r\n\r\n    let cols = _.range(plan.getNrBuckets()).map(i => {\r\n        return (\r\n            <Col key={i} xs=\"auto\" className=\"pr-2 pl-0\">\r\n                <DroppableBucket\r\n                    bucketId={i}\r\n                    recipeStore={recipeStore}\r\n                    plannedRecipes={plan.getPlannedRecipes(i)}\r\n                    onDrop={addRecipe}\r\n                    onDelete={deleteRecipe}\r\n                    onUpdate={updatePlannedRecipe}\r\n                    onMove={movePlannedRecipe} />\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container className=\"pt-0 pb-2 pl-0 pr-0\">\r\n            <Row>\r\n                {cols}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nimport { Container, Col, Row, Image } from \"react-bootstrap\";\r\n\r\nimport './service/ScoringService';\r\n\r\nimport { RecipeSelector } from \"./component/RecipeSelector\";\r\nimport { Planner } from \"./component/Planner\";\r\n\r\nimport Tour from 'reactour';\r\n\r\nimport App from \"./App\";\r\nimport { Dialog } from \"./AppDialogs\";\r\n\r\nexport function renderInitialBody(this: App) {\r\n    return (\r\n        <Col xs=\"auto\" className=\"pt-3\">\r\n            <Tour\r\n                isOpen={this.state.isInitialTour}\r\n                onRequestClose={() => this.setIsInitialTour(false)}\r\n                steps={[\r\n                    {\r\n                        selector: '.my-first-step-a',\r\n                        content: <Container className=\"pt-4\">Load some recipes from a file or ...</Container>,\r\n                    },\r\n                    {\r\n                        selector: '.my-first-step-b',\r\n                        content: <Container className=\"pt-4\">... or add a new recipe manually!</Container>,\r\n                    }\r\n                ]} />\r\n            <Alert key=\"recipe\" variant=\"warning\">\r\n                I do not see any recipes. <Button variant=\"link\" className=\"pt-1\" onClick={() => this.setIsInitialTour(true)}>Are you new to Mealee?</Button>\r\n            </Alert>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport function renderDesktopBody(this: App) {\r\n\r\n    return (\r\n        <>\r\n            <Col xs=\"8\" sm=\"5\" md=\"4\" lg=\"3\" xl=\"3\" className=\"h-100\" style={{ minHeight: 0 }}>\r\n                <RecipeSelector\r\n                    plan={this.state.plan}\r\n                    scoring={this.state.recipeStore.scoreBy(this.state.plan, this.state.settings.getScoringFuns())}\r\n                    recipeStore={this.state.recipeStore}\r\n                    onEdit={this.editRecipe} />\r\n\r\n            </Col>\r\n            <Col>\r\n                <Container className=\"pt-2 pl-0 pr-0\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Planner\r\n                                recipeStore={this.state.recipeStore}\r\n                                plan={this.state.plan}\r\n                                updatePlan={this.updatePlan} />\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.plan.getNrRecipes() > 0 &&\r\n                        <Row>\r\n                            <Col className=\"pl-0\">\r\n                                <Button\r\n                                    variant=\"mealee\"\r\n                                    onClick={this.showDialog(Dialog.SavePlanXLS)}>\r\n                                    Export plan &nbsp;\r\n                                <Image src=\"xlsx_logo.svg\" height=\"18\" />\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"ml-2\"\r\n                                    variant=\"mealee\"\r\n                                    onClick={this.showDialog(Dialog.ShoppingList)}>\r\n                                    Show shopping list &nbsp;\r\n                                <Image src=\"todoist_logo.svg\" height=\"18\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Container>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n","\r\nimport { Recipe, RecipeJSON } from './Recipe'\r\nimport { Settings, SettingsJSON } from './Settings'\r\n\r\nexport interface WorkspaceFileJSON {\r\n    fileVersion: number;\r\n    recipes: RecipeJSON[];\r\n    settings: SettingsJSON;\r\n    lastUpdated: string;\r\n}\r\n\r\nexport class Workspace {\r\n\r\n    constructor(recipes: Recipe[], settings: Settings, lastUpdated?: Date) {\r\n        this.recipes = recipes;\r\n        this.settings = settings;\r\n        this.lastUpdated = lastUpdated ?? new Date();\r\n    }\r\n\r\n    public getRecipes() {\r\n        return this.recipes;\r\n    }\r\n\r\n    public getSettings() {\r\n        return this.settings;\r\n    }\r\n\r\n    public getLastUpdated() {\r\n        return this.lastUpdated;\r\n    }\r\n\r\n    private recipes: Recipe[];\r\n    private settings: Settings;\r\n    private lastUpdated: Date;\r\n}","import { Recipe } from '../model/Recipe'\r\nimport { Workspace, WorkspaceFileJSON } from '../model/Workspace'\r\nimport { Settings } from '../model/Settings'\r\n\r\ndeclare module '../model/Workspace' {\r\n    interface Workspace {\r\n        serialize(): Blob,\r\n    }\r\n}\r\n\r\nWorkspace.prototype.serialize = function () {\r\n    let str = JSON.stringify({\r\n        fileVersion: 1,\r\n        recipes: this.getRecipes(),\r\n        settings: this.getSettings(),\r\n        lastUpdated: this.getLastUpdated().toISOString()\r\n    });\r\n    let bytes = new TextEncoder().encode(str);\r\n    let blob = new Blob([bytes], {\r\n        type: \"application/json;charset=utf-8\",\r\n    });\r\n    return blob;\r\n}\r\n\r\nexport function deserializeWokspaceFile(data: string) {\r\n    let json = JSON.parse(data);\r\n\r\n    if (typeof json === \"object\") {\r\n        let r: WorkspaceFileJSON = json;\r\n        if (!r.fileVersion) r.fileVersion = 1;\r\n\r\n        if (typeof r.fileVersion !== \"undefined\") {\r\n            if (r.fileVersion !== 1) {\r\n                throw new Error(\"Invalid recipe file version\");\r\n            }\r\n\r\n            let lastUpdated = r.lastUpdated ? new Date(Date.parse(r.lastUpdated)) : undefined\r\n\r\n            if (Array.isArray(r.recipes)) {\r\n                return new Workspace(\r\n                    r.recipes.map(Recipe.fromJSON),\r\n                    r.settings ? Settings.fromJSON(r.settings) : new Settings(),\r\n                    lastUpdated);\r\n            }\r\n        }\r\n    }\r\n\r\n    throw new Error(\"Invalid mealee file\");\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { WorkspaceInfo } from '../model/WorkspaceInfo';\r\n\r\ntype InfoBoxProps = {\r\n    wsInfo: WorkspaceInfo\r\n}\r\n\r\nexport const InfoBox: FunctionComponent<InfoBoxProps> = ({ wsInfo }) => {\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col xs={6}>Last updated:</Col>\r\n                <Col sm=\"auto\">{wsInfo.lastUpdated ? wsInfo.lastUpdated.toLocaleString() : \"-\"}</Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={6}>Number of recipes:</Col>\r\n                <Col sm=\"auto\">{wsInfo.nrRecipes}</Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { OverlayTrigger, Tooltip, Popover } from \"react-bootstrap\";\r\nimport { Upload, Download, PlusCircle, InfoCircle, Gear } from 'react-bootstrap-icons';\r\n\r\nimport { InfoBox } from \"./InfoBox\";\r\nimport { WorkspaceInfo } from \"../model/WorkspaceInfo\";\r\n\r\ntype IconBarProps = {\r\n    onLoadFile: () => void;\r\n    onNewRecipe: () => void;\r\n    onSaveFile: () => void;\r\n    onEditSettings: () => void;\r\n    unsavedChanges: boolean;\r\n    wsInfo: WorkspaceInfo;\r\n};\r\n\r\nexport const IconBar: FunctionComponent<IconBarProps> = ({\r\n    onLoadFile,\r\n    onNewRecipe,\r\n    onSaveFile,\r\n    onEditSettings,\r\n    unsavedChanges,\r\n    wsInfo\r\n}) => {\r\n    return (\r\n        <Container className=\"pl-0 ml-2 mr-2 p-0\">\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"upload\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-upload\">\r\n                                Load recipes and settings\r\n                            </Tooltip>\r\n                        }>\r\n                        <Upload\r\n                            className=\"my-first-step-a\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onLoadFile} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"download\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-download\">\r\n                                Save recipes and settings\r\n                            </Tooltip>\r\n                        }>\r\n                        {unsavedChanges\r\n                            ? <Download\r\n                                className=\"text-warning\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onSaveFile} />\r\n                            : <Download\r\n                                style={{ color: \"#ffffff40\" }} />\r\n                        }\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Add new recipe\r\n                            </Tooltip>\r\n                        }>\r\n                        <PlusCircle\r\n                            className=\"my-first-step-b\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onNewRecipe} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"info\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Popover id=\"popover-info\" className=\"quick-info\">\r\n                                <Popover.Title>Recipes information</Popover.Title>\r\n                                <Popover.Content>\r\n                                    <InfoBox wsInfo={wsInfo} />\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        }>\r\n                        <InfoCircle\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"settings\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-settings\">\r\n                                Settings\r\n                            </Tooltip>\r\n                        }>\r\n\r\n                        <Gear style={{\r\n                            color: \"#ffffff\",\r\n                            cursor: \"pointer\"\r\n                        }} onClick={onEditSettings} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\r\n\r\nfunction getVersionNumber() {\r\n    return `${process.env.REACT_APP_VERSION}`;\r\n}\r\n\r\nexport const MenuBar: FunctionComponent = () => {\r\n    return (\r\n        <Navbar bg=\"mealee-menu\" variant=\"dark\" className=\"pl-1\">\r\n            <Navbar.Brand className=\"logo mr-2\" href=\"#home\">\r\n                <Image src=\"mealee_logo_v9.svg\" height={60} />\r\n            </Navbar.Brand>\r\n            <Navbar.Brand style={{ marginTop: 40 }}>\r\n                <span style={{\r\n                    fontFamily: \"'Baloo 2', cursive\",\r\n                    fontWeight: 500,\r\n                    fontSize: 30\r\n                }}>meal planning for geeks</span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"container-fluid\">\r\n                    <Nav.Item className=\"ml-auto\">\r\n                        <span style={{\r\n                            fontFamily: \"'Baloo 2', cursive\",\r\n                            fontWeight: 600,\r\n                            fontSize: 20,\r\n                            color: \"#D1EdF230\"\r\n                        }}>v{getVersionNumber()}\r\n                        </span>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport * as AppDialogs from \"./AppDialogs\";\r\nimport * as AppBodies from \"./AppBodies\";\r\n\r\nimport { RecipeStore } from \"./store/RecipeStore\";\r\n\r\nimport { Settings } from \"./model/Settings\";\r\nimport { Plan } from \"./model/Plan\";\r\nimport { Recipe } from \"./model/Recipe\";\r\nimport { Workspace } from \"./model/Workspace\";\r\n\r\nimport \"./service/WorkspaceService\"\r\nimport { deserializeWokspaceFile } from \"./service/WorkspaceService\"\r\n\r\nimport { IconBar } from \"./component/IconBar\";\r\nimport { MenuBar } from \"./component/MenuBar\";\r\n\r\nimport { Beforeunload } from \"react-beforeunload\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\ntype AppState = {\r\n    recipeStore: RecipeStore;\r\n    settings: Settings;\r\n    plan: Plan;\r\n    showDialog?: Dialog;\r\n    recipeToEdit?: Recipe;\r\n    error: string | null;\r\n    unsavedChanges: boolean;\r\n    isInitialTour: boolean;\r\n    lastUpdated?: Date;\r\n};\r\n\r\nenum Dialog {\r\n    LoadFile,\r\n    SaveFile,\r\n    RecipeEditor,\r\n    SavePlanXLS,\r\n    ShoppingList,\r\n    PlanSettings\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        let recipeStore = new RecipeStore();\r\n        let planSettings = new Settings();\r\n        let plan = Plan.new(planSettings.getNrBuckets());\r\n\r\n        // Hard binding is needed if `loadFile` do not use arrow notation\r\n        // this.loadFile = this.loadFile.bind(this);\r\n        this.state = {\r\n            recipeStore: recipeStore,\r\n            settings: planSettings,\r\n            plan: plan,\r\n            showDialog: undefined,\r\n            recipeToEdit: undefined,\r\n            error: null,\r\n            unsavedChanges: false,\r\n            isInitialTour: false\r\n        };\r\n    }\r\n\r\n    public renderDialog = AppDialogs.renderDialog;\r\n    public renderInitialBody = AppBodies.renderInitialBody;\r\n    public renderDesktopBody = AppBodies.renderDesktopBody;\r\n\r\n    addRecipes = (newRecipes: Recipe[], fromFile = false) => {\r\n        this.setState((st) => {\r\n            // You want to save only if it is not a first file load\r\n            let needsSave =\r\n                st.unsavedChanges || !(fromFile && st.recipeStore.count() === 0);\r\n\r\n            let ret = {};\r\n            let newRecipeStore = st.recipeStore.addAll(newRecipes);\r\n\r\n            if (newRecipeStore !== st.recipeStore) {\r\n                ret = {\r\n                    recipeStore: newRecipeStore,\r\n                    unsavedChanges: needsSave,\r\n                };\r\n            }\r\n\r\n            return ret;\r\n        });\r\n    };\r\n\r\n    setIsInitialTour = (t: boolean) => {\r\n        this.setState({ isInitialTour: t });\r\n    }\r\n\r\n    saveRecipe = (recipe: Recipe) => {\r\n        this.addRecipes([recipe]);\r\n        this.closeRecipeEditor();\r\n    };\r\n\r\n    onFileLoaded = (ev: ProgressEvent<FileReader>) => {\r\n        let data = ev.target?.result;\r\n\r\n        if (typeof data == \"string\") {\r\n            try {\r\n                let ws = deserializeWokspaceFile(data);\r\n                this.addRecipes(ws.getRecipes(), true);\r\n                this.updateSettings(ws.getSettings(), true);\r\n                this.setState({ lastUpdated: ws.getLastUpdated() });\r\n            } catch (e) {\r\n                this.setState({ error: e.message });\r\n            }\r\n        }\r\n        this.closeDialog();\r\n    };\r\n\r\n    loadFile = (file: File) => {\r\n        var reader = new FileReader();\r\n        reader.onload = (ev) => this.onFileLoaded(ev);\r\n        reader.readAsText(file, \"UTF-8\");\r\n    };\r\n\r\n    genRecipeFileContent = () => {\r\n        let ws = new Workspace(this.state.recipeStore.all(), this.state.settings);\r\n        return ws.serialize();\r\n    };\r\n\r\n    fileSaved = () => {\r\n        this.setState({ unsavedChanges: false, lastUpdated: new Date() });\r\n        this.closeDialog();\r\n    };\r\n\r\n    showDialog = (dialog: Dialog) => {\r\n        return () => this.setState({ showDialog: dialog });\r\n    };\r\n\r\n    closeDialog = () => {\r\n        this.setState({ showDialog: undefined });\r\n    };\r\n\r\n    closeRecipeEditor = () => {\r\n        this.setState({ recipeToEdit: undefined, showDialog: undefined });\r\n    };\r\n\r\n    dismissError = () => {\r\n        this.setState({ error: null });\r\n    };\r\n\r\n    updateSettings = (ps: Settings, fromFile = false) => {\r\n        this.setState((st) => {\r\n            return {\r\n                settings: ps,\r\n                unsavedChanges: !fromFile,\r\n                plan: st.plan.setNrBuckets(ps.getNrBuckets()),\r\n                showDialog: undefined\r\n            };\r\n        });\r\n    };\r\n\r\n    updatePlan = (plan: Plan) => {\r\n        this.setState({\r\n            plan: plan\r\n        });\r\n    };\r\n\r\n    editRecipe = (recipe: Recipe) => {\r\n        this.setState({ showDialog: Dialog.RecipeEditor, recipeToEdit: recipe });\r\n    };\r\n\r\n    deleteRecipe = (recipe: Recipe) => {\r\n        this.setState((st) => {\r\n            let newRecipeStore = st.recipeStore.delete(recipe.getId());\r\n\r\n            return {\r\n                recipeStore: newRecipeStore,\r\n                showDialog: undefined,\r\n                recipeToEdit: undefined,\r\n                unsavedChanges: true,\r\n            };\r\n        });\r\n    };\r\n\r\n    render(this: App) {\r\n\r\n        return (\r\n            <Container fluid className=\"d-flex flex-column vh-100\">\r\n                <Alert\r\n                    variant=\"danger\"\r\n                    onClose={this.dismissError}\r\n                    show={!!this.state.error}\r\n                    dismissible>\r\n                    {this.state.error}\r\n                </Alert>\r\n\r\n                {this.state.unsavedChanges &&\r\n                    <Beforeunload onBeforeunload={() => \"You'll lose your data!\"} />\r\n                }\r\n\r\n                {this.renderDialog()}\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <MenuBar />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {!isMobileOnly\r\n                    ?\r\n                    <Row className=\"h-100\" style={{ minHeight: 0 }}>\r\n                        <Col xs=\"auto\" className=\"pl-0 pr-2 pt-3\">\r\n                            <IconBar\r\n                                onLoadFile={this.showDialog(Dialog.LoadFile)}\r\n                                onNewRecipe={this.showDialog(Dialog.RecipeEditor)}\r\n                                onSaveFile={this.showDialog(Dialog.SaveFile)}\r\n                                onEditSettings={this.showDialog(Dialog.PlanSettings)}\r\n                                unsavedChanges={this.state.unsavedChanges}\r\n                                wsInfo={{\r\n                                    lastUpdated: this.state.lastUpdated,\r\n                                    nrRecipes: this.state.recipeStore.count()\r\n                                }} />\r\n                        </Col>\r\n                        {this.state.recipeStore.count() === 0 && this.renderInitialBody()}\r\n                        {this.state.recipeStore.count() > 0 && !isMobileOnly && this.renderDesktopBody()}\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col className=\"mt-3\">\r\n                            <Alert key=\"recipe\" variant=\"danger\">\r\n                                Mobile is not supported as for now. Please try it on a little bit bigger device. Sorry for that.\r\n              </Alert>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport ReactGA from 'react-ga'\r\n\r\nimport { isMobile } from \"react-device-detect\"\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { TouchBackend } from 'react-dnd-touch-backend'\r\n\r\n// https://levelup.gitconnected.com/using-google-analytics-with-react-3d98d709399b#:~:text=To%20begin%20integrating%20Google%20Analytics,react%2Dga%20package%20from%20npm.&text=The%20react%2Dga%20package%20is,the%20module%20in%20your%20application.\r\n\r\nconst trackingId = \"UA-74643376-3\"\r\nReactGA.initialize(trackingId)\r\n//ReactGA.set({\r\n// any data that is relevant to the user session\r\n// that you would like to track with google analytics\r\n//})\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n            <App />\r\n        </DndProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}