{"version":3,"sources":["component/LoadFileDialog.tsx","component/SaveFileDialog.tsx","component/Settings.tsx","model/Recipe.ts","store/RecipeStore.ts","service/RecipeService.ts","component/IngredientLang.ts","component/RecipeEditor.tsx","model/Plan.ts","AppDialogs.tsx","service/PlanExporterService.ts","model/ScoringFun.ts","model/Scoring.ts","service/ScoringService.ts","component/RecipeQuickView.tsx","component/RecipeSelector.tsx","component/Planner.tsx","AppBodies.tsx","model/Settings.ts","model/Workspace.ts","service/WorkspaceService.ts","component/IconBar.tsx","component/MenuBar.tsx","App.tsx","index.js"],"names":["LoadFileDialog","title","loadButtonTitle","onClose","onLoad","React","useState","file","setFile","Modal","show","onHide","Header","closeButton","Title","Body","Form","FormControl","type","onChange","e","target","files","Footer","Button","variant","onClick","disabled","SaveFileDialog","saveButtonTitle","onSave","data","initialFileName","extension","fileName","setFileName","Group","controlId","Label","Control","value","length","download","SettingsDialog","props","Tabs","defaultActiveKey","Tab","eventKey","Container","className","onSubmit","preventDefault","as","settings","nrRecipes","newNrRecipes","newSettings","clone","onUpdate","changeNrRecipes","parseInt","key","Ingredient","name","amount","unit","this","o","Error","undefined","Recipe","id","comment","source","serving","ingredients","labels","map","i","toJSON","replace","c","r","Math","random","toString","Array","isArray","fromJSON","error","RecipeStore","index","recipesMap","fieldAccessors","getTitle","getComment","getSource","getIngredients","getName","join","getLabels","fieldBoostFactors","termFilter","term","normalize","toLowerCase","add","getId","toUpdate","has","JSON","stringify","get","delete","newMap","set","addDocumentToIndex","words","addAll","recipes","reduce","idx","recipe","search","q","query","acc","res","push","score","all","from","values","removeDocumentFromIndex","Set","getAll","keys","count","size","createIndex","Map","new","prototype","forEach","Intl","Collator","sort","compare","getUnits","units","getUnit","parseIngredients","text","errors","lines","split","line","trim","parts","CodeMirror","Pos","to","message","startpos","startAmount","endAmount","s","Number","parseFloat","autocomplete","cm","cursor","getCursor","getLine","start","ch","end","nrpart","substring","match","charAt","word","slice","trimLeft","selection","filter","indexOf","startsWith","list","defineMode","Location","startState","location","token","stream","state","sol","next","eatWhile","registerHelper","RecipeEditor","Object","create","recipeJSON","setRecipeJSON","isTitleInvalid","setIsTitleInvalid","isIngredientsInvalid","setIsIngredientsInvalid","getAmount","ingredientCSV","setIngredientCSV","l","toUpperCase","labelCSV","setLabelCSV","focusElement","createRef","ingredientEditorElement","onEntered","current","focus","fromTextArea","lineNumbers","mode","gutters","lint","extraKeys","on","instance","updateIngredients","getValue","showHint","hint","recipeStore","completeSingle","closeOnUnfocus","placeholder","isInvalid","newVal","currentTarget","ref","Feedback","rows","isNaN","onDelete","PlannedRecipe","recipeId","Plan","buckets","List","nrBuckets","setSize","ret","bucket","bucketNr","plannedRecipe","getRecipeId","valueSeq","ids","concat","pr","Dialog","calculateIngredientMap","ingredientMap","t","ingredientName","oneIngredientRecord","oneRecipeRecord","getServing","calculateShoppingList","ingredientList","ingredient","oneUsage","scale","ingredientsRows","amounts","renderDialog","showDialog","LoadFile","closeDialog","loadFile","SaveFile","genRecipeFileContent","fileSaved","closeRecipeEditor","saveRecipe","deleteRecipe","recipeToEdit","SavePlanXLS","plan","export","ShoppingList","cols","exportShoppingList","readOnly","PlanSettings","updateSettings","plannedRecipes","getAllPlannedRecipes","_","zip","row","shift","zippedPlannedRecipes","uniqueRecipes","wb","XLSX","utils","book_new","planRows","range","getNrBuckets","bid","getPlannedRecipes","planWS","aoa_to_sheet","book_append_sheet","ingredientsWS","mapHeaderRow","unshift","mapDataRows","recipeIngredient","au","mapRows","mapWS","recipeRows","recipeWS","substr","bytes","write","bookType","bookSST","Blob","ScoringFun","script","RecipeScoring","scorings","sum","addScoring","scoringFun","getSum","getScorings","Scoring","scoring","sf","rs","getScoring","scoringFuns","labelDict","countBy","_scoreRecipes","fun","evaluate","scoreBy","p","Parser","rlabels","precipeids","precipes","plabels","flatMap","functions","intersection","bs","hasLabel","label","ld","planHasLabel","planHasRecipe","parse","getScript","max","curr","scores","RecipeQuickView","n","Col","sm","scoringLines","oneScore","Row","xs","toFixed","height","fluid","RecipeListItem","selected","onEdit","useDrag","item","collect","monitor","isDragging","drag","style","position","width","backgroundColor","Card","opacity","top","transform","right","zIndex","OverlayTrigger","placement","overlay","Popover","Content","RecipeSelector","setFilter","debouncedSetFilter","useCallback","debounce","filteredRecipes","selectedRecipeSet","getAllRecipeIds","listItems","sortBy","ListGroup","Item","InputGroup","Prepend","Text","event","RecipeBox","bucketId","left","Tooltip","onWheel","newServing","deltaY","min","fontSize","paddingTop","paddingRight","Bucket","DroppableBucket","onDrop","onMove","useDrop","accept","drop","dragr","isOver","Planner","updatePlan","addRecipe","bucketIdx","setPlannedRecipe","deleteRecipeById","updatePlannedRecipe","movePlannedRecipe","renderInitialBody","isOpen","isInitialTour","onRequestClose","setIsInitialTour","steps","selector","content","Alert","renderDesktopBody","md","lg","xl","minHeight","editRecipe","getNrRecipes","Image","src","Settings","Workspace","serialize","str","fileVersion","getRecipes","getSettings","TextEncoder","encode","IconBar","onLoadFile","onNewRecipe","onSaveFile","onEditSettings","unsavedChanges","color","MenuBar","Navbar","bg","Brand","href","marginTop","fontFamily","fontWeight","Toggle","aria-controls","Collapse","Nav","process","App","AppDialogs","AppBodies","addRecipes","newRecipes","fromFile","setState","st","needsSave","newRecipeStore","onFileLoaded","ev","result","ws","json","deserializeWokspaceFile","reader","FileReader","onload","readAsText","dialog","dismissError","ps","setNrBuckets","planSettings","dismissible","onBeforeunload","isMobileOnly","Component","ReactGA","initialize","ReactDOM","render","StrictMode","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.d0255aa5.chunk.js","sourcesContent":["import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\ntype LoadFileDialogProps = {\r\n    title: string,\r\n    loadButtonTitle: string,\r\n    onClose: () => void,\r\n    onLoad: (file: File) => void\r\n}\r\n\r\nexport const LoadFileDialog: FunctionComponent<LoadFileDialogProps> = ({title, loadButtonTitle, onClose, onLoad}) => {\r\n\r\n    const [file, setFile] = React.useState<null | File>(null);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <FormControl type=\"file\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                                if(e.target.files)\r\n                                                {\r\n                                                    setFile(e.target.files[0])\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    setFile(null)\r\n                                                }\r\n                                            }}/>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!file} \r\n                        onClick={() => {if(file) onLoad(file)}}>{loadButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, Button} from 'react-bootstrap';\r\n\r\nimport download from 'downloadjs'\r\n\r\ntype SaveFileDialogProps = {\r\n    title: string,\r\n    saveButtonTitle: string,\r\n    data: Blob,\r\n    type: string,\r\n    initialFileName: string,\r\n    extension: string,\r\n    onClose: () => void,\r\n    onSave: () => void\r\n}\r\n\r\nexport const SaveFileDialog: FunctionComponent<SaveFileDialogProps> \r\n                = ({title, saveButtonTitle, onClose, onSave, data, type, initialFileName, extension }) => {\r\n\r\n    const [fileName, setFileName] = React.useState(initialFileName);\r\n\r\n    const startDownload = () => {\r\n        download(data, fileName+\".\"+extension, type)\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <Form.Group controlId=\"formBasicFileName\">\r\n        <Form.Label>File name</Form.Label>\r\n        <Form.Control type=\"fileName\" value={fileName} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFileName(e.target.value)}/>\r\n        </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!fileName || fileName.length===0} \r\n                        onClick={() => {startDownload(); onSave()}}>{saveButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Modal, Form, Button, Tabs, Tab, Container } from 'react-bootstrap';\r\n\r\nimport { Settings } from '../model/Settings';\r\n\r\ntype SettingsDialogProps = {\r\n    settings: Settings,\r\n    onClose: () => void,\r\n    onUpdate: (planSettings: Settings) => void\r\n}\r\n\r\nexport const SettingsDialog: FunctionComponent<SettingsDialogProps> = (props) => {\r\n\r\n    const changeNrRecipes = (newNrRecipes: number) => {\r\n        let newSettings = props.settings.clone();\r\n        newSettings.nrRecipes = newNrRecipes;\r\n        props.onUpdate(newSettings);\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Tabs defaultActiveKey=\"general\">\r\n                    <Tab eventKey=\"general\" title=\"General\">\r\n                        <Container className=\"p-3\">\r\n                            <Form onSubmit={(e) => e.preventDefault()}>\r\n                                <Form.Group controlId=\"nrRecipes\">\r\n                                    <Form.Label>Number of recipes:</Form.Label>\r\n                                    <Form.Control as=\"select\" value={props.settings.nrRecipes}\r\n                                        onChange={(e) => changeNrRecipes(parseInt(e.target.value))}>\r\n                                        <option key=\"3\">3</option>\r\n                                        <option key=\"4\">4</option>\r\n                                        <option key=\"5\">5</option>\r\n                                        <option key=\"6\">6</option>\r\n                                        <option key=\"7\">7</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Container>\r\n                    </Tab>\r\n                    <Tab eventKey=\"scoring\" title=\"Scoring\">\r\n\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n","export interface IngredientJSON {\r\n  name: string;\r\n  amount: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface RecipeJSON {\r\n  id: string;\r\n  title: string;\r\n  source?: string;\r\n  comment?: string;\r\n  serving?: number;\r\n  ingredients: IngredientJSON[];\r\n  labels?: string[];\r\n}\r\n\r\ninterface RecipeFileJSON {\r\n  version: number;\r\n  recipes: RecipeJSON[];\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Ingredient {\r\n  private constructor(name: string, amount: number, unit: string) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n    this.unit = unit;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  public getUnit(): string {\r\n    return this.unit;\r\n  }\r\n\r\n  public static fromJSON(o: IngredientJSON): Ingredient {\r\n    if (!o.name) {\r\n      throw new Error(\"Missing ingredient name\");\r\n    }\r\n\r\n    if (!o.unit) {\r\n      throw new Error(\"Missing ingredient unit\");\r\n    }\r\n\r\n    if (o.amount === undefined) {\r\n      throw new Error(\"Missing ingredient amount\");\r\n    }\r\n\r\n    return new Ingredient(o.name, o.amount, o.unit);\r\n  }\r\n\r\n  public toJSON(): IngredientJSON {\r\n    return {\r\n      name: this.name,\r\n      amount: this.amount,\r\n      unit: this.unit,\r\n    };\r\n  }\r\n\r\n  private name: string;\r\n  private amount: number;\r\n  private unit: string;\r\n}\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Recipe {\r\n  private constructor(id: string, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.ingredients = [];\r\n    this.labels = [];\r\n    this.serving = 4;\r\n  }\r\n\r\n  public static error = new Recipe(\"error\", \"Recipe cannot be found\")\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public getTitle(): string {\r\n    return this.title;\r\n  }\r\n\r\n  public getComment(): string | undefined {\r\n    return this.comment;\r\n  }\r\n\r\n  public getSource(): string | undefined {\r\n    return this.source;\r\n  }\r\n\r\n  public getServing(): number {\r\n    return this.serving;\r\n  }\r\n\r\n  public getIngredients(): Ingredient[] {\r\n    return this.ingredients;\r\n  }\r\n\r\n  public getLabels(): string[] {\r\n    return this.labels;\r\n  }\r\n\r\n  public static fromJSON(o: RecipeJSON): Recipe {\r\n    if (!o.id) {\r\n      o.id = uuidv4();\r\n    }\r\n\r\n    if (!o.title) {\r\n      throw new Error(\"Missing recipe title\");\r\n    }\r\n\r\n    let r = new Recipe(o.id, o.title);\r\n\r\n    r.comment = o.comment;\r\n    r.source = o.source;\r\n    r.serving = o.serving ?? 4;\r\n    r.labels = o.labels ?? [];\r\n\r\n    if (Array.isArray(o.ingredients)) {\r\n      r.ingredients = o.ingredients.map((i) => Ingredient.fromJSON(i));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  public toJSON(): RecipeJSON {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      comment: this.comment,\r\n      source: this.source,\r\n      serving: this.serving,\r\n      ingredients: this.ingredients.map((i) => i.toJSON()),\r\n      labels: this.labels\r\n    };\r\n  }\r\n\r\n  private id: string;\r\n  private title: string;\r\n  private comment?: string;\r\n  private source?: string;\r\n  private serving: number;\r\n  private ingredients: Ingredient[];\r\n  private labels: string[];\r\n}\r\n","import { Index, createIndex, addDocumentToIndex, removeDocumentFromIndex } from \"ndx\";\r\nimport { query, QueryResult } from \"ndx-query\";\r\n\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nimport { words } from \"lodash\";\r\nimport { Map } from \"immutable\";\r\n\r\n// It is not quite immutable only looks like that. The underlying full text search index\r\n// is mutable, so be sure that old versions are not used. \r\nexport class RecipeStore {\r\n  private readonly recipesMap: Map<string, Recipe>;\r\n  private readonly index: Index<string>;\r\n\r\n  private readonly fieldAccessors = [\r\n    (r: Recipe) => r.getTitle(),\r\n    (r: Recipe) => r.getComment() ?? \"\",\r\n    (r: Recipe) => r.getSource() ?? \"\",\r\n    (r: Recipe) => r.getIngredients().map((i) => i.getName()).join(\" \"),\r\n    (r: Recipe) => r.getLabels().join(\" \")\r\n  ];\r\n\r\n  private readonly fieldBoostFactors = [2, 1, 1, 1, 2];\r\n\r\n  constructor(index?: Index<string>, recipesMap?: Map<string, Recipe>) {\r\n    this.index = index ? index : createIndex<string>(this.fieldAccessors.length);\r\n    this.recipesMap = recipesMap ? recipesMap : Map({});\r\n  }\r\n\r\n  private termFilter = (term: string) => {\r\n    return term\r\n      .normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .toLowerCase();\r\n  };\r\n\r\n  public static new = () => {\r\n    return new RecipeStore();\r\n  };\r\n\r\n  // `add()` function will add documents to the index.\r\n  public add = (r: Recipe) => {\r\n    let key = r.getId();\r\n\r\n    let toUpdate = true;\r\n\r\n    if (this.recipesMap.has(key)) {\r\n      if (JSON.stringify(this.recipesMap.get(key)) === JSON.stringify(r)) {\r\n        toUpdate = false;\r\n      }\r\n    }\r\n\r\n    if (toUpdate) {\r\n      // Don't add the same document twice, ndx becomes crazy...\r\n      this.delete(key);\r\n      let newMap = this.recipesMap.set(key, r);\r\n\r\n      addDocumentToIndex(\r\n        this.index,\r\n        this.fieldAccessors,\r\n        // Tokenizer is a function that breaks text into words, phrases, symbols, or other meaningful elements\r\n        // called tokens.\r\n        // Lodash function `words()` splits string into an array of its words, see https://lodash.com/docs/#words for\r\n        // details.\r\n        words,\r\n        // Filter is a function that processes tokens and returns terms, terms are used in Inverted Index to\r\n        // index documents.\r\n        this.termFilter,\r\n        // Document key, it can be a unique document id or a reference to a document if you want to store all documents\r\n        // in memory.\r\n        key,\r\n        // Document.\r\n        r\r\n      );\r\n\r\n      return new RecipeStore(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public addAll = (recipes: Recipe[]) => {\r\n    return recipes.reduce((idx: RecipeStore, recipe: Recipe) => {\r\n      return idx.add(recipe);\r\n    }, this);\r\n  };\r\n\r\n  // `search()` function will be used to perform queries.\r\n  public search = (q: string) =>\r\n    query<string>(\r\n      this.index,\r\n      this.fieldBoostFactors,\r\n      // BM25 ranking function constants:\r\n      1.2, // BM25 k1 constant, controls non-linear term frequency normalization (saturation).\r\n      0.75, // BM25 b constant, controls to what degree document length normalizes tf values.\r\n      words,\r\n      this.termFilter,\r\n      // Set of removed documents, in this example we don't want to support removing documents from the index,\r\n      // so we can ignore it by specifying this set as `undefined` value.\r\n      undefined,\r\n      q\r\n    ).reduce((acc: QueryResult<Recipe>[], res) => {\r\n      let r = this.recipesMap.get(res.key);\r\n      if (r) {\r\n        acc.push({ key: r, score: res.score });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n  public all = () => {\r\n    return Array.from(this.recipesMap.values());\r\n  };\r\n\r\n  public get = (key: string) => {\r\n    return this.recipesMap.get(key);\r\n  };\r\n\r\n  public delete = (key: string) => {\r\n    if (this.recipesMap.has(key)) {\r\n      let newMap = this.recipesMap.delete(key);\r\n      removeDocumentFromIndex(this.index, new Set(), key);\r\n      return new RecipeStore(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public getAll = (keys: string[]) => {\r\n    return keys.reduce((acc: Recipe[], key) => {\r\n      let r = this.recipesMap.get(key);\r\n      if (r) {\r\n        acc.push(r);\r\n      }\r\n      else {\r\n        acc.push(Recipe.error)\r\n      }\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  public count = () => {\r\n    return this.recipesMap.size;\r\n  };\r\n}\r\n","import { RecipeStore } from '../store/RecipeStore'\r\n\r\ndeclare module '../store/RecipeStore' {\r\n    interface RecipeStore {\r\n        getIngredients(): string[],\r\n        getUnits(): string[]\r\n    }\r\n}\r\n\r\nRecipeStore.prototype.getIngredients = function () {\r\n    let ingredients = new Set<string>();\r\n\r\n    this.all().forEach(r => {\r\n        r.getIngredients().forEach(i => {\r\n            ingredients.add(i.getName().toLowerCase());\r\n        })\r\n    });\r\n\r\n    const c = new Intl.Collator();\r\n    return Array.from(ingredients).sort(c.compare);\r\n};\r\n\r\nRecipeStore.prototype.getUnits = function () {\r\n\r\n    let units = new Set<string>();\r\n\r\n    this.all().forEach(r => {\r\n        r.getIngredients().forEach(i => {\r\n            units.add(i.getUnit().toLowerCase());\r\n        })\r\n    });\r\n\r\n    const c = new Intl.Collator();\r\n    return Array.from(units).sort(c.compare);\r\n}\r\n","import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\n\r\nimport { IngredientJSON } from '../model/Recipe';\r\n\r\nCodeMirror.defineMode(\"ingredients\", () => {\r\n  var Location = {\r\n    INGREDIENT: 0,\r\n    AMOUNT: 1,\r\n    UNIT: 2,\r\n    ERROR: 3,\r\n  };\r\n\r\n  return {\r\n    startState: function () {\r\n      return {\r\n        location: Location.INGREDIENT,\r\n      };\r\n    },\r\n    token: function (stream, state) {\r\n      if (stream.sol()) {\r\n        state.location = Location.INGREDIENT;\r\n      }\r\n\r\n      var ch = stream.next();\r\n\r\n      if (ch === \";\") {\r\n        if (state.location === Location.INGREDIENT)\r\n          state.location = Location.AMOUNT;\r\n        else if (state.location === Location.AMOUNT)\r\n          state.location = Location.UNIT;\r\n        else state.location = Location.ERROR;\r\n      }\r\n\r\n      if (state.location === Location.ERROR) {\r\n        return \"error\";\r\n      }\r\n\r\n      if (ch === \";\") {\r\n        return \"keyword\";\r\n      }\r\n\r\n      if (state.location === Location.INGREDIENT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      if (state.location === Location.AMOUNT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"number\";\r\n      }\r\n\r\n      if (state.location === Location.UNIT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      return \"error\";\r\n    },\r\n  };\r\n});\r\n\r\nexport function parseIngredients(text: string, errors: CodeMirror.Annotation[]) {\r\n\r\n  let ingredients: IngredientJSON[] = [];\r\n\r\n  let lines: string[] = text.split(/\\r?\\n/);\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let line = lines[i];\r\n\r\n    if (line.trim().length > 0) {\r\n      let parts = line.split(\";\");\r\n\r\n      if (parts.length < 3) {\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, 0),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Not enough parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      } else if (parts.length > 3) {\r\n        let startpos = parts[0].length + parts[1].length + parts[2].length + 2;\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, startpos),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Too many parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      }\r\n      else {\r\n        let startAmount = parts[0].length + 1;\r\n        let endAmount = startAmount + parts[1].length;\r\n\r\n        parts = parts.map(s => s.trim());\r\n\r\n        if (parts[0].length === 0 || parts[1].length === 0 || parts[2].length === 0) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, 0),\r\n            to: CodeMirror.Pos(i, line.length),\r\n            message: \"Empty part(s). Syntax: <name>;<amount>;<unit>\",\r\n          });\r\n        }\r\n        else if (\"\" + Number.parseFloat(parts[1]) !== parts[1]) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, startAmount),\r\n            to: CodeMirror.Pos(i, endAmount),\r\n            message: \"Amount should be a number.\",\r\n          });\r\n        }\r\n        else {\r\n          ingredients.push({ name: parts[0], amount: Number.parseFloat(parts[1]), unit: parts[2] })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ingredients;\r\n}\r\n\r\nCodeMirror.registerHelper(\"lint\", \"ingredients\", function (text: string) {\r\n  let errors: CodeMirror.Annotation[] = [];\r\n  parseIngredients(text, errors);\r\n  return errors;\r\n});\r\n\r\nexport function autocomplete(ingredients: string[], units: string[]) {\r\n  return function (\r\n    cm: CodeMirror.Editor,\r\n  ) {\r\n\r\n    var cursor = cm.getCursor(),\r\n      line = cm.getLine(cursor.line);\r\n    var start = cursor.ch,\r\n      end = cursor.ch;\r\n\r\n    let nrpart = (line.substring(0, end).match(/;/g) || []).length;\r\n\r\n    if (nrpart !== 0 && nrpart !== 2) {\r\n      return null;\r\n    }\r\n\r\n    while (start && line.charAt(start - 1) !== \";\") --start;\r\n    while (end < line.length && line.charAt(end) !== \";\") ++end;\r\n    var word = line.slice(start, end).trimLeft().toLowerCase();\r\n\r\n    let selection =\r\n      nrpart === 0\r\n        ? ingredients.filter((i) => i.indexOf(word) >= 0)\r\n        : units.filter((i) => i.startsWith(word));\r\n\r\n    if(selection.length === 1 && selection[0] === word) {\r\n        selection = []\r\n    }\r\n\r\n    return {\r\n      list: selection,\r\n      from: CodeMirror.Pos(cursor.line, start),\r\n      to: CodeMirror.Pos(cursor.line, end),\r\n    };\r\n  }\r\n};\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { RecipeJSON, Recipe, Ingredient } from '../model/Recipe';\r\nimport { RecipeStore } from '../store/RecipeStore';\r\nimport '../service/RecipeService';\r\n\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/addon/lint/lint.css';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/selection/active-line.js';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/lint/lint.js';\r\nimport 'codemirror/addon/display/placeholder.js';\r\n\r\nimport { autocomplete, parseIngredients } from './IngredientLang'\r\n\r\ntype RecipeEditorProps = {\r\n    recipe?: Recipe,\r\n    recipeStore: RecipeStore,\r\n    onClose: () => void,\r\n    onSave: (recipe: Recipe) => void,\r\n    onDelete: (recipe: Recipe) => void\r\n}\r\n\r\nexport const RecipeEditor: FunctionComponent<RecipeEditorProps> = (props) => {\r\n\r\n    const [recipeJSON, setRecipeJSON] = React.useState<RecipeJSON>(\r\n        props.recipe ? props.recipe.toJSON() : Object.create({}));\r\n    const [isTitleInvalid, setIsTitleInvalid] = React.useState(!props.recipe);\r\n    const [isIngredientsInvalid, setIsIngredientsInvalid] = React.useState(false);\r\n\r\n    const generateIngredientCSV = (ingredients: Ingredient[]) => {\r\n        return ingredients.map(i => i.getName() + \";\" + i.getAmount() + \";\" + i.getUnit()).join(\"\\n\")\r\n    }\r\n\r\n    const [ingredientCSV, setIngredientCSV] = React.useState(props.recipe ?\r\n        generateIngredientCSV(props.recipe.getIngredients()) : \"\");\r\n\r\n    const generateLabelCSV = (labels: string[]) => {\r\n        return labels.map(l => l.toUpperCase()).join(\", \")\r\n    }\r\n\r\n    const [labelCSV, setLabelCSV] = React.useState(props.recipe ?\r\n        generateLabelCSV(props.recipe.getLabels()) : \"\");\r\n\r\n    const setTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal = e.currentTarget.value;\r\n        setIsTitleInvalid(!newVal || newVal.length === 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ title: newVal } }))\r\n    }\r\n\r\n    const setComment = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ comment: newVal } }))\r\n    }\r\n\r\n    const setSource = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ source: newVal } }))\r\n    }\r\n\r\n    const setServing = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: number | undefined = Number.parseInt(e.currentTarget.value)\r\n        if (isNaN(newVal)) newVal = undefined\r\n        setRecipeJSON(r => ({ ...r, ...{ serving: newVal } }))\r\n    }\r\n\r\n    const updateLabels = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value.toUpperCase();\r\n        setLabelCSV(text)\r\n        let labels = text.split(\",\").map(l => l.trim()).filter(l => l.length > 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ labels: labels } }))\r\n    }\r\n\r\n    const updateIngredients = (text: string) => {\r\n\r\n        setIngredientCSV(text);\r\n\r\n        let errors: CodeMirror.Annotation[] = [];\r\n        let ingredients = parseIngredients(text, errors);\r\n        let invalid = errors.length > 0;\r\n\r\n        if (invalid) {\r\n            setIsIngredientsInvalid(true);\r\n        }\r\n        else {\r\n            setIsIngredientsInvalid(false);\r\n            setRecipeJSON(r => ({ ...r, ...{ ingredients: ingredients } }))\r\n        }\r\n    }\r\n\r\n    const saveRecipe = () => {\r\n        props.onSave(Recipe.fromJSON(recipeJSON))\r\n    }\r\n\r\n    const deleteRecipe = () => {\r\n        if (props.recipe) {\r\n            props.onDelete(props.recipe)\r\n        }\r\n    }\r\n\r\n    const focusElement = React.createRef<HTMLInputElement>();\r\n    const ingredientEditorElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose} onEntered={() => {\r\n            if (focusElement.current) focusElement.current.focus();\r\n            if (ingredientEditorElement.current) {\r\n                let cm = CodeMirror.fromTextArea(ingredientEditorElement.current,\r\n                    {\r\n                        lineNumbers: false,\r\n                        mode: \"ingredients\",\r\n                        gutters: [\"CodeMirror-lint-markers\"],\r\n                        lint: true,\r\n                        extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n                    });\r\n\r\n                cm.on(\"change\", (instance: CodeMirror.Editor) => {\r\n                    updateIngredients(instance.getValue());\r\n                });\r\n                cm.on(\"cursorActivity\", (instance: CodeMirror.Editor) => {\r\n                    instance.showHint({\r\n                        hint: autocomplete(props.recipeStore.getIngredients(), props.recipeStore.getUnits()),\r\n                        completeSingle: false,\r\n                        closeOnUnfocus: true\r\n                    });\r\n                });\r\n            }\r\n        }}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{props.recipe ? \"Edit\" : \"Add new \"} recipe</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formTitle\">\r\n                        <Form.Control type=\"title\" value={recipeJSON.title} placeholder=\"Title\"\r\n                            isInvalid={isTitleInvalid} onChange={setTitle}\r\n                            ref={focusElement}\r\n                            size=\"sm\" />\r\n                        <Form.Control.Feedback type=\"invalid\">Required field!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formComment\">\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            value={recipeJSON.comment}\r\n                            onChange={setComment}\r\n                            rows={2}\r\n                            placeholder=\"Comment\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formSource\">\r\n                        <Form.Control\r\n                            type=\"source\"\r\n                            value={recipeJSON.source}\r\n                            onChange={setSource}\r\n                            placeholder=\"Where to find the recipe\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formServing\">\r\n                        <Form.Control\r\n                            type=\"serving\"\r\n                            value={recipeJSON.serving}\r\n                            onChange={setServing}\r\n                            placeholder=\"Number of porties\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formLabels\">\r\n                        <Form.Control\r\n                            type=\"labels\"\r\n                            value={labelCSV}\r\n                            onChange={updateLabels}\r\n                            placeholder=\"Labels: LABEL1, LABEL2, ...\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formIngredients\">\r\n                        <Form.Control as=\"textarea\" value={ingredientCSV} ref={ingredientEditorElement}\r\n                            placeholder=\"Ingredients: <name>;<amount>;<unit>\" />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={saveRecipe} disabled={isTitleInvalid || isIngredientsInvalid}>Save recipe</Button>\r\n                {props.recipe &&\r\n                    <Button type=\"button\" variant=\"primary\" onClick={deleteRecipe}>Delete recipe</Button>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n","import { List, Map, Set } from \"immutable\";\r\n\r\nexport class PlannedRecipe {\r\n\r\n  constructor(recipeId: string, serving: number) {\r\n    this.recipeId = recipeId;\r\n    this.serving = serving;\r\n  }\r\n\r\n  public getRecipeId() {\r\n    return this.recipeId;\r\n  }\r\n\r\n  /* get actual serving */\r\n  public getServing() {\r\n    return this.serving;\r\n  }\r\n\r\n  private recipeId: string;\r\n  private serving: number;\r\n}\r\n\r\n/* IMMUTABLE */\r\nexport class Plan {\r\n\r\n  // Don't store Recipes, only ids. They are immutable, so if they change...\r\n  private buckets = List<Map<string, PlannedRecipe>>();\r\n\r\n  private constructor(buckets: List<Map<string, PlannedRecipe>>) {\r\n    this.buckets = buckets;\r\n  }\r\n\r\n  public static new = (nrBuckets: number) => {\r\n    return new Plan(List().setSize(nrBuckets));\r\n  };\r\n\r\n  public setNrBuckets(nrBuckets: number) {\r\n    return new Plan(this.buckets.setSize(nrBuckets));\r\n  }\r\n\r\n  public getNrBuckets() {\r\n    return this.buckets.size;\r\n  }\r\n\r\n  public getNrRecipes() {\r\n    let ret = 0;\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ret += bucket.size\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public setPlannedRecipe(bucketNr: number, plannedRecipe: PlannedRecipe) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.set(plannedRecipe.getRecipeId(), plannedRecipe)));\r\n  }\r\n\r\n  public deleteRecipeById(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.delete(recipeId)));\r\n  }\r\n\r\n  public getPlannedRecipes(bucketNr: number) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Map();\r\n    return Array.from(bucket.valueSeq());\r\n  }\r\n\r\n  public getAllPlannedRecipes() {\r\n    let ids = List<PlannedRecipe>();\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ids = ids.concat(bucket.values());\r\n      }\r\n    }\r\n    return Array.from(ids);\r\n  }\r\n\r\n  /* A unique list of recipe ids */\r\n  public getAllRecipeIds() {\r\n    let ids = Set<string>();\r\n    for (let bucket of this.buckets) {\r\n      if (bucket) {\r\n        ids = ids.concat(bucket.valueSeq().map(pr => pr.getRecipeId()));\r\n      }\r\n    }\r\n    return Array.from(ids);\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { LoadFileDialog } from \"./component/LoadFileDialog\";\r\nimport { SaveFileDialog } from \"./component/SaveFileDialog\";\r\nimport { SettingsDialog } from \"./component/Settings\";\r\nimport { RecipeEditor } from \"./component/RecipeEditor\";\r\n\r\nimport \"./service/PlanExporterService\";\r\n\r\nimport App from \"./App\";\r\n\r\nexport enum Dialog {\r\n    LoadFile,\r\n    SaveFile,\r\n    RecipeEditor,\r\n    SavePlanXLS,\r\n    ShoppingList,\r\n    PlanSettings\r\n}\r\n\r\nexport function renderDialog(this: App) {\r\n    switch (this.state.showDialog) {\r\n        case Dialog.LoadFile: {\r\n            return (\r\n                <LoadFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Load recipes file\"\r\n                    loadButtonTitle=\"Load recipes\"\r\n                    onLoad={this.loadFile}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SaveFile: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save recipes file\"\r\n                    saveButtonTitle=\"Save recipes\"\r\n                    data={this.genRecipeFileContent()}\r\n                    type=\"application/json\"\r\n                    initialFileName=\"recipes\"\r\n                    extension=\"json\"\r\n                    onSave={this.fileSaved}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.RecipeEditor: {\r\n            return (\r\n                <RecipeEditor\r\n                    onClose={this.closeRecipeEditor}\r\n                    onSave={this.saveRecipe}\r\n                    onDelete={this.deleteRecipe}\r\n                    recipe={this.state.recipeToEdit}\r\n                    recipeStore={this.state.recipeStore}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SavePlanXLS: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save plan\"\r\n                    saveButtonTitle=\"Save plan\"\r\n                    data={this.state.plan.export(this.state.recipeStore)}\r\n                    type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                    initialFileName=\"plan\"\r\n                    extension=\"xlsx\"\r\n                    onSave={this.closeDialog}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.ShoppingList: {\r\n            return (\r\n                <Modal show={true} onHide={this.closeDialog}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Shopping list</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={20}\r\n                                cols={80}\r\n                                value={this.state.plan.exportShoppingList(this.state.recipeStore)}\r\n                                readOnly />\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.closeDialog}>\r\n                            Close\r\n              </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            );\r\n        }\r\n\r\n        case Dialog.PlanSettings: {\r\n            return (\r\n                <SettingsDialog\r\n                    onClose={this.closeDialog}\r\n                    settings={this.state.settings}\r\n                    onUpdate={this.updateSettings} />\r\n            );\r\n        }\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n};\r\n","import { RecipeStore } from '../store/RecipeStore';\r\n\r\nimport { Plan, PlannedRecipe } from '../model/Plan';\r\nimport { Recipe } from '../model/Recipe';\r\n\r\nimport XLSX from 'xlsx';\r\nimport _ from 'lodash';\r\n\r\ndeclare module '../model/Plan' {\r\n    interface Plan {\r\n        exportShoppingList(recipeStore: RecipeStore): string\r\n        export(recipeStore: RecipeStore): Blob\r\n    }\r\n}\r\n\r\n// Returns: Ingredient -> (recipe id -> [amount, unit, scale][])\r\nfunction calculateIngredientMap(recipes: [Recipe, PlannedRecipe][]) {\r\n    let ingredientMap = new Map<string, Map<PlannedRecipe, [number, string, number][]>>();\r\n\r\n    recipes.forEach(t => {\r\n\r\n        let r = t[0];\r\n        let pr = t[1];\r\n\r\n        r.getIngredients().forEach(i => {\r\n            let ingredientName = i.getName().toLowerCase();\r\n            let oneIngredientRecord = ingredientMap.get(ingredientName);\r\n            if (!oneIngredientRecord) {\r\n                oneIngredientRecord = new Map()\r\n                ingredientMap.set(ingredientName, oneIngredientRecord);\r\n            }\r\n\r\n            let oneRecipeRecord = oneIngredientRecord.get(pr) ?? [];\r\n            oneRecipeRecord.push([i.getAmount(), i.getUnit().toLowerCase(), pr.getServing() / r.getServing()]);\r\n            oneIngredientRecord.set(pr, oneRecipeRecord);\r\n        });\r\n    });\r\n\r\n    return ingredientMap;\r\n}\r\n\r\nfunction calculateShoppingList(\r\n    ingredientMap: Map<string, Map<PlannedRecipe, [number, string, number][]>>,\r\n    ingredients: string[]) {\r\n    let ingredientList = ingredients.map(name => {\r\n\r\n        let oneIngredientRecord = new Map<string, number>()\r\n        let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string, number][]>()\r\n\r\n        // Group ingredient usages by unit\r\n        for (let oneUsage of ingredient.values()) {\r\n            for (let [amount, unit, scale] of oneUsage) {\r\n                oneIngredientRecord.set(unit,\r\n                    (oneIngredientRecord.get(unit) ?? 0) + amount * scale)\r\n            }\r\n        }\r\n\r\n        return { \"name\": name, \"amounts\": oneIngredientRecord }\r\n    });\r\n\r\n    let ingredientsRows = []\r\n\r\n    for (let { name, amounts } of ingredientList) {\r\n        let line: [string] = [name]\r\n        for (let [unit, amount] of amounts) {\r\n            line.push(\"\" + amount + \" \" + unit)\r\n        }\r\n        ingredientsRows.push(line)\r\n    }\r\n\r\n    return ingredientsRows;\r\n}\r\n\r\n// Exports ShoppingList as list of MD lines\r\nPlan.prototype.exportShoppingList = function (recipeStore: RecipeStore) {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let plannedRecipes = this.getAllPlannedRecipes();\r\n    let recipes = recipeStore.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n    let ingredientMap = calculateIngredientMap(_.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]);\r\n\r\n    let c = new Intl.Collator();\r\n    let ingredients = Array.from(ingredientMap.keys()).sort(c.compare);\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n\r\n    let res = \"\";\r\n\r\n    for (let row of ingredientsRows) {\r\n        res += \"**\" + row.shift() + \"**\";\r\n        res += \" - \";\r\n        res += row.join(\" + \");\r\n        res += \"\\n\";\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// Exports Plan as XLSX\r\nPlan.prototype.export = function (recipeStore: RecipeStore): Blob {\r\n    // Want here the recipes as many times as they appear in the plan\r\n    let plannedRecipes = this.getAllPlannedRecipes();\r\n    let recipes = recipeStore.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n    let zippedPlannedRecipes = _.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]\r\n\r\n    let uniqueRecipes = new Set(recipes);\r\n    let ingredientMap = calculateIngredientMap(zippedPlannedRecipes);\r\n    let ingredients = Array.from(ingredientMap.keys()).sort();\r\n\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate map\r\n\r\n    let planRows: string[][] = _.range(0, this.getNrBuckets()).map(bid => {\r\n        let plannedRecipes = this.getPlannedRecipes(bid);\r\n        let recipes = recipeStore.getAll(plannedRecipes.map(pr => pr.getRecipeId()));\r\n        let zippedPlannedRecipes = _.zip(recipes, plannedRecipes) as [Recipe, PlannedRecipe][]\r\n        return [\"Day #\" + (bid + 1)].concat(\r\n            zippedPlannedRecipes.map(t => t[0].getTitle() + \" (\" + t[1].getServing() + \" people)\"))\r\n    })\r\n    let planWS = XLSX.utils.aoa_to_sheet(planRows);\r\n    XLSX.utils.book_append_sheet(wb, planWS, \"Plan\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Calculate shopping list\r\n\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n    let ingredientsWS = XLSX.utils.aoa_to_sheet(ingredientsRows);\r\n    XLSX.utils.book_append_sheet(wb, ingredientsWS, \"Shopping list\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate ingredient map\r\n\r\n    const mapHeaderRow = zippedPlannedRecipes.map(t => t[0].getTitle() + \" (\" + t[1].getServing() + \" people)\")\r\n    mapHeaderRow.unshift(\"\")\r\n\r\n    const mapDataRows = ingredients.map(name => {\r\n\r\n        let line = [name]\r\n\r\n        for (let pr of plannedRecipes) {\r\n            let ingredient = ingredientMap.get(name) ?? new Map<PlannedRecipe, [number, string, number][]>();\r\n            let recipeIngredient = ingredient.get(pr);\r\n            if (recipeIngredient) {\r\n                line.push(recipeIngredient.map(au => \"\" + (au[0] * au[2]) + \" \" + au[1]).join(\", \"));\r\n            }\r\n            else {\r\n                line.push(\"\");\r\n            }\r\n\r\n        }\r\n\r\n        return line;\r\n    });\r\n\r\n    let mapRows = [mapHeaderRow].concat(mapDataRows);\r\n    let mapWS = XLSX.utils.aoa_to_sheet(mapRows);\r\n    XLSX.utils.book_append_sheet(wb, mapWS, \"Ingredient map\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate recipes\r\n\r\n    // Recipes must be converted to a set to eliminate duplications\r\n    for (let r of uniqueRecipes) {\r\n        let recipeRows = [\r\n            [\"Title\", r.getTitle()],\r\n            [\"Comment\", r.getComment() ?? \"-\"],\r\n            [\"Serves\", r.getServing()],\r\n            [\"Source\", r.getSource() ?? \"-\"],\r\n            [\"Ingredients:\"]\r\n        ];\r\n\r\n        for (let i of r.getIngredients()) {\r\n            recipeRows.push([i.getName().toLowerCase(), i.getAmount(), i.getUnit().toLowerCase()])\r\n        }\r\n\r\n        let recipeWS = XLSX.utils.aoa_to_sheet(recipeRows);\r\n        XLSX.utils.book_append_sheet(wb, recipeWS, r.getTitle().substr(0, 31));\r\n    }\r\n\r\n    let bytes = XLSX.write(wb, { bookType: 'xlsx', bookSST: false, type: 'array' });\r\n    return new Blob([bytes], {\r\n        type: 'application/octet-stream'\r\n    });\r\n}\r\n","/* IMMUTABLE */\r\nexport class ScoringFun {\r\n\r\n    private name: string;\r\n    private script: string;\r\n\r\n    constructor(name: string, script: string)\r\n    {\r\n        this.name = name;\r\n        this.script = script;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n\r\n    public getScript() {\r\n        return this.script;\r\n    }\r\n}\r\n","import { ScoringFun } from './ScoringFun';\r\n\r\n/* These classes are not immutable, but it is fine as these are \r\n   not used in any state */ \r\n\r\nexport class RecipeScoring {\r\n    private scorings: Map<ScoringFun, number>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scorings = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    addScoring = (scoringFun: ScoringFun, score: number) => {\r\n        this.scorings.set(scoringFun, score)\r\n        this.sum += score\r\n    }\r\n\r\n    getSum = () => {\r\n        return this.sum;\r\n    }\r\n\r\n    getScorings = () => {\r\n        return Array.from(this.scorings);\r\n    }\r\n}\r\n\r\nexport class Scoring {\r\n    private scoring: Map<string, RecipeScoring>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scoring = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    public addScoring = (recipeId: string, sf: ScoringFun, score: number) => {\r\n        if (!this.scoring.has(recipeId)) {\r\n            this.scoring.set(recipeId, new RecipeScoring())\r\n        }\r\n\r\n        this.scoring.get(recipeId)?.addScoring(sf, score);\r\n    }\r\n\r\n    public getSum = (recipeId: string) => {\r\n        let rs = this.scoring.get(recipeId);\r\n        if (rs) {\r\n            return rs.getSum();\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getScoring = (recipeId: string) => {\r\n        return this.scoring.get(recipeId);\r\n    }\r\n}\r\n","import { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { ScoringFun } from '../model/ScoringFun';\r\nimport { Scoring } from '../model/Scoring';\r\n\r\nimport { RecipeStore } from '../store/RecipeStore';\r\n\r\nimport { Parser, Expression } from 'expr-eval';\r\n\r\nimport _ from 'lodash';\r\n\r\ndeclare module '../store/RecipeStore' {\r\n    interface RecipeStore {\r\n        scoreBy(plan: Plan): Scoring\r\n    }\r\n}\r\n\r\nconst scoringFuns = [\r\n    new ScoringFun(\"random\", \"random(1)\"),\r\n    new ScoringFun(\"SLOW\", \"planHasLabel(\\\"SLOW\\\") > 0 and hasLabel(this, \\\"SLOW\\\") ? -1 : 0\"),\r\n    new ScoringFun(\"+1\", \"hasLabel(this, \\\"+1\\\") ? 0.15 : 0\"),\r\n    new ScoringFun(\"-1\", \"hasLabel(this, \\\"-1\\\") ? -0.15 : 0\"),\r\n    new ScoringFun(\"EASY\", \"hasLabel(this, \\\"EASY\\\") ? 0.15/(1+planHasLabel(\\\"EASY\\\")) : 0\"),\r\n    new ScoringFun(\"Side dish\", \"hasLabel(this, \\\"SD\\\") ? (planHasLabel(\\\"SD\\\") < planHasLabel(\\\"NSD\\\") ? 5 : -5) : 0\"),\r\n    new ScoringFun(\"Few ingredients\", \"(1-normalize(length(ingredients(this))))/6\"),\r\n    new ScoringFun(\"Repetition\", \"planHasRecipe(this) > 0 and (not hasLabel(this, \\\"SD\\\")) ? -2 : 0\")\r\n]\r\n\r\nfunction labelDict(r: Recipe) {\r\n    return _.countBy(r.getLabels().map(l => l.toUpperCase()));\r\n}\r\n\r\nfunction _scoreRecipes(e: Expression, recipes: Recipe[], fun: ScoringFun) {\r\n    return new Map(recipes.map(r => {\r\n        // Dirty trick to be able to pass Recipe type\r\n        let s = e.evaluate({ \"this\": r as unknown as string });\r\n        return [r, s]\r\n    }));\r\n}\r\n\r\nRecipeStore.prototype.scoreBy = function(plan: Plan) {\r\n    let p = new Parser();\r\n\r\n    let recipes = this.all();\r\n    let rlabels = new Map(recipes.map(r => [r, labelDict(r)]))\r\n    let precipeids = plan.getAllPlannedRecipes().map(r => r.getRecipeId())\r\n    let precipes = _.countBy(precipeids)\r\n    let plabels = _.countBy(_.flatMap(this.getAll(precipeids), r => r.getLabels()).map(l => l.toUpperCase()))\r\n\r\n    p.functions.intersection = (as: any[], bs: any[]) => {\r\n        return _.intersection(as, bs);\r\n    }\r\n\r\n    p.functions.sum = (as: number[]) => {\r\n        return _.sum(as);\r\n    }\r\n\r\n    p.functions.ingredients = (r: Recipe) => {\r\n        return r.getIngredients();\r\n    }\r\n\r\n    p.functions.hasLabel = (r: Recipe, label: string) => {\r\n        let ld = rlabels.get(r);\r\n        if (ld) {\r\n            return ld[label] > 0;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    p.functions.planHasLabel = (label: string) => {\r\n        return plabels[label] ?? 0;\r\n    }\r\n\r\n    p.functions.planHasRecipe = (r: Recipe) => {\r\n        return precipes[r.getId()] ?? 0;\r\n    }\r\n\r\n    let scoring = new Scoring()\r\n\r\n    for (let sf of scoringFuns) {\r\n        let e = p.parse(sf.getScript())\r\n\r\n        let max = -1;\r\n\r\n        p.functions.normalize = (curr: number) => {\r\n            if (curr > max) {\r\n                max = curr;\r\n            }\r\n\r\n            return curr;\r\n        }\r\n\r\n        let scores = _scoreRecipes(e, recipes, sf);\r\n\r\n        // If `normalize` was used, we need to run it again\r\n        if (max > 0) {\r\n            p.functions.normalize = (curr: number) => {\r\n                return curr / max;\r\n            }\r\n\r\n            scores = _scoreRecipes(e, recipes, sf);\r\n        }\r\n\r\n        for (let [r, s] of scores) {\r\n            scoring.addScoring(r.getId(), sf, s);\r\n        }\r\n    }\r\n\r\n    return scoring;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Binoculars, People, Cart2, ExclamationCircle, ChatRightText, SortNumericUpAlt } from 'react-bootstrap-icons';\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { RecipeScoring } from '../model/Scoring';\r\n\r\ntype RecipePopoverProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring\r\n}\r\n\r\nexport const RecipeQuickView: FunctionComponent<RecipePopoverProps> = ({ recipe, scoring }) => {\r\n\r\n    const c = new Intl.Collator();\r\n    const ingredients = recipe.getIngredients().map(r => r.getName())\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const scoringLines = scoring &&\r\n        scoring.getScorings().map(oneScore =>\r\n            <Row>\r\n                <Col xs=\"2\">\r\n                    {oneScore[1].toFixed(2)}\r\n                </Col>\r\n                <Col xs=\"1\">\r\n                    ←\r\n                </Col>\r\n                <Col>\r\n                    {oneScore[0].getName()}\r\n                </Col>\r\n            </Row>);\r\n\r\n    return (\r\n        <Container className=\"pl-0 pr-2\">\r\n            {recipe.getComment() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><ChatRightText height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getComment()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getServing() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><People height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getServing()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getSource() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><Binoculars height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getSource()}</Col>\r\n                </Row>\r\n            }\r\n            <Row className=\"pb-2\">\r\n                <Col xs={1}>\r\n                    <Cart2 height=\"18\" />\r\n                </Col>\r\n                <Col>\r\n                    <Container fluid className=\"pl-0\">\r\n                        <Row>\r\n                            {ingredients}\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n            {recipe.getLabels().length > 0 &&\r\n                <Row className=\"pb-2\">\r\n                    <Col xs={1}>\r\n                        <ExclamationCircle height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container fluid className=\"pl-0\">\r\n                            <Row>\r\n                                {labels}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {scoring &&\r\n                <Row>\r\n                    <Col xs={1}>\r\n                        <SortNumericUpAlt height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container className=\"ml-0 pl-0\">\r\n                            {scoringLines}\r\n                            <Row>\r\n                                <Col xs=\"2\" className=\"border\">\r\n                                    {scoring.getSum().toFixed(2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { Gear, Eye, Search } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { Scoring, RecipeScoring } from '../model/Scoring';\r\nimport { RecipeStore } from '../store/RecipeStore';\r\n\r\nimport { useDrag } from 'react-dnd'\r\n\r\nimport _ from 'lodash';\r\n\r\ntype RecipeSelectorProps = {\r\n    recipeStore: RecipeStore,\r\n    scoring: Scoring,\r\n    plan: Plan,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\ntype RecipeListItemProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring,\r\n    selected: boolean,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\nconst RecipeListItem: FunctionComponent<RecipeListItemProps> = ({ recipe, selected, scoring, onEdit }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId() },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-recipe-selector-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#FFFFFF'\r\n            }}>\r\n\r\n            <Card\r\n                className=\"mealee-recipe-selector-item\"\r\n                key={recipe.getId()}\r\n                ref={drag}\r\n                style={{\r\n                    opacity: isDragging || selected ? 0.5 : 1,\r\n                    cursor: 'move',\r\n                }}>\r\n                <Card.Body className=\"p-0\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    right: 10,\r\n                    height: 20,\r\n                    width: 40,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Gear height=\"18\" onClick={() => onEdit(recipe)} style={{ cursor: 'pointer' }} />\r\n                &nbsp;\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} scoring={scoring} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const RecipeSelector: FunctionComponent<RecipeSelectorProps> = ({ recipeStore, scoring, plan, onEdit }) => {\r\n\r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n    const debouncedSetFilter = React.useCallback(\r\n        _.debounce(setFilter, 150),\r\n        [], // will be created only once initially\r\n    );\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        debouncedSetFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeStore.all() : recipeStore.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = _.sortBy(filteredRecipes, r => scoring.getSum(r.getId()) * -1)\r\n        .map((recipe) =>\r\n            <ListGroup.Item className=\"p-0\" key={recipe.getId()}>\r\n                <RecipeListItem\r\n                    key={recipe.getId()}\r\n                    recipe={recipe}\r\n                    scoring={scoring.getScoring(recipe.getId())}\r\n                    onEdit={onEdit}\r\n                    selected={selectedRecipeSet.has(recipe.getId())} />\r\n            </ListGroup.Item>\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2 h-100 d-flex flex-column\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search /></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <Form.Group controlId=\"recipeGroup\" className=\"flex-grow-1 overflow-auto mealee-recipe-selector-list\">\r\n                <ListGroup>{listItems}</ListGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { Trash, Eye, People } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { RecipeStore } from \"../store/RecipeStore\";\r\nimport { Recipe } from \"../model/Recipe\";\r\nimport { Plan, PlannedRecipe } from \"../model/Plan\";\r\n\r\nimport { useDrop, useDrag } from 'react-dnd'\r\nimport _ from 'lodash';\r\n\r\ntype RecipeBoxProps = {\r\n    bucketId: number,\r\n    recipeStore: RecipeStore,\r\n    plannedRecipe: PlannedRecipe,\r\n    onDelete: (recipeId: string) => void\r\n    onUpdate: (plannedRecipe: PlannedRecipe) => void\r\n}\r\n\r\nconst RecipeBox: FunctionComponent<RecipeBoxProps> = ({\r\n    bucketId,\r\n    recipeStore,\r\n    plannedRecipe,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    let recipe = recipeStore.get(plannedRecipe.getRecipeId()) ?? Recipe.error\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", plannedRecipe: plannedRecipe, from: bucketId },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const updateServing = (e: React.WheelEvent<HTMLDivElement>) => {\r\n        var newServing = e.deltaY > 0\r\n            ? Math.max(1, plannedRecipe.getServing() - 1)\r\n            : Math.min(9, plannedRecipe.getServing() + 1);\r\n\r\n        onUpdate(new PlannedRecipe(plannedRecipe.getRecipeId(), newServing))\r\n    }\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-bucker-recipe-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'move',\r\n            }}>\r\n\r\n            <Card className=\"mealee-bucket-recipe\">\r\n                <Card.Body className=\"mealee-bucket-recipe-body\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    height: 40,\r\n                    width: 20,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Trash height=\"18\" onClick={() => onDelete(recipe.getId())} style={{ cursor: 'pointer' }} />\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 3,\r\n                    height: 20,\r\n                    width: 25,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <OverlayTrigger\r\n                    key=\"new\"\r\n                    placement=\"right\"\r\n                    overlay={\r\n                        <Tooltip id=\"tooltip-new\">\r\n                            Scroll up/down to change\r\n                        </Tooltip>\r\n                    }>\r\n                    <div onWheel={updateServing}>\r\n                        <span style={{ fontSize: 12, paddingTop: 2, paddingRight: 0 }}>{plannedRecipe.getServing()}</span>\r\n                        <People height=\"12\" />\r\n                    </div>\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype BucketProps = {\r\n    bucketId: number,\r\n    recipeStore: RecipeStore,\r\n    plannedRecipes: PlannedRecipe[],\r\n    onDelete: (bucketid: number, recipeStore: string) => void,\r\n    onUpdate: (bucketid: number, plannedRecipe: PlannedRecipe) => void,\r\n}\r\n\r\nconst Bucket: FunctionComponent<BucketProps> = ({\r\n    bucketId,\r\n    recipeStore,\r\n    plannedRecipes,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    return (\r\n        <Card className=\"mealee-bucket\">\r\n            <Card.Header className=\"mealee-bucket-header\">{\"Day \" + (bucketId + 1)}</Card.Header>\r\n            <Card.Body className=\"mealee-bucket-body\">\r\n                {plannedRecipes.map(r =>\r\n                    <RecipeBox key={r.getRecipeId()}\r\n                        bucketId={bucketId}\r\n                        recipeStore={recipeStore}\r\n                        plannedRecipe={r}\r\n                        onDelete={(recipeId) => onDelete(bucketId, recipeId)}\r\n                        onUpdate={(plannedRecipe) => onUpdate(bucketId, plannedRecipe)} />)}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\ntype DroppableBucketProps = BucketProps & {\r\n    onDrop: (buckedId: number, plannedRecipe: PlannedRecipe) => void,\r\n    onMove: (from: number, to: number, plannedRecipe: PlannedRecipe) => void\r\n}\r\n\r\nconst DroppableBucket: FunctionComponent<DroppableBucketProps> = ({\r\n    bucketId,\r\n    recipeStore,\r\n    plannedRecipes,\r\n    onDrop,\r\n    onMove,\r\n    onDelete,\r\n    onUpdate }) => {\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: \"recipe\",\r\n        drop: (dragr) => {\r\n            let r = dragr as unknown as { id: string, from?: number, plannedRecipe?: PlannedRecipe };\r\n            if (r.from !== undefined && r.plannedRecipe !== undefined) {\r\n                onMove(r.from, bucketId, r.plannedRecipe)\r\n            }\r\n            else {\r\n                let recipe = recipeStore.get(r.id)\r\n                onDrop(bucketId, new PlannedRecipe(r.id, recipe ? recipe.getServing() : 0))\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}>\r\n\r\n            <Bucket\r\n                bucketId={bucketId}\r\n                recipeStore={recipeStore}\r\n                plannedRecipes={plannedRecipes}\r\n                onDelete={onDelete}\r\n                onUpdate={onUpdate} />\r\n\r\n            {isOver && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                        opacity: 0.5,\r\n                        backgroundColor: 'yellow',\r\n                    }} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PlannerProps = {\r\n    recipeStore: RecipeStore,\r\n    plan: Plan,\r\n    updatePlan: (plan: Plan) => void\r\n}\r\n\r\nexport const Planner: FunctionComponent<PlannerProps> = ({ recipeStore, plan, updatePlan }) => {\r\n\r\n    const addRecipe = (bucketIdx: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.setPlannedRecipe(bucketIdx, plannedRecipe))\r\n    }\r\n\r\n    const deleteRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeById(bucketIdx, recipeId))\r\n    }\r\n\r\n    const updatePlannedRecipe = (bucketIdx: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.setPlannedRecipe(bucketIdx, plannedRecipe))\r\n    }\r\n\r\n    const movePlannedRecipe = (from: number, to: number, plannedRecipe: PlannedRecipe) => {\r\n        updatePlan(plan.deleteRecipeById(from, plannedRecipe.getRecipeId()).setPlannedRecipe(to, plannedRecipe))\r\n    }\r\n\r\n    let cols = _.range(plan.getNrBuckets()).map(i => {\r\n        return (\r\n            <Col key={i} xs=\"auto\" className=\"pr-2 pl-0\">\r\n                <DroppableBucket\r\n                    bucketId={i}\r\n                    recipeStore={recipeStore}\r\n                    plannedRecipes={plan.getPlannedRecipes(i)}\r\n                    onDrop={addRecipe}\r\n                    onDelete={deleteRecipe}\r\n                    onUpdate={updatePlannedRecipe}\r\n                    onMove={movePlannedRecipe} />\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container className=\"pt-0 pb-2 pl-0 pr-0\">\r\n            <Row>\r\n                {cols}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nimport { Container, Col, Row, Image } from \"react-bootstrap\";\r\n\r\nimport './service/ScoringService';\r\n\r\nimport { RecipeSelector } from \"./component/RecipeSelector\";\r\nimport { Planner } from \"./component/Planner\";\r\n\r\nimport Tour from 'reactour';\r\n\r\nimport App from \"./App\";\r\nimport { Dialog } from \"./AppDialogs\";\r\n\r\nexport function renderInitialBody(this: App) {\r\n    return (\r\n        <Col xs=\"auto\" className=\"pt-3\">\r\n            <Tour\r\n                isOpen={this.state.isInitialTour}\r\n                onRequestClose={() => this.setIsInitialTour(false)}\r\n                steps={[\r\n                    {\r\n                        selector: '.my-first-step-a',\r\n                        content: <Container className=\"pt-4\">Load some recipes from a file or ...</Container>,\r\n                    },\r\n                    {\r\n                        selector: '.my-first-step-b',\r\n                        content: <Container className=\"pt-4\">... or add a new recipe manually!</Container>,\r\n                    }\r\n                ]} />\r\n            <Alert key=\"recipe\" variant=\"warning\">\r\n                I do not see any recipes. <Button variant=\"link\" className=\"pt-1\" onClick={() => this.setIsInitialTour(true)}>Are you new to Mealee?</Button>\r\n            </Alert>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport function renderDesktopBody(this: App) {\r\n\r\n    return (\r\n        <>\r\n            <Col xs=\"8\" sm=\"5\" md=\"4\" lg=\"3\" xl=\"3\" className=\"h-100\" style={{ minHeight: 0 }}>\r\n                <RecipeSelector\r\n                    plan={this.state.plan}\r\n                    scoring={this.state.recipeStore.scoreBy(this.state.plan)}\r\n                    recipeStore={this.state.recipeStore}\r\n                    onEdit={this.editRecipe} />\r\n\r\n            </Col>\r\n            <Col>\r\n                <Container className=\"pt-2 pl-0 pr-0\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Planner\r\n                                recipeStore={this.state.recipeStore}\r\n                                plan={this.state.plan}\r\n                                updatePlan={this.updatePlan} />\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.plan.getNrRecipes() > 0 &&\r\n                        <Row>\r\n                            <Col className=\"pl-0\">\r\n                                <Button\r\n                                    variant=\"mealee\"\r\n                                    onClick={this.showDialog(Dialog.SavePlanXLS)}>\r\n                                    Export plan &nbsp;\r\n                                <Image src=\"xlsx_logo.svg\" height=\"18\" />\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"ml-2\"\r\n                                    variant=\"mealee\"\r\n                                    onClick={this.showDialog(Dialog.ShoppingList)}>\r\n                                    Show shopping list &nbsp;\r\n                                <Image src=\"todoist_logo.svg\" height=\"18\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Container>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n","/* Should be IMMUTABLE */\r\nexport class Settings {\r\n  constructor() {\r\n    this.nrRecipes = 5;\r\n  }\r\n\r\n  public clone(): Settings {\r\n    return Object.create(this);\r\n  }\r\n\r\n  public nrRecipes: number;\r\n}\r\n","\r\nimport {Recipe, RecipeJSON} from './Recipe'\r\nimport {Settings} from './Settings'\r\n\r\nexport interface WorkspaceFileJSON {\r\n    fileVersion: number;\r\n    recipes: RecipeJSON[];\r\n    settings: Settings;\r\n}\r\n\r\nexport class Workspace {\r\n    \r\n    constructor(recipes: Recipe[], settings: Settings)\r\n    {\r\n        this.recipes = recipes;\r\n        this.settings = settings;\r\n    }\r\n\r\n    public getRecipes() {\r\n        return this.recipes;\r\n    }\r\n\r\n    public getSettings() {\r\n        return this.settings;\r\n    }\r\n\r\n    private recipes: Recipe[];\r\n    private settings: Settings;\r\n}","import { Recipe } from '../model/Recipe'\r\nimport { Workspace, WorkspaceFileJSON } from '../model/Workspace'\r\nimport {Settings} from '../model/Settings'\r\n\r\ndeclare module '../model/Workspace' {\r\n    interface Workspace {\r\n        serialize(): Blob,\r\n    }\r\n}\r\n\r\nWorkspace.prototype.serialize = function() {\r\n    let str = JSON.stringify({ fileVersion: 1, recipes: this.getRecipes(), settings: this.getSettings() });\r\n    let bytes = new TextEncoder().encode(str);\r\n    let blob = new Blob([bytes], {\r\n      type: \"application/json;charset=utf-8\",\r\n    }); \r\n    return blob;\r\n}\r\n\r\nexport function deserializeWokspaceFile(data: string) {\r\n    let json = JSON.parse(data);\r\n    \r\n    if (typeof json === \"object\") {\r\n        let r: WorkspaceFileJSON = json;\r\n        if(!r.fileVersion) r.fileVersion = 1;\r\n\r\n        if (typeof r.fileVersion !== \"undefined\") {\r\n            if (r.fileVersion !== 1) {\r\n                throw new Error(\"Invalid recipe file version\");\r\n            }\r\n\r\n            if (Array.isArray(r.recipes)) {\r\n                return new Workspace(r.recipes.map(Recipe.fromJSON), r.settings ?? new Settings());\r\n            }\r\n        }\r\n    }\r\n\r\n    throw new Error(\"Invalid mealee file\");\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Upload, Download, PlusCircle, Gear } from 'react-bootstrap-icons';\r\n\r\ntype IconBarProps = {\r\n    onLoadFile: () => void;\r\n    onNewRecipe: () => void;\r\n    onSaveFile: () => void;\r\n    onEditSettings: () => void;\r\n    unsavedChanges: boolean;\r\n};\r\n\r\nexport const IconBar: FunctionComponent<IconBarProps> = ({\r\n    onLoadFile,\r\n    onNewRecipe,\r\n    onSaveFile,\r\n    onEditSettings,\r\n    unsavedChanges\r\n}) => {\r\n    return (\r\n        <Container className=\"pl-0 ml-2 mr-2 p-0\">\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"upload\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-upload\">\r\n                                Load recipes and settings\r\n                            </Tooltip>\r\n                        }>\r\n                        <Upload\r\n                            className=\"my-first-step-a\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onLoadFile} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"download\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-download\">\r\n                                Save recipes and settings\r\n                            </Tooltip>\r\n                        }>\r\n                        {unsavedChanges\r\n                            ? <Download\r\n                                className=\"text-warning\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onSaveFile} />\r\n                            : <Download\r\n                                style={{ color: \"#ffffff40\" }} />\r\n                        }\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Add new recipe\r\n                            </Tooltip>\r\n                        }>\r\n                        <PlusCircle\r\n                            className=\"my-first-step-b\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onNewRecipe} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Settings\r\n                            </Tooltip>\r\n                        }>\r\n\r\n                        <Gear style={{\r\n                            color: \"#ffffff\",\r\n                            cursor: \"pointer\"\r\n                        }} onClick={onEditSettings} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\r\n\r\nfunction getVersionNumber() {\r\n    return `${process.env.REACT_APP_VERSION}`;\r\n}\r\n\r\nexport const MenuBar: FunctionComponent = () => {\r\n    return (\r\n        <Navbar bg=\"mealee-menu\" variant=\"dark\" className=\"pl-1\">\r\n            <Navbar.Brand className=\"logo mr-2\" href=\"#home\">\r\n                <Image src=\"mealee_logo_v9.svg\" height={60} />\r\n            </Navbar.Brand>\r\n            <Navbar.Brand style={{ marginTop: 40 }}>\r\n                <span style={{\r\n                    fontFamily: \"'Baloo 2', cursive\",\r\n                    fontWeight: 500,\r\n                    fontSize: 30\r\n                }}>meal planning for geeks</span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"container-fluid\">\r\n                    <Nav.Item className=\"ml-auto\">\r\n                        <span style={{\r\n                            fontFamily: \"'Baloo 2', cursive\",\r\n                            fontWeight: 600,\r\n                            fontSize: 20,\r\n                            color: \"#D1EdF230\"\r\n                        }}>v{getVersionNumber()}\r\n                        </span>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport * as AppDialogs from \"./AppDialogs\";\r\nimport * as AppBodies from \"./AppBodies\";\r\n\r\nimport { RecipeStore } from \"./store/RecipeStore\";\r\n\r\nimport { Settings } from \"./model/Settings\";\r\nimport { Plan } from \"./model/Plan\";\r\nimport { Recipe } from \"./model/Recipe\";\r\nimport { Workspace } from \"./model/Workspace\";\r\n\r\nimport \"./service/WorkspaceService\"\r\nimport { deserializeWokspaceFile } from \"./service/WorkspaceService\"\r\n\r\nimport { IconBar } from \"./component/IconBar\";\r\nimport { MenuBar } from \"./component/MenuBar\";\r\n\r\nimport { Beforeunload } from \"react-beforeunload\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\ntype AppState = {\r\n  recipeStore: RecipeStore;\r\n  settings: Settings;\r\n  plan: Plan;\r\n  showDialog?: Dialog;\r\n  recipeToEdit?: Recipe;\r\n  error: string | null;\r\n  unsavedChanges: boolean;\r\n  isInitialTour: boolean;\r\n};\r\n\r\nenum Dialog {\r\n  LoadFile,\r\n  SaveFile,\r\n  RecipeEditor,\r\n  SavePlanXLS,\r\n  ShoppingList,\r\n  PlanSettings\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    let recipeStore = new RecipeStore();\r\n    let planSettings = new Settings();\r\n    let plan = Plan.new(planSettings.nrRecipes);\r\n\r\n    // Hard binding is needed if `loadFile` do not use arrow notation\r\n    // this.loadFile = this.loadFile.bind(this);\r\n    this.state = {\r\n      recipeStore: recipeStore,\r\n      settings: planSettings,\r\n      plan: plan,\r\n      showDialog: undefined,\r\n      recipeToEdit: undefined,\r\n      error: null,\r\n      unsavedChanges: false,\r\n      isInitialTour: false\r\n    };\r\n  }\r\n\r\n  public renderDialog = AppDialogs.renderDialog;\r\n  public renderInitialBody = AppBodies.renderInitialBody;\r\n  public renderDesktopBody = AppBodies.renderDesktopBody;\r\n\r\n  addRecipes = (newRecipes: Recipe[], fromFile = false) => {\r\n    this.setState((st) => {\r\n      // You want to save only if it is not a first file load\r\n      let needsSave =\r\n        st.unsavedChanges || !(fromFile && st.recipeStore.count() === 0);\r\n\r\n      let ret = {};\r\n      let newRecipeStore = st.recipeStore.addAll(newRecipes);\r\n\r\n      if (newRecipeStore !== st.recipeStore) {\r\n        ret = {\r\n          recipeStore: newRecipeStore,\r\n          unsavedChanges: needsSave,\r\n        };\r\n      }\r\n\r\n      return ret;\r\n    });\r\n  };\r\n\r\n  setIsInitialTour = (t: boolean) => {\r\n    this.setState({ isInitialTour: t });\r\n  }\r\n\r\n  saveRecipe = (recipe: Recipe) => {\r\n    this.addRecipes([recipe]);\r\n    this.closeRecipeEditor();\r\n  };\r\n\r\n  onFileLoaded = (ev: ProgressEvent<FileReader>) => {\r\n    let data = ev.target?.result;\r\n\r\n    if (typeof data == \"string\") {\r\n      try {\r\n        let ws = deserializeWokspaceFile(data);\r\n        this.addRecipes(ws.getRecipes(), true);\r\n        this.updateSettings(ws.getSettings(), true);\r\n      } catch (e) {\r\n        this.setState({ error: e.message });\r\n      }\r\n    }\r\n    this.closeDialog();\r\n  };\r\n\r\n  loadFile = (file: File) => {\r\n    var reader = new FileReader();\r\n    reader.onload = (ev) => this.onFileLoaded(ev);\r\n    reader.readAsText(file, \"UTF-8\");\r\n  };\r\n\r\n  genRecipeFileContent = () => {\r\n    let ws = new Workspace(this.state.recipeStore.all(), this.state.settings);\r\n    return ws.serialize();\r\n  };\r\n\r\n  fileSaved = () => {\r\n    this.setState({ unsavedChanges: false });\r\n    this.closeDialog();\r\n  };\r\n\r\n  showDialog = (dialog: Dialog) => {\r\n    return () => this.setState({ showDialog: dialog });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ showDialog: undefined });\r\n  };\r\n\r\n  closeRecipeEditor = () => {\r\n    this.setState({ recipeToEdit: undefined, showDialog: undefined });\r\n  };\r\n\r\n  dismissError = () => {\r\n    this.setState({ error: null });\r\n  };\r\n\r\n  updateSettings = (ps: Settings, fromFile = false) => {\r\n    this.setState((st) => {\r\n      return {\r\n        settings: ps,\r\n        unsavedChanges: !fromFile,\r\n        plan: st.plan.setNrBuckets(ps.nrRecipes)\r\n      };\r\n    });\r\n  };\r\n\r\n  updatePlan = (plan: Plan) => {\r\n    this.setState({\r\n      plan: plan\r\n    });\r\n  };\r\n\r\n  editRecipe = (recipe: Recipe) => {\r\n    this.setState({ showDialog: Dialog.RecipeEditor, recipeToEdit: recipe });\r\n  };\r\n\r\n  deleteRecipe = (recipe: Recipe) => {\r\n    this.setState((st) => {\r\n      let newRecipeStore = st.recipeStore.delete(recipe.getId());\r\n\r\n      return {\r\n        recipeStore: newRecipeStore,\r\n        showDialog: undefined,\r\n        recipeToEdit: undefined,\r\n        unsavedChanges: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render(this: App) {\r\n\r\n    return (\r\n      <Container fluid className=\"d-flex flex-column vh-100\">\r\n        <Alert\r\n          variant=\"danger\"\r\n          onClose={this.dismissError}\r\n          show={!!this.state.error}\r\n          dismissible>\r\n          {this.state.error}\r\n        </Alert>\r\n\r\n        {this.state.unsavedChanges &&\r\n          <Beforeunload onBeforeunload={() => \"You'll lose your data!\"} />\r\n        }\r\n\r\n        {this.renderDialog()}\r\n\r\n        <Row>\r\n          <Col>\r\n            <MenuBar />\r\n          </Col>\r\n        </Row>\r\n\r\n        {!isMobileOnly\r\n          ?\r\n          <Row className=\"h-100\" style={{ minHeight: 0 }}>\r\n            <Col xs=\"auto\" className=\"pl-0 pr-2 pt-3\">\r\n              <IconBar\r\n                onLoadFile={this.showDialog(Dialog.LoadFile)}\r\n                onNewRecipe={this.showDialog(Dialog.RecipeEditor)}\r\n                onSaveFile={this.showDialog(Dialog.SaveFile)}\r\n                onEditSettings={this.showDialog(Dialog.PlanSettings)}\r\n                unsavedChanges={this.state.unsavedChanges} />\r\n            </Col>\r\n            {this.state.recipeStore.count() === 0 && this.renderInitialBody()}\r\n            {this.state.recipeStore.count() > 0 && !isMobileOnly && this.renderDesktopBody()}\r\n          </Row>\r\n          :\r\n          <Row>\r\n            <Col className=\"mt-3\">\r\n              <Alert key=\"recipe\" variant=\"danger\">\r\n                Mobile is not supported as for now. Please try it on a little bit bigger device. Sorry for that.\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n        }\r\n\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport ReactGA from 'react-ga'\r\n\r\nimport { isMobile } from \"react-device-detect\"\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { TouchBackend } from 'react-dnd-touch-backend'\r\n\r\n// https://levelup.gitconnected.com/using-google-analytics-with-react-3d98d709399b#:~:text=To%20begin%20integrating%20Google%20Analytics,react%2Dga%20package%20from%20npm.&text=The%20react%2Dga%20package%20is,the%20module%20in%20your%20application.\r\n\r\nconst trackingId = \"UA-74643376-3\"\r\nReactGA.initialize(trackingId)\r\nReactGA.set({\r\n    // any data that is relevant to the user session\r\n    // that you would like to track with google analytics\r\n})\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n            <App />\r\n        </DndProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}