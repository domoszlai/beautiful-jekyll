{"version":3,"sources":["service/RecipeService.ts","component/LoadFileDialog.tsx","component/SaveFileDialog.tsx","component/PlanSettings.tsx","model/Recipe.ts","component/IngredientLang.ts","component/RecipeEditor.tsx","AppDialogs.tsx","PlanExporter.ts","model/ScoringFun.ts","model/Scoring.ts","scoring/Scoring.ts","component/RecipeQuickView.tsx","component/RecipeSelector.tsx","component/Planner.tsx","AppBodies.tsx","model/PlanSettings.ts","db/RecipeDB.ts","model/Plan.ts","component/IconBar.tsx","component/MenuBar.tsx","App.tsx","index.js"],"names":["RecipeService","db","this","ingredients","Set","all","forEach","r","getIngredients","i","add","getName","toLowerCase","c","Intl","Collator","Array","from","sort","compare","units","getUnit","LoadFileDialog","title","loadButtonTitle","onClose","onLoad","React","useState","file","setFile","Modal","show","onHide","Header","closeButton","Title","Body","Form","FormControl","type","onChange","e","target","files","Footer","Button","variant","onClick","disabled","SaveFileDialog","saveButtonTitle","onSave","data","initialFileName","extension","fileName","setFileName","Group","controlId","Label","Control","value","length","download","PlanSettingsDialog","props","onSubmit","preventDefault","as","planSettings","nrRecipes","newNrRecipes","newSettings","clone","onUpdate","changeNrRecipes","parseInt","key","Ingredient","name","amount","unit","o","Error","undefined","Recipe","id","comment","source","readyInMinutes","labels","map","toJSON","replace","Math","random","toString","isArray","fromJSON","parseIngredients","text","errors","lines","split","line","trim","parts","push","CodeMirror","Pos","to","message","startpos","startAmount","endAmount","s","Number","parseFloat","autocomplete","cm","cursor","getCursor","getLine","start","ch","end","nrpart","substring","match","charAt","word","slice","trimLeft","selection","filter","indexOf","startsWith","list","defineMode","Location","startState","location","token","stream","state","sol","next","eatWhile","registerHelper","Dialog","RecipeEditor","recipe","Object","create","recipeJSON","setRecipeJSON","isTitleInvalid","setIsTitleInvalid","isIngredientsInvalid","setIsIngredientsInvalid","getAmount","join","ingredientCSV","setIngredientCSV","getLabels","l","toUpperCase","labelCSV","setLabelCSV","focusElement","createRef","ingredientEditorElement","onEntered","current","focus","fromTextArea","lineNumbers","mode","gutters","lint","extraKeys","on","instance","updateIngredients","getValue","showHint","hint","recipeService","getUnits","completeSingle","closeOnUnfocus","placeholder","isInvalid","newVal","currentTarget","ref","size","Feedback","rows","isNaN","onDelete","getIngredientMap","recipes","ingredientMap","Map","ingredientName","oneIngredientRecord","get","set","oneRecipeRecord","getId","calculateShoppingList","ingredientList","ingredient","values","oneUsage","ingredientsRows","amounts","exportShoppingList","recipeIndex","plan","getAll","getAllRecipeIds","keys","res","row","shift","exportPlan","uniqueRecipes","wb","XLSX","utils","book_new","planRows","_","range","getNrBuckets","bid","concat","getRecipeIds","getTitle","planWS","aoa_to_sheet","book_append_sheet","ingredientsWS","mapHeaderRow","unshift","mapDataRows","recipeIngredient","au","mapRows","mapWS","recipeRows","getComment","getReadyInMinutes","getSource","recipeWS","substr","bytes","write","bookType","bookSST","Blob","renderDialog","showDialog","LoadFile","closeDialog","loadFile","SaveFile","genRecipeFileContent","fileSaved","closeRecipeEditor","saveRecipe","deleteRecipe","recipeToEdit","SavePlanXLS","ShoppingList","cols","readOnly","PlanSettings","updatePlanSettings","ScoringFun","script","RecipeScoring","scorings","sum","addScoring","scoringFun","score","getSum","getScorings","Scoring","scoring","recipeId","sf","has","rs","getScoring","scoringFuns","labelDict","countBy","_scoreRecipes","p","fun","consts","evaluate","getScript","scoreRecipes","Parser","rlabels","precipes","plabels","flatMap","functions","intersection","bs","hasLabel","label","ld","planHasLabel","planHasRecipe","max","normalize","curr","scores","RecipeQuickView","n","Col","sm","className","scoringLines","oneScore","Row","xs","toFixed","Container","height","fluid","RecipeListItem","selected","onEdit","useDrag","item","collect","monitor","isDragging","drag","style","position","width","backgroundColor","Card","opacity","top","transform","right","zIndex","OverlayTrigger","placement","overlay","Popover","Content","RecipeSelector","setFilter","debouncedSetFilter","useCallback","debounce","filteredRecipes","search","selectedRecipeSet","listItems","sortBy","ListGroup","Item","InputGroup","Prepend","Text","event","RecipeCarousel","minHeight","showIndicators","showThumbs","showArrows","useKeyboardArrows","infiniteLoop","RecipeBox","bucketId","Bucket","DroppableBucket","onDrop","onMove","useDrop","accept","drop","r2","isOver","left","Planner","recipeDB","updatePlan","addRecipe","bucketIdx","addRecipeId","deleteRecipeId","moveRecipe","renderInitialBody","isOpen","isInitialTour","onRequestClose","setIsInitialTour","steps","selector","content","Alert","renderDesktopBody","md","lg","xl","editRecipe","getNrRecipes","Image","src","renderMobileBody","Optimization","RecipeIndex","index","recipesMap","fieldAccessors","fieldBoostFactors","termFilter","term","toUpdate","JSON","stringify","delete","newMap","addDocumentToIndex","words","addAll","reduce","idx","q","query","acc","removeDocumentFromIndex","count","createIndex","new","Plan","buckets","List","nrBuckets","setSize","ret","bucket","bucketNr","deDuplicate","ids","IconBar","onLoadFile","onNewRecipe","onSaveFile","onEditSettings","unsavedChanges","Tooltip","color","MenuBar","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","process","App","AppDialogs","AppBodies","addRecipes","newRecipes","fromFile","setState","st","needsSave","newRecipeIndex","t","onFileLoaded","ev","result","json","parse","version","deserializeRecipes","error","reader","FileReader","onload","readAsText","str","TextEncoder","encode","serializeRecipes","dialog","dismissError","ps","setNrBuckets","dismissible","onBeforeunload","isMobileOnly","Component","ReactDOM","render","StrictMode","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.4c9144a0.chunk.js","sourcesContent":["import { RecipeIndex } from '../db/RecipeDB'\r\n\r\nexport class RecipeService {\r\n\r\n    private readonly db: RecipeIndex;\r\n\r\n    constructor(db: RecipeIndex) {\r\n        this.db = db;\r\n    }\r\n\r\n    public getIngredients() {\r\n\r\n        let ingredients = new Set<string>();\r\n\r\n        this.db.all().forEach(r => {\r\n            r.getIngredients().forEach(i => {\r\n                ingredients.add(i.getName().toLowerCase());\r\n            })\r\n        });\r\n\r\n        const c = new Intl.Collator();\r\n        return Array.from(ingredients).sort(c.compare);\r\n    }\r\n\r\n    public getUnits() {\r\n\r\n        let units = new Set<string>();\r\n\r\n        this.db.all().forEach(r => {\r\n            r.getIngredients().forEach(i => {\r\n                units.add(i.getUnit().toLowerCase());\r\n            })\r\n        });\r\n\r\n        const c = new Intl.Collator();\r\n        return Array.from(units).sort(c.compare);\r\n    }\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\ntype LoadFileDialogProps = {\r\n    title: string,\r\n    loadButtonTitle: string,\r\n    onClose: () => void,\r\n    onLoad: (file: File) => void\r\n}\r\n\r\nexport const LoadFileDialog: FunctionComponent<LoadFileDialogProps> = ({title, loadButtonTitle, onClose, onLoad}) => {\r\n\r\n    const [file, setFile] = React.useState<null | File>(null);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <FormControl type=\"file\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                                if(e.target.files)\r\n                                                {\r\n                                                    setFile(e.target.files[0])\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    setFile(null)\r\n                                                }\r\n                                            }}/>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!file} \r\n                        onClick={() => {if(file) onLoad(file)}}>{loadButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, {FunctionComponent} from 'react';\r\n\r\nimport {Modal, Form, Button} from 'react-bootstrap';\r\n\r\nimport download from 'downloadjs'\r\n\r\ntype SaveFileDialogProps = {\r\n    title: string,\r\n    saveButtonTitle: string,\r\n    data: Blob,\r\n    type: string,\r\n    initialFileName: string,\r\n    extension: string,\r\n    onClose: () => void,\r\n    onSave: () => void\r\n}\r\n\r\nexport const SaveFileDialog: FunctionComponent<SaveFileDialogProps> \r\n                = ({title, saveButtonTitle, onClose, onSave, data, type, initialFileName, extension }) => {\r\n\r\n    const [fileName, setFileName] = React.useState(initialFileName);\r\n\r\n    const startDownload = () => {\r\n        download(data, fileName+\".\"+extension, type)\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n        <Form.Group controlId=\"formBasicFileName\">\r\n        <Form.Label>File name</Form.Label>\r\n        <Form.Control type=\"fileName\" value={fileName} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFileName(e.target.value)}/>\r\n        </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>Close</Button>\r\n            <Button type=\"button\" variant=\"primary\" disabled={!fileName || fileName.length===0} \r\n                        onClick={() => {startDownload(); onSave()}}>{saveButtonTitle}</Button>\r\n        </Modal.Footer>   \r\n        </Modal>\r\n    );\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { PlanSettings } from '../model/PlanSettings';\r\n\r\ntype PlanSettingsDialogProps = {\r\n    planSettings: PlanSettings,\r\n    onClose: () => void,\r\n    onUpdate: (planSettings: PlanSettings) => void\r\n}\r\n\r\nexport const PlanSettingsDialog: FunctionComponent<PlanSettingsDialogProps> = (props) => {\r\n\r\n    const changeNrRecipes = (newNrRecipes: number) => {\r\n        let newSettings = props.planSettings.clone();\r\n        newSettings.nrRecipes = newNrRecipes;\r\n        props.onUpdate(newSettings);\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose}>\r\n        <Modal.Header closeButton>\r\n                <Modal.Title>Plan settings</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form onSubmit={(e) => e.preventDefault()}>\r\n            <Form.Group controlId=\"nrRecipes\">\r\n                <Form.Label>Number of recipes:</Form.Label>\r\n                <Form.Control as=\"select\" value={props.planSettings.nrRecipes}\r\n                    onChange={(e) => changeNrRecipes(parseInt(e.target.value))}>\r\n                    <option key=\"3\">3</option>\r\n                    <option key=\"4\">4</option>\r\n                    <option key=\"5\">5</option>\r\n                    <option key=\"6\">6</option>\r\n                    <option key=\"7\">7</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n","export interface IngredientJSON {\r\n  name: string;\r\n  amount: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface RecipeJSON {\r\n  id: string;\r\n  title: string;\r\n  source?: string;\r\n  comment?: string;\r\n  readyInMinutes?: number;\r\n  ingredients: IngredientJSON[];\r\n  labels?: string[];\r\n}\r\n\r\ninterface RecipeFileJSON {\r\n  version: number;\r\n  recipes: RecipeJSON[];\r\n}\r\n\r\nexport class Ingredient {\r\n  private constructor(name: string, amount: number, unit: string) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n    this.unit = unit;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  public getUnit(): string {\r\n    return this.unit;\r\n  }\r\n\r\n  public static fromJSON(o: IngredientJSON): Ingredient {\r\n    if (!o.name) {\r\n      throw new Error(\"Missing ingredient name\");\r\n    }\r\n\r\n    if (!o.unit) {\r\n      throw new Error(\"Missing ingredient unit\");\r\n    }\r\n\r\n    if (o.amount === undefined) {\r\n      throw new Error(\"Missing ingredient amount\");\r\n    }\r\n\r\n    return new Ingredient(o.name, o.amount, o.unit);\r\n  }\r\n\r\n  public toJSON(): IngredientJSON {\r\n    return {\r\n      name: this.name,\r\n      amount: this.amount,\r\n      unit: this.unit,\r\n    };\r\n  }\r\n\r\n  private name: string;\r\n  private amount: number;\r\n  private unit: string;\r\n}\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport class Recipe {\r\n  private constructor(id: string, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.ingredients = [];\r\n    this.labels = [];\r\n  }\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public getTitle(): string {\r\n    return this.title;\r\n  }\r\n\r\n  public getComment(): string | undefined {\r\n    return this.comment;\r\n  }\r\n\r\n  public getSource(): string | undefined {\r\n    return this.source;\r\n  }\r\n\r\n  public getReadyInMinutes(): number | undefined {\r\n    return this.readyInMinutes;\r\n  }\r\n\r\n  public getIngredients(): Ingredient[] {\r\n    return this.ingredients;\r\n  }\r\n\r\n  public getLabels(): string[] {\r\n    return this.labels;\r\n  }\r\n\r\n  public static fromJSON(o: RecipeJSON): Recipe {\r\n    if (!o.id) {\r\n      o.id = uuidv4();\r\n    }\r\n\r\n    if (!o.title) {\r\n      throw new Error(\"Missing recipe title\");\r\n    }\r\n\r\n    let r = new Recipe(o.id, o.title);\r\n\r\n    r.comment = o.comment;\r\n    r.source = o.source;\r\n    r.readyInMinutes = o.readyInMinutes;\r\n    r.labels = o.labels ?? [];\r\n\r\n    if (Array.isArray(o.ingredients)) {\r\n      r.ingredients = o.ingredients.map((i) => Ingredient.fromJSON(i));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  public toJSON(): RecipeJSON {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      comment: this.comment,\r\n      source: this.source,\r\n      readyInMinutes: this.readyInMinutes,\r\n      ingredients: this.ingredients.map((i) => i.toJSON()),\r\n      labels: this.labels\r\n    };\r\n  }\r\n\r\n  private id: string;\r\n  private title: string;\r\n  private comment?: string;\r\n  private source?: string;\r\n  private readyInMinutes?: number;\r\n  private ingredients: Ingredient[];\r\n  private labels: string[];\r\n}\r\n\r\nexport function serializeRecipes(recipes: Recipe[]) {\r\n  let str = JSON.stringify({ version: 1, recipes: recipes });\r\n  let bytes = new TextEncoder().encode(str);\r\n  let blob = new Blob([bytes], {\r\n    type: \"application/json;charset=utf-8\",\r\n  });\r\n  return blob;\r\n}\r\n\r\nexport function deserializeRecipes(data: string) {\r\n  let json = JSON.parse(data);\r\n\r\n  if (Array.isArray(json)) {\r\n    let v0: RecipeJSON[] = json;\r\n    return v0.map(Recipe.fromJSON);\r\n  }\r\n\r\n  if (typeof json === \"object\") {\r\n    let r: RecipeFileJSON = json;\r\n\r\n    if (typeof r.version !== \"undefined\") {\r\n      if (r.version !== 1) {\r\n        throw new Error(\"Invalid recipe file version\");\r\n      }\r\n\r\n      if (Array.isArray(r.recipes)) {\r\n        return r.recipes.map(Recipe.fromJSON);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Invalid recipe file\");\r\n}\r\n","import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\n\r\nimport { IngredientJSON } from '../model/Recipe';\r\n\r\nCodeMirror.defineMode(\"ingredients\", () => {\r\n  var Location = {\r\n    INGREDIENT: 0,\r\n    AMOUNT: 1,\r\n    UNIT: 2,\r\n    ERROR: 3,\r\n  };\r\n\r\n  return {\r\n    startState: function () {\r\n      return {\r\n        location: Location.INGREDIENT,\r\n      };\r\n    },\r\n    token: function (stream, state) {\r\n      if (stream.sol()) {\r\n        state.location = Location.INGREDIENT;\r\n      }\r\n\r\n      var ch = stream.next();\r\n\r\n      if (ch === \";\") {\r\n        if (state.location === Location.INGREDIENT)\r\n          state.location = Location.AMOUNT;\r\n        else if (state.location === Location.AMOUNT)\r\n          state.location = Location.UNIT;\r\n        else state.location = Location.ERROR;\r\n      }\r\n\r\n      if (state.location === Location.ERROR) {\r\n        return \"error\";\r\n      }\r\n\r\n      if (ch === \";\") {\r\n        return \"keyword\";\r\n      }\r\n\r\n      if (state.location === Location.INGREDIENT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      if (state.location === Location.AMOUNT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"number\";\r\n      }\r\n\r\n      if (state.location === Location.UNIT) {\r\n        stream.eatWhile(function (c: string) {\r\n          if (c !== \";\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        return \"atom\";\r\n      }\r\n\r\n      return \"error\";\r\n    },\r\n  };\r\n});\r\n\r\nexport function parseIngredients(text: string, errors: CodeMirror.Annotation[]) {\r\n\r\n  let ingredients: IngredientJSON[] = [];\r\n\r\n  let lines: string[] = text.split(/\\r?\\n/);\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let line = lines[i];\r\n\r\n    if (line.trim().length > 0) {\r\n      let parts = line.split(\";\");\r\n\r\n      if (parts.length < 3) {\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, 0),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Not enough parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      } else if (parts.length > 3) {\r\n        let startpos = parts[0].length + parts[1].length + parts[2].length + 2;\r\n        errors.push({\r\n          from: CodeMirror.Pos(i, startpos),\r\n          to: CodeMirror.Pos(i, line.length),\r\n          message: \"Too many parts. Syntax: <name>;<amount>;<unit>\",\r\n        });\r\n      }\r\n      else {\r\n        let startAmount = parts[0].length + 1;\r\n        let endAmount = startAmount + parts[1].length;\r\n\r\n        parts = parts.map(s => s.trim());\r\n\r\n        if (parts[0].length === 0 || parts[1].length === 0 || parts[2].length === 0) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, 0),\r\n            to: CodeMirror.Pos(i, line.length),\r\n            message: \"Empty part(s). Syntax: <name>;<amount>;<unit>\",\r\n          });\r\n        }\r\n        else if (\"\" + Number.parseFloat(parts[1]) !== parts[1]) {\r\n          errors.push({\r\n            from: CodeMirror.Pos(i, startAmount),\r\n            to: CodeMirror.Pos(i, endAmount),\r\n            message: \"Amount should be a number.\",\r\n          });\r\n        }\r\n        else {\r\n          ingredients.push({ name: parts[0], amount: Number.parseFloat(parts[1]), unit: parts[2] })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ingredients;\r\n}\r\n\r\nCodeMirror.registerHelper(\"lint\", \"ingredients\", function (text: string) {\r\n  let errors: CodeMirror.Annotation[] = [];\r\n  parseIngredients(text, errors);\r\n  return errors;\r\n});\r\n\r\nexport function autocomplete(ingredients: string[], units: string[]) {\r\n  return function (\r\n    cm: CodeMirror.Editor,\r\n  ) {\r\n\r\n    var cursor = cm.getCursor(),\r\n      line = cm.getLine(cursor.line);\r\n    var start = cursor.ch,\r\n      end = cursor.ch;\r\n\r\n    let nrpart = (line.substring(0, end).match(/;/g) || []).length;\r\n\r\n    if (nrpart !== 0 && nrpart !== 2) {\r\n      return null;\r\n    }\r\n\r\n    while (start && line.charAt(start - 1) !== \";\") --start;\r\n    while (end < line.length && line.charAt(end) !== \";\") ++end;\r\n    var word = line.slice(start, end).trimLeft().toLowerCase();\r\n\r\n    let selection =\r\n      nrpart === 0\r\n        ? ingredients.filter((i) => i.indexOf(word) >= 0)\r\n        : units.filter((i) => i.startsWith(word));\r\n\r\n    if(selection.length === 1 && selection[0] === word) {\r\n        selection = []\r\n    }\r\n\r\n    return {\r\n      list: selection,\r\n      from: CodeMirror.Pos(cursor.line, start),\r\n      to: CodeMirror.Pos(cursor.line, end),\r\n    };\r\n  }\r\n};\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { RecipeJSON, Recipe, Ingredient } from '../model/Recipe';\r\nimport { RecipeService } from '../service/RecipeService';\r\n\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/addon/lint/lint.css';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/selection/active-line.js';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/lint/lint.js';\r\nimport 'codemirror/addon/display/placeholder.js';\r\n\r\nimport { autocomplete, parseIngredients } from './IngredientLang'\r\n\r\ntype RecipeEditorProps = {\r\n    recipe?: Recipe,\r\n    recipeService: RecipeService,\r\n    onClose: () => void,\r\n    onSave: (recipe: Recipe) => void,\r\n    onDelete: (recipe: Recipe) => void\r\n}\r\n\r\nexport const RecipeEditor: FunctionComponent<RecipeEditorProps> = (props) => {\r\n\r\n    const [recipeJSON, setRecipeJSON] = React.useState<RecipeJSON>(\r\n        props.recipe ? props.recipe.toJSON() : Object.create({}));\r\n    const [isTitleInvalid, setIsTitleInvalid] = React.useState(!props.recipe);\r\n    const [isIngredientsInvalid, setIsIngredientsInvalid] = React.useState(false);\r\n\r\n    const generateIngredientCSV = (ingredients: Ingredient[]) => {\r\n        return ingredients.map(i => i.getName() + \";\" + i.getAmount() + \";\" + i.getUnit()).join(\"\\n\")\r\n    }\r\n\r\n    const [ingredientCSV, setIngredientCSV] = React.useState(props.recipe ?\r\n        generateIngredientCSV(props.recipe.getIngredients()) : \"\");\r\n\r\n    const generateLabelCSV = (labels: string[]) => {\r\n        return labels.map(l => l.toUpperCase()).join(\", \")\r\n    }    \r\n\r\n    const [labelCSV, setLabelCSV] = React.useState(props.recipe ?\r\n        generateLabelCSV(props.recipe.getLabels()) : \"\");\r\n    \r\n    const setTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal = e.currentTarget.value;\r\n        setIsTitleInvalid(!newVal || newVal.length === 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ title: newVal } }))\r\n    }\r\n\r\n    const setComment = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ comment: newVal } }))\r\n    }\r\n\r\n    const setSource = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: string = e.currentTarget.value;\r\n        setRecipeJSON(r => ({ ...r, ...{ source: newVal } }))\r\n    }\r\n\r\n    const setMinutes = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal: number | undefined = Number.parseInt(e.currentTarget.value)\r\n        if (isNaN(newVal)) newVal = undefined\r\n        setRecipeJSON(r => ({ ...r, ...{ readyInMinutes: newVal } }))\r\n    }\r\n\r\n    const updateLabels = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value.toUpperCase();\r\n        setLabelCSV(text)\r\n        let labels = text.split(\",\").map(l => l.trim()).filter(l => l.length > 0);\r\n        setRecipeJSON(r => ({ ...r, ...{ labels: labels } }))\r\n    }\r\n\r\n    const updateIngredients = (text: string) => {\r\n\r\n        setIngredientCSV(text);\r\n\r\n        let errors: CodeMirror.Annotation[] = [];\r\n        let ingredients = parseIngredients(text, errors);\r\n        let invalid = errors.length > 0;\r\n\r\n        if (invalid) {\r\n            setIsIngredientsInvalid(true);\r\n        }\r\n        else {\r\n            setIsIngredientsInvalid(false);\r\n            setRecipeJSON(r => ({ ...r, ...{ ingredients: ingredients } }))\r\n        }\r\n    }\r\n\r\n    const saveRecipe = () => {\r\n        props.onSave(Recipe.fromJSON(recipeJSON))\r\n    }\r\n\r\n    const deleteRecipe = () => {\r\n        if (props.recipe) {\r\n            props.onDelete(props.recipe)\r\n        }\r\n    }\r\n\r\n    const focusElement = React.createRef<HTMLInputElement>();\r\n    const ingredientEditorElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.onClose} onEntered={() => {\r\n            if (focusElement.current) focusElement.current.focus();\r\n            if (ingredientEditorElement.current) {\r\n                let cm = CodeMirror.fromTextArea(ingredientEditorElement.current,\r\n                    {\r\n                        lineNumbers: false,\r\n                        mode: \"ingredients\",\r\n                        gutters: [\"CodeMirror-lint-markers\"],\r\n                        lint: true,\r\n                        extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n                    });\r\n\r\n                cm.on(\"change\", (instance: CodeMirror.Editor) => {\r\n                    updateIngredients(instance.getValue());\r\n                });\r\n                cm.on(\"cursorActivity\", (instance: CodeMirror.Editor) => {\r\n                    instance.showHint({\r\n                        hint: autocomplete(props.recipeService.getIngredients(), props.recipeService.getUnits()),\r\n                        completeSingle: false,\r\n                        closeOnUnfocus: true\r\n                    });\r\n                });\r\n            }\r\n        }}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{props.recipe ? \"Edit\" : \"Add new \"} recipe</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formTitle\">\r\n                        <Form.Control type=\"title\" value={recipeJSON.title} placeholder=\"Title\"\r\n                            isInvalid={isTitleInvalid} onChange={setTitle}\r\n                            ref={focusElement}\r\n                            size=\"sm\" />\r\n                        <Form.Control.Feedback type=\"invalid\">Required field!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formComment\">\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            value={recipeJSON.comment}\r\n                            onChange={setComment}\r\n                            rows={2}\r\n                            placeholder=\"Comment\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formSource\">\r\n                        <Form.Control\r\n                            type=\"source\"\r\n                            value={recipeJSON.source}\r\n                            onChange={setSource}\r\n                            placeholder=\"Where to find the recipe\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formMinutes\">\r\n                        <Form.Control\r\n                            type=\"minutes\"\r\n                            value={recipeJSON.readyInMinutes}\r\n                            onChange={setMinutes}\r\n                            placeholder=\"Number of minutes to cook\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formLabels\">\r\n                        <Form.Control\r\n                            type=\"labels\"\r\n                            value={labelCSV}\r\n                            onChange={updateLabels}\r\n                            placeholder=\"Labels: LABEL1, LABEL2, ...\"\r\n                            size=\"sm\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formIngredients\">\r\n                        <Form.Control as=\"textarea\" value={ingredientCSV} ref={ingredientEditorElement}\r\n                            placeholder=\"Ingredients: <name>;<amount>;<unit>\" />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={props.onClose}>Close</Button>\r\n                <Button type=\"button\" variant=\"primary\" onClick={saveRecipe} disabled={isTitleInvalid || isIngredientsInvalid}>Save recipe</Button>\r\n                {props.recipe &&\r\n                    <Button type=\"button\" variant=\"primary\" onClick={deleteRecipe}>Delete recipe</Button>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { RecipeService } from \"./service/RecipeService\";\r\n\r\nimport { LoadFileDialog } from \"./component/LoadFileDialog\";\r\nimport { SaveFileDialog } from \"./component/SaveFileDialog\";\r\nimport { PlanSettingsDialog } from \"./component/PlanSettings\";\r\nimport { RecipeEditor } from \"./component/RecipeEditor\";\r\n\r\nimport { exportPlan, exportShoppingList } from \"./PlanExporter\";\r\n\r\nimport App from \"./App\";\r\n\r\nexport enum Dialog {\r\n    LoadFile,\r\n    SaveFile,\r\n    RecipeEditor,\r\n    SavePlanXLS,\r\n    ShoppingList,\r\n    PlanSettings\r\n}\r\n\r\nexport function renderDialog(this: App) {\r\n    switch (this.state.showDialog) {\r\n        case Dialog.LoadFile: {\r\n            return (\r\n                <LoadFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Load recipes file\"\r\n                    loadButtonTitle=\"Load recipes\"\r\n                    onLoad={this.loadFile}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SaveFile: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save recipes file\"\r\n                    saveButtonTitle=\"Save recipes\"\r\n                    data={this.genRecipeFileContent()}\r\n                    type=\"application/json\"\r\n                    initialFileName=\"recipes\"\r\n                    extension=\"json\"\r\n                    onSave={this.fileSaved}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.RecipeEditor: {\r\n            return (\r\n                <RecipeEditor\r\n                    onClose={this.closeRecipeEditor}\r\n                    onSave={this.saveRecipe}\r\n                    onDelete={this.deleteRecipe}\r\n                    recipe={this.state.recipeToEdit}\r\n                    recipeService={new RecipeService(this.state.recipeIndex)}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.SavePlanXLS: {\r\n            return (\r\n                <SaveFileDialog\r\n                    onClose={this.closeDialog}\r\n                    title=\"Save plan\"\r\n                    saveButtonTitle=\"Save plan\"\r\n                    data={exportPlan(this.state.recipeIndex, this.state.plan)}\r\n                    type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                    initialFileName=\"plan\"\r\n                    extension=\"xlsx\"\r\n                    onSave={this.closeDialog}\r\n                />\r\n            );\r\n        }\r\n\r\n        case Dialog.ShoppingList: {\r\n            return (\r\n                <Modal show={true} onHide={this.closeDialog}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Shopping list</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={20}\r\n                                cols={80}\r\n                                value={exportShoppingList(this.state.recipeIndex, this.state.plan)}\r\n                                readOnly />\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.closeDialog}>\r\n                            Close\r\n              </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            );\r\n        }\r\n\r\n        case Dialog.PlanSettings: {\r\n            return (\r\n                <PlanSettingsDialog\r\n                    onClose={this.closeDialog}\r\n                    planSettings={this.state.planSettings}\r\n                    onUpdate={this.updatePlanSettings} />\r\n            );\r\n        }\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n};\r\n","import { RecipeIndex } from './db/RecipeDB';\r\n\r\nimport { Plan } from './model/Plan';\r\nimport { Recipe } from './model/Recipe';\r\n\r\nimport XLSX from 'xlsx';\r\nimport _ from 'lodash';\r\n\r\nexport function getIngredientMap(recipes: Recipe[]) {\r\n    // Ingredient -> (recipe id -> [amount, unit][])\r\n    let ingredientMap = new Map<string, Map<string, [number, string][]>>();\r\n\r\n    recipes.forEach(r => {\r\n\r\n        r.getIngredients().forEach(i => {\r\n            let ingredientName = i.getName().toLowerCase();\r\n            let oneIngredientRecord = ingredientMap.get(ingredientName);\r\n            if (!oneIngredientRecord) {\r\n                oneIngredientRecord = new Map()\r\n                ingredientMap.set(ingredientName, oneIngredientRecord);\r\n            }\r\n\r\n            let oneRecipeRecord = oneIngredientRecord.get(r.getId()) ?? [];\r\n            oneRecipeRecord.push([i.getAmount(), i.getUnit().toLowerCase()]);\r\n            oneIngredientRecord.set(r.getId(), oneRecipeRecord);\r\n        });\r\n    });\r\n\r\n    return ingredientMap;\r\n}\r\n\r\nfunction calculateShoppingList(\r\n    ingredientMap: Map<string, Map<string, [number, string][]>>,\r\n    ingredients: string[]) {\r\n    let ingredientList = ingredients.map(name => {\r\n\r\n        let oneIngredientRecord = new Map<string, number>()\r\n        let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string][]>()\r\n\r\n        // Group ingredient usages by unit\r\n        for (let oneUsage of ingredient.values()) {\r\n            for (let [amount, unit] of oneUsage) {\r\n                oneIngredientRecord.set(unit,\r\n                    (oneIngredientRecord.get(unit) ?? 0) + amount)\r\n            }\r\n        }   \r\n\r\n        return { \"name\": name, \"amounts\": oneIngredientRecord }\r\n    });\r\n\r\n    let ingredientsRows = []\r\n\r\n    for (let { name, amounts } of ingredientList) {\r\n        let line: [string] = [name]\r\n        for (let [unit, amount] of amounts) {\r\n            line.push(\"\" + amount + \" \" + unit)\r\n        }\r\n        ingredientsRows.push(line)\r\n    }\r\n\r\n    return ingredientsRows;\r\n}\r\n\r\n// Exports ShoppingList as list of MD lines\r\nexport function exportShoppingList(recipeIndex: RecipeIndex, plan: Plan) {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let recipes = recipeIndex.getAll(plan.getAllRecipeIds(false)); \r\n    let ingredientMap = getIngredientMap(recipes);\r\n    let c = new Intl.Collator();\r\n    let ingredients = Array.from(ingredientMap.keys()).sort(c.compare);\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n\r\n    let res = \"\";\r\n\r\n    for (let row of ingredientsRows) {\r\n        res += \"**\" + row.shift() + \"**\";\r\n        res += \" - \";\r\n        res += row.join(\" + \");\r\n        res += \"\\n\";\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// Exports Plan as XLSX\r\nexport function exportPlan(recipeIndex: RecipeIndex, plan: Plan): Blob {\r\n    // Wan't here the recipes as many times as they appear in the plan\r\n    let recipes = recipeIndex.getAll(plan.getAllRecipeIds(false));\r\n    let uniqueRecipes = new Set(recipes);\r\n    let ingredientMap = getIngredientMap(recipes);\r\n    let ingredients = Array.from(ingredientMap.keys()).sort();\r\n\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate map\r\n\r\n    let planRows = _.range(0, plan.getNrBuckets()).map(bid => \r\n        [\"Day #\"+(bid+1)].concat(\r\n            recipeIndex.getAll(plan.getRecipeIds(bid)).map(r => r.getTitle())));\r\n    let planWS = XLSX.utils.aoa_to_sheet(planRows);\r\n    XLSX.utils.book_append_sheet(wb, planWS, \"Plan\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Calculate shopping list\r\n\r\n    let ingredientsRows = calculateShoppingList(ingredientMap, ingredients);\r\n    let ingredientsWS = XLSX.utils.aoa_to_sheet(ingredientsRows);\r\n    XLSX.utils.book_append_sheet(wb, ingredientsWS, \"Shopping list\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate ingredient map\r\n\r\n    const mapHeaderRow = recipes.map(r => r.getTitle())\r\n    mapHeaderRow.unshift(\"\")\r\n\r\n    const mapDataRows = ingredients.map(name => {\r\n\r\n        let line = [name]\r\n\r\n        for (let r of recipes) {\r\n            let ingredient = ingredientMap.get(name) ?? new Map<string, [number, string][]>();\r\n            let recipeIngredient = ingredient.get(r.getId());\r\n            if (recipeIngredient) {\r\n                line.push(recipeIngredient.map(au => \"\" + au[0] + \" \" + au[1]).join(\", \"));\r\n            }\r\n            else {\r\n                line.push(\"\");\r\n            }\r\n\r\n        }\r\n\r\n        return line;\r\n    });\r\n\r\n    let mapRows = [mapHeaderRow].concat(mapDataRows);\r\n    let mapWS = XLSX.utils.aoa_to_sheet(mapRows);\r\n    XLSX.utils.book_append_sheet(wb, mapWS, \"Ingredient map\");\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Generate recipes\r\n\r\n    // Recipes must be converted to a set to eliminate duplications\r\n    for (let r of uniqueRecipes) {\r\n        let recipeRows = [\r\n            [\"Title\", r.getTitle()],\r\n            [\"Comment\", r.getComment() ?? \"-\"],\r\n            [\"Ready in minutes\", r.getReadyInMinutes() ?? \"-\"],\r\n            [\"Source\", r.getSource() ?? \"-\"],\r\n            [\"Ingredients:\"]\r\n        ];\r\n\r\n        for (let i of r.getIngredients()) {\r\n            recipeRows.push([i.getName().toLowerCase(), i.getAmount(), i.getUnit().toLowerCase()])\r\n        }\r\n\r\n        let recipeWS = XLSX.utils.aoa_to_sheet(recipeRows);\r\n        XLSX.utils.book_append_sheet(wb, recipeWS, r.getTitle().substr(0,31));\r\n    }\r\n\r\n    let bytes = XLSX.write(wb, { bookType: 'xlsx', bookSST: false, type: 'array' });\r\n    return new Blob([bytes], {\r\n        type: 'application/octet-stream'\r\n    });\r\n}\r\n","export class ScoringFun {\r\n\r\n    private name: string;\r\n    private script: string;\r\n\r\n    constructor(name: string, script: string)\r\n    {\r\n        this.name = name;\r\n        this.script = script;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n\r\n    public getScript() {\r\n        return this.script;\r\n    }\r\n}\r\n","import { ScoringFun } from './ScoringFun';\r\n\r\nexport class RecipeScoring {\r\n    private scorings: Map<ScoringFun, number>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scorings = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    addScoring = (scoringFun: ScoringFun, score: number) => {\r\n        this.scorings.set(scoringFun, score)\r\n        this.sum += score\r\n    }\r\n\r\n    getSum = () => {\r\n        return this.sum;\r\n    }\r\n\r\n    getScorings = () => {\r\n        return Array.from(this.scorings);\r\n    }\r\n}\r\n\r\nexport class Scoring {\r\n    private scoring: Map<string, RecipeScoring>\r\n    private sum: number\r\n\r\n    constructor() {\r\n        this.scoring = new Map();\r\n        this.sum = 0;\r\n    }\r\n\r\n    public addScoring = (recipeId: string, sf: ScoringFun, score: number) => {\r\n        if (!this.scoring.has(recipeId)) {\r\n            this.scoring.set(recipeId, new RecipeScoring())\r\n        }\r\n\r\n        this.scoring.get(recipeId)?.addScoring(sf, score);\r\n    }\r\n\r\n    public getSum = (recipeId: string) => {\r\n        let rs = this.scoring.get(recipeId);\r\n        if (rs) {\r\n            return rs.getSum();\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getScoring = (recipeId: string) => {\r\n        return this.scoring.get(recipeId);\r\n    }\r\n}\r\n","import {Recipe} from '../model/Recipe';\r\nimport {Plan} from '../model/Plan';\r\nimport {ScoringFun} from '../model/ScoringFun';\r\nimport {Scoring} from '../model/Scoring';\r\n\r\nimport {RecipeIndex} from '../db/RecipeDB';\r\n\r\nimport {Parser} from 'expr-eval';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst scoringFuns = [\r\n    new ScoringFun(\"random\", \"random(1)\"),\r\n    new ScoringFun(\"SLOW\", \"planHasLabel(\\\"SLOW\\\") > 0 and hasLabel(this, \\\"SLOW\\\") ? -1 : 0\"),\r\n    new ScoringFun(\"+1\", \"hasLabel(this, \\\"+1\\\") ? 0.15 : 0\"),\r\n    new ScoringFun(\"-1\", \"hasLabel(this, \\\"-1\\\") ? -0.15 : 0\"),\r\n    new ScoringFun(\"EASY\", \"hasLabel(this, \\\"EASY\\\") ? 0.15/(1+planHasLabel(\\\"EASY\\\")) : 0\"),\r\n    new ScoringFun(\"Side dish\", \"hasLabel(this, \\\"SD\\\") ? (planHasLabel(\\\"SD\\\") < planHasLabel(\\\"NSD\\\") ? 5 : -5) : 0\"),\r\n    new ScoringFun(\"Few ingredients\", \"(1-normalize(length(ingredients(this))))/6\"),\r\n    new ScoringFun(\"Repetition\", \"planHasRecipe(this) > 0 and (not hasLabel(this, \\\"SD\\\")) ? -2 : 0\")\r\n]\r\n\r\nfunction labelDict(r: Recipe)\r\n{\r\n    return _.countBy(r.getLabels().map(l => l.toUpperCase()));\r\n}\r\n\r\nfunction _scoreRecipes(p: Parser, recipes: Recipe[], fun: ScoringFun)\r\n{\r\n    return new Map(recipes.map(r=> {\r\n        p.consts.this = r;\r\n        let s = p.evaluate(fun.getScript());\r\n        return [r, s]\r\n    }));\r\n}\r\n\r\nexport function scoreRecipes(recipeIndex: RecipeIndex, plan: Plan)\r\n{\r\n    let p = new Parser();\r\n\r\n    let recipes = recipeIndex.all();\r\n    let rlabels = new Map(recipes.map(r => [r, labelDict(r)]))\r\n    let precipes = _.countBy(recipeIndex.getAll(plan.getAllRecipeIds(false)).map(r => r.getId()))\r\n    let plabels = _.countBy(_.flatMap(recipeIndex.getAll(plan.getAllRecipeIds(false)), r=>r.getLabels()).map(l=>l.toUpperCase()))\r\n\r\n    p.functions.intersection = (as: any[], bs: any[]) => {\r\n        return _.intersection(as, bs);\r\n    }\r\n\r\n    p.functions.sum = (as: number[]) => {\r\n        return _.sum(as);\r\n    }\r\n\r\n    p.functions.ingredients = (r: Recipe) => {\r\n        return r.getIngredients();\r\n    }\r\n\r\n    p.functions.hasLabel = (r: Recipe, label: string) => {\r\n        let ld = rlabels.get(r);\r\n        if(ld)\r\n        {\r\n            return ld[label] > 0;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    p.functions.planHasLabel = (label: string) => {\r\n        return plabels[label] ?? 0;\r\n    }\r\n\r\n    p.functions.planHasRecipe = (r: Recipe) => {\r\n        return precipes[r.getId()] ?? 0;\r\n    }\r\n\r\n    let scoring = new Scoring()\r\n\r\n    for(let sf of scoringFuns)\r\n    {\r\n        let max = -1;\r\n\r\n        p.functions.normalize = (curr: number) =>\r\n        {\r\n            if(curr > max)\r\n            {\r\n                max = curr;\r\n            }\r\n        \r\n            return curr;\r\n        }\r\n\r\n        let scores = _scoreRecipes(p, recipes, sf);\r\n\r\n        // If `normalize` was used, we need to run it again\r\n        if(max !== -1)\r\n        {\r\n            p.functions.normalize = (curr: number) =>\r\n            {\r\n                return curr / max;\r\n            }\r\n    \r\n            scores = _scoreRecipes(p, recipes, sf);\r\n        }\r\n\r\n        for(let [r, s] of scores)\r\n        {\r\n            scoring.addScoring(r.getId(), sf, s);\r\n        }\r\n    }\r\n\r\n    return scoring;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Binoculars, Clock, Cart2, ExclamationCircle, ChatRightText, SortNumericUpAlt } from 'react-bootstrap-icons';\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { RecipeScoring } from '../model/Scoring';\r\n\r\ntype RecipePopoverProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring\r\n}\r\n\r\nexport const RecipeQuickView: FunctionComponent<RecipePopoverProps> = ({ recipe, scoring }) => {\r\n\r\n    const c = new Intl.Collator();\r\n    const ingredients = recipe.getIngredients().map(r => r.getName())\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"border mt-1 ml-2 pt-2 pb-2\">{n}</Col>)\r\n\r\n    const scoringLines = scoring &&\r\n        scoring.getScorings().map(oneScore =>\r\n            <Row>\r\n                <Col xs=\"2\">\r\n                    {oneScore[1].toFixed(2)}\r\n                </Col>\r\n                <Col xs=\"1\">\r\n                    ←\r\n                </Col>\r\n                <Col>\r\n                    {oneScore[0].getName()}\r\n                </Col>\r\n            </Row>);\r\n\r\n    return (\r\n        <Container className=\"pl-0 pr-2\">\r\n            {recipe.getComment() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><ChatRightText height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getComment()}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getReadyInMinutes() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><Clock height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getReadyInMinutes() + \" minutes\"}</Col>\r\n                </Row>\r\n            }\r\n            {recipe.getSource() &&\r\n                <Row className=\"pb-2\">\r\n                    <Col sm=\"auto\"><Binoculars height=\"18\" /></Col>\r\n                    <Col sm=\"auto\">{recipe.getSource()}</Col>\r\n                </Row>\r\n            }\r\n            <Row className=\"pb-2\">\r\n                <Col xs={1}>\r\n                    <Cart2 height=\"18\" />\r\n                </Col>\r\n                <Col>\r\n                    <Container fluid className=\"pl-0\">\r\n                        <Row>\r\n                            {ingredients}\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n            {recipe.getLabels().length > 0 &&\r\n                <Row className=\"pb-2\">\r\n                    <Col xs={1}>\r\n                        <ExclamationCircle height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container fluid className=\"pl-0\">\r\n                            <Row>\r\n                                {labels}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {scoring &&\r\n                <Row>\r\n                    <Col xs={1}>\r\n                        <SortNumericUpAlt height=\"18\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Container className=\"ml-0 pl-0\">\r\n                            {scoringLines}\r\n                            <Row>\r\n                                <Col xs=\"2\" className=\"border\">\r\n                                    {scoring.getSum().toFixed(2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { Gear, Eye, Search } from 'react-bootstrap-icons';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { Recipe } from '../model/Recipe';\r\nimport { Plan } from '../model/Plan';\r\nimport { Scoring, RecipeScoring } from '../model/Scoring';\r\nimport { RecipeIndex } from '../db/RecipeDB';\r\n\r\nimport { useDrag } from 'react-dnd'\r\n\r\nimport _ from 'lodash';\r\n\r\ntype RecipeSelectorProps = {\r\n    recipeIndex: RecipeIndex,\r\n    scoring: Scoring,\r\n    plan: Plan,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\ntype RecipeListItemProps = {\r\n    recipe: Recipe,\r\n    scoring?: RecipeScoring,\r\n    selected: boolean,\r\n    onEdit: (recipe: Recipe) => void\r\n}\r\n\r\nconst RecipeListItem: FunctionComponent<RecipeListItemProps> = ({ recipe, selected, scoring, onEdit }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId() },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-recipe-selector-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#FFFFFF'\r\n            }}>\r\n\r\n            <Card\r\n                className=\"mealee-recipe-selector-item\"\r\n                key={recipe.getId()}\r\n                ref={drag}\r\n                style={{\r\n                    opacity: isDragging || selected ? 0.5 : 1,\r\n                    cursor: 'move',\r\n                }}>\r\n                <Card.Body className=\"p-0\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"pl-0 ml-2\">\r\n                                {recipe.getTitle()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {labels}\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    right: 10,\r\n                    height: 20,\r\n                    width: 40,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Gear height=\"18\" onClick={() => onEdit(recipe)} style={{ cursor: 'pointer' }} />\r\n                &nbsp;\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} scoring={scoring} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const RecipeSelector: FunctionComponent<RecipeSelectorProps> = ({ recipeIndex, scoring, plan, onEdit }) => {\r\n\r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n\tconst debouncedSetFilter = React.useCallback(\r\n\t\t_.debounce(setFilter, 150),\r\n\t\t[], // will be created only once initially\r\n\t);\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        debouncedSetFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeIndex.all() : recipeIndex.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = _.sortBy(filteredRecipes, r => scoring.getSum(r.getId()) * -1)\r\n        .map((recipe) =>\r\n            <ListGroup.Item className=\"p-0\" key={recipe.getId()}>\r\n                <RecipeListItem\r\n                    key={recipe.getId()}\r\n                    recipe={recipe}\r\n                    scoring={scoring.getScoring(recipe.getId())}\r\n                    onEdit={onEdit}\r\n                    selected={selectedRecipeSet.has(recipe.getId())} />\r\n            </ListGroup.Item>\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2 h-100 d-flex flex-column\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search /></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <Form.Group controlId=\"recipeGroup\" className=\"flex-grow-1 overflow-auto mealee-recipe-selector-list\">\r\n                <ListGroup>{listItems}</ListGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport const RecipeCarousel: FunctionComponent<RecipeSelectorProps> = ({ recipeIndex, plan, onEdit }) => {\r\n\r\n    const [filter, setFilter] = React.useState(\"\");\r\n\r\n    const refresh = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilter(event.currentTarget.value);\r\n    }\r\n\r\n    const filteredRecipes = (filter.trim().length === 0) ?\r\n        recipeIndex.all() : recipeIndex.search(filter).map(res => res.key);\r\n\r\n    const selectedRecipeSet = new Set(plan.getAllRecipeIds())\r\n\r\n    const listItems = filteredRecipes\r\n        .map((recipe) =>\r\n            <RecipeListItem\r\n                key={recipe.getId()}\r\n                recipe={recipe}\r\n                onEdit={onEdit}\r\n                selected={selectedRecipeSet.has(recipe.getId())} />\r\n        );\r\n\r\n    return (\r\n        <Form className=\"pt-2\" onSubmit={(e) => e.preventDefault()}>\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><Search /></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" placeholder=\"Filter recipes\" onChange={refresh} />\r\n            </InputGroup>\r\n            <div style={{ minHeight: 150 }}>\r\n                <Carousel\r\n                    showIndicators={false}\r\n                    showThumbs={false}\r\n                    showArrows={false}\r\n                    useKeyboardArrows={false}\r\n                    infiniteLoop={true}>\r\n                    {listItems}\r\n                </Carousel>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport { Trash, Eye } from 'react-bootstrap-icons';\r\n\r\nimport { RecipeQuickView } from './RecipeQuickView'\r\n\r\nimport { RecipeIndex } from \"../db/RecipeDB\";\r\nimport { Recipe } from \"../model/Recipe\";\r\nimport { Plan } from \"../model/Plan\";\r\n\r\nimport { useDrop, useDrag } from 'react-dnd'\r\nimport _ from 'lodash';\r\n\r\ntype RecipeBoxProps = {\r\n    bucketId: number,\r\n    recipe: Recipe,\r\n    onDelete: (recipeId: string) => void\r\n}\r\n\r\nconst RecipeBox: FunctionComponent<RecipeBoxProps> = ({ bucketId, recipe, onDelete }) => {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: \"recipe\", id: recipe.getId(), from: bucketId},\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    const c = new Intl.Collator();\r\n    const labels = recipe.getLabels()\r\n        .sort(c.compare)\r\n        .map(n => <Col key={n} sm=\"auto\" className=\"mealee-bucker-recipe-label mt-1 ml-2\">{n}</Col>)\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className=\"hover\"\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'move',\r\n            }}>\r\n\r\n            <Card className=\"mealee-bucket-recipe\">\r\n                <Card.Body className=\"mealee-bucket-recipe-body\">\r\n                <Container>\r\n                <Row>\r\n                    <Col className=\"pl-0 ml-2\">\r\n                        {recipe.getTitle()}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {labels}\r\n                </Row>\r\n                </Container>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div\r\n                className=\"hover-on\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    height: 40,\r\n                    width: 20,\r\n                    zIndex: 1,\r\n                    opacity: 0.5\r\n                }}>\r\n\r\n                <Trash height=\"18\" onClick={() => onDelete(recipe.getId())} style={{ cursor: 'pointer' }} />\r\n                <OverlayTrigger\r\n                    placement=\"auto\"\r\n                    overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h4\">{recipe.getTitle()}</Popover.Title>\r\n                            <Popover.Content>\r\n                                <RecipeQuickView recipe={recipe} />\r\n                            </Popover.Content>\r\n                        </Popover>}>\r\n                    <Eye height=\"18\" style={{ cursor: 'pointer' }} />\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype BucketProps = {\r\n    bucketId: number,\r\n    recipes: Recipe[],\r\n    onDelete: (bucketid: number, recipeid: string) => void\r\n}\r\n\r\nconst Bucket: FunctionComponent<BucketProps> = ({ bucketId, recipes, onDelete }) => {\r\n\r\n    return (\r\n        <Card className=\"mealee-bucket\">\r\n            <Card.Header className=\"mealee-bucket-header\">{\"Day \" + (bucketId + 1)}</Card.Header>\r\n            <Card.Body className=\"mealee-bucket-body\">\r\n                {recipes.map(r => <RecipeBox key={r.getId()} bucketId={bucketId} recipe={r}\r\n                                        onDelete={(recipeId) => onDelete(bucketId, recipeId)} />)}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\ntype DroppableBucketProps = BucketProps & {\r\n    onDrop: (buckedId: number, recipeId: string) => void,\r\n    onMove: (from: number, to: number, recipeId: string) => void\r\n}\r\n\r\nconst DroppableBucket: FunctionComponent<DroppableBucketProps> = ({ bucketId, recipes, onDrop, onMove, onDelete }) => {\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: \"recipe\",\r\n        drop: (r) => {\r\n            let r2 = r as unknown as { id: string, from?: number };\r\n            if(r2.from !== undefined)\r\n            {\r\n                onMove(r2.from, bucketId, r2.id)\r\n            } \r\n            else\r\n            {\r\n                onDrop(bucketId, r2.id)\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}\r\n        >\r\n            <Bucket bucketId={bucketId} recipes={recipes} onDelete={onDelete}></Bucket>\r\n\r\n            {isOver && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                        opacity: 0.5,\r\n                        backgroundColor: 'yellow',\r\n                    }} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PlannerProps = {\r\n    recipeDB: RecipeIndex,\r\n    plan: Plan,\r\n    updatePlan: (plan: Plan) => void\r\n}\r\n\r\nexport const Planner: FunctionComponent<PlannerProps> = ({ recipeDB, plan, updatePlan }) => {\r\n\r\n    const addRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.addRecipeId(bucketIdx, recipeId))\r\n    }\r\n\r\n    const deleteRecipe = (bucketIdx: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeId(bucketIdx, recipeId))\r\n    }\r\n\r\n    const moveRecipe = (from: number, to: number, recipeId: string) => {\r\n        updatePlan(plan.deleteRecipeId(from, recipeId).addRecipeId(to, recipeId))\r\n    }\r\n\r\n    let cols = _.range(plan.getNrBuckets()).map(i => {\r\n        return (\r\n            <Col key={i} xs=\"auto\" className=\"pr-2 pl-0\">\r\n                <DroppableBucket\r\n                    bucketId={i}\r\n                    recipes={recipeDB.getAll(plan.getRecipeIds(i))}\r\n                    onDrop={addRecipe}\r\n                    onDelete={deleteRecipe}\r\n                    onMove={moveRecipe} />\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container className=\"pt-0 pb-2 pl-0 pr-0\">\r\n            <Row>\r\n                {cols}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\"; \r\nimport { Container, Col, Row, Image } from \"react-bootstrap\";\r\n\r\nimport { scoreRecipes } from './scoring/Scoring';\r\n\r\nimport { RecipeSelector, RecipeCarousel } from \"./component/RecipeSelector\";\r\nimport { Planner } from \"./component/Planner\";\r\n\r\nimport Tour from 'reactour';\r\n\r\nimport App from \"./App\";\r\nimport { Dialog } from \"./AppDialogs\";\r\n\r\nexport function renderInitialBody(this: App) {\r\n    return (\r\n        <Col xs=\"auto\" className=\"pt-3\">\r\n            <Tour\r\n                isOpen={this.state.isInitialTour}\r\n                onRequestClose={() => this.setIsInitialTour(false)}\r\n                steps={[\r\n                    {\r\n                        selector: '.my-first-step-a',\r\n                        content: <Container className=\"pt-4\">Load some recipes from a file or ...</Container>,\r\n                    },\r\n                    {\r\n                        selector: '.my-first-step-b',\r\n                        content: <Container className=\"pt-4\">... or add a new recipe manually!</Container>,\r\n                    }\r\n                ]} />\r\n            <Alert key=\"recipe\" variant=\"warning\">\r\n                I do not see any recipes. <Button variant=\"link\" className=\"pt-1\" onClick={() => this.setIsInitialTour(true)}>Are you new to Mealee?</Button>\r\n            </Alert>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport function renderDesktopBody(this: App) {\r\n\r\n    return (\r\n        <>\r\n            <Col xs=\"8\" sm=\"5\" md=\"4\" lg=\"3\" xl=\"3\" className=\"h-100\" style={{ minHeight: 0 }}>\r\n                <RecipeSelector\r\n                    plan={this.state.plan}\r\n                    scoring={scoreRecipes(this.state.recipeIndex, this.state.plan)}\r\n                    recipeIndex={this.state.recipeIndex}\r\n                    onEdit={this.editRecipe} />\r\n\r\n            </Col>\r\n            <Col>\r\n                <Container className=\"pt-2 pl-0 pr-0\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Planner\r\n                                recipeDB={this.state.recipeIndex}\r\n                                plan={this.state.plan}\r\n                                updatePlan={this.updatePlan} />\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.plan.getNrRecipes() > 0 &&\r\n                    <Row>\r\n                        <Col className=\"pl-0\">\r\n                            <Button\r\n                            variant=\"mealee\"\r\n                            onClick={this.showDialog(Dialog.SavePlanXLS)}>\r\n                                Export plan &nbsp;\r\n                                <Image src=\"xlsx_logo.svg\" height=\"18\" />\r\n                            </Button>\r\n                            <Button\r\n                            className=\"ml-2\"\r\n                            variant=\"mealee\"\r\n                            onClick={this.showDialog(Dialog.ShoppingList)}>\r\n                                Show shopping list &nbsp;\r\n                                <Image src=\"todoist_logo.svg\" height=\"18\" />\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n                </Container>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n\r\nexport function renderMobileBody(this: App) {\r\n    return (\r\n        <>\r\n            <Col xs=\"10\">\r\n                <RecipeCarousel\r\n                    plan={this.state.plan}\r\n                    scoring={scoreRecipes(this.state.recipeIndex, this.state.plan)}\r\n                    recipeIndex={this.state.recipeIndex}\r\n                    onEdit={this.editRecipe} />\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n","export enum Optimization {\r\n  MinimalNrIngrediants = 1,\r\n  MaximalResueOfIngredients,\r\n}\r\n\r\nexport class PlanSettings {\r\n  constructor() {\r\n    this.nrRecipes = 5;\r\n  }\r\n\r\n  public clone(): PlanSettings {\r\n    return Object.create(this);\r\n  }\r\n\r\n  public nrRecipes: number;\r\n}\r\n","import {\r\n  Index,\r\n  createIndex,\r\n  addDocumentToIndex,\r\n  removeDocumentFromIndex,\r\n} from \"ndx\";\r\nimport { query, QueryResult } from \"ndx-query\";\r\nimport { words } from \"lodash\";\r\n\r\nimport { Recipe } from \"../model/Recipe\";\r\n\r\nimport { Map } from \"immutable\";\r\n\r\nexport class RecipeIndex {\r\n  private readonly recipesMap: Map<string, Recipe>;\r\n  private readonly index: Index<string>;\r\n\r\n  private readonly fieldAccessors = [\r\n    (r: Recipe) => r.getTitle(),\r\n    (r: Recipe) => r.getComment() ?? \"\",\r\n    (r: Recipe) => r.getSource() ?? \"\",\r\n    (r: Recipe) => r.getIngredients().map((i) => i.getName()).join(\" \"),\r\n    (r: Recipe) => r.getLabels().join(\" \")\r\n  ];\r\n\r\n  private readonly fieldBoostFactors = [2, 1, 1, 1, 2];\r\n\r\n  constructor(index?: Index<string>, recipesMap?: Map<string, Recipe>) {\r\n    this.index = index ? index : createIndex<string>(this.fieldAccessors.length);\r\n    this.recipesMap = recipesMap ? recipesMap : Map({});\r\n  }\r\n\r\n  private termFilter = (term: string) => {\r\n    return term\r\n      .normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .toLowerCase();\r\n  };\r\n\r\n  public static new = () => {\r\n    return new RecipeIndex();\r\n  };\r\n\r\n  // `add()` function will add documents to the index.\r\n  public add = (r: Recipe) => {\r\n    let key = r.getId();\r\n\r\n    let toUpdate = true;\r\n\r\n    if (this.recipesMap.has(key)) {\r\n      if (JSON.stringify(this.recipesMap.get(key)) === JSON.stringify(r)) {\r\n        toUpdate = false;\r\n      }\r\n    }\r\n\r\n    if (toUpdate) {\r\n      // Don't add the same document twice, ndx becomes crazy...\r\n      this.delete(key);\r\n      let newMap = this.recipesMap.set(key, r);\r\n\r\n      addDocumentToIndex(\r\n        this.index,\r\n        this.fieldAccessors,\r\n        // Tokenizer is a function that breaks text into words, phrases, symbols, or other meaningful elements\r\n        // called tokens.\r\n        // Lodash function `words()` splits string into an array of its words, see https://lodash.com/docs/#words for\r\n        // details.\r\n        words,\r\n        // Filter is a function that processes tokens and returns terms, terms are used in Inverted Index to\r\n        // index documents.\r\n        this.termFilter,\r\n        // Document key, it can be a unique document id or a reference to a document if you want to store all documents\r\n        // in memory.\r\n        key,\r\n        // Document.\r\n        r\r\n      );\r\n\r\n      return new RecipeIndex(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public addAll = (recipes: Recipe[]) => {\r\n    return recipes.reduce((idx: RecipeIndex, recipe: Recipe) => {\r\n      return idx.add(recipe);\r\n    }, this);\r\n  };\r\n\r\n  // `search()` function will be used to perform queries.\r\n  public search = (q: string) =>\r\n    query<string>(\r\n      this.index,\r\n      this.fieldBoostFactors,\r\n      // BM25 ranking function constants:\r\n      1.2, // BM25 k1 constant, controls non-linear term frequency normalization (saturation).\r\n      0.75, // BM25 b constant, controls to what degree document length normalizes tf values.\r\n      words,\r\n      this.termFilter,\r\n      // Set of removed documents, in this example we don't want to support removing documents from the index,\r\n      // so we can ignore it by specifying this set as `undefined` value.\r\n      undefined,\r\n      q\r\n    ).reduce((acc: QueryResult<Recipe>[], res) => {\r\n      let r = this.recipesMap.get(res.key);\r\n      if (r) {\r\n        acc.push({ key: r, score: res.score });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n  public all = () => {\r\n    return Array.from(this.recipesMap.values());\r\n  };\r\n\r\n  public get = (key: string) => {\r\n    return this.recipesMap.get(key);\r\n  };\r\n\r\n  public delete = (key: string) => {\r\n    if (this.recipesMap.has(key)) {\r\n      let newMap = this.recipesMap.delete(key);\r\n      removeDocumentFromIndex(this.index, new Set(), key);\r\n      return new RecipeIndex(this.index, newMap);\r\n    } else {\r\n      return this;\r\n    }\r\n  };\r\n\r\n  public getAll = (keys: string[]) => {\r\n    return keys.reduce((acc: Recipe[], key) => {\r\n      let r = this.recipesMap.get(key);\r\n      if (r) {\r\n        acc.push(r);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  public count = () => {\r\n    return this.recipesMap.size;\r\n  };\r\n}\r\n","import { List, Set } from \"immutable\";\r\n\r\nexport class Plan {\r\n\r\n  // Don't store Recipes, only ids. They are immutable, so if they change...\r\n  private buckets = List<Set<string>>();\r\n\r\n  private constructor(buckets: List<Set<string>>) {\r\n    this.buckets = buckets;\r\n  }\r\n\r\n  public static new = (nrBuckets: number) => {\r\n    return new Plan(List().setSize(nrBuckets));\r\n  };\r\n\r\n  public setNrBuckets(nrBuckets: number) {\r\n    return new Plan(this.buckets.setSize(nrBuckets));\r\n  }\r\n\r\n  public getNrBuckets() {\r\n    return this.buckets.size;\r\n  }\r\n\r\n  public getNrRecipes() {\r\n    let ret = 0;\r\n    for (let bucket of this.buckets) {\r\n        if (bucket) {\r\n            ret += bucket.count();\r\n        }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public addRecipeId(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Set();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.add(recipeId)));\r\n  }\r\n\r\n  public deleteRecipeId(bucketNr: number, recipeId: string) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Set();\r\n    return new Plan(this.buckets.set(bucketNr, bucket.delete(recipeId)));\r\n  }\r\n\r\n  public getRecipeIds(bucketNr: number) {\r\n    let bucket = this.buckets.get(bucketNr) ?? Set();\r\n    return Array.from(bucket);\r\n  }\r\n\r\n  public getAllRecipeIds(deDuplicate: boolean = true) {\r\n    if(deDuplicate)\r\n    {\r\n        let ids = Set<string>();\r\n        for (let bucket of this.buckets) {\r\n            if (bucket) {\r\n                ids = ids.concat(bucket);\r\n            }\r\n        }\r\n        return Array.from(ids);\r\n    }\r\n    else\r\n    {\r\n        let ids = List<string>();\r\n        for (let bucket of this.buckets) {\r\n          if (bucket) {\r\n            ids = ids.concat(bucket);\r\n          }\r\n        }\r\n        return Array.from(ids);\r\n    }\r\n  }\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Upload, Download, PlusCircle, Gear } from 'react-bootstrap-icons';\r\n\r\ntype IconBarProps = {\r\n    onLoadFile: () => void;\r\n    onNewRecipe: () => void;\r\n    onSaveFile: () => void;\r\n    onEditSettings: () => void;\r\n    unsavedChanges: boolean;\r\n};\r\n\r\nexport const IconBar: FunctionComponent<IconBarProps> = ({\r\n    onLoadFile,\r\n    onNewRecipe,\r\n    onSaveFile,\r\n    onEditSettings,\r\n    unsavedChanges\r\n}) => {\r\n    return (\r\n        <Container className=\"pl-0 ml-2 mr-2 p-0\">\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"upload\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-upload\">\r\n                                Load recipes\r\n                </Tooltip>\r\n                        }>\r\n                        <Upload\r\n                            className=\"my-first-step-a\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onLoadFile} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"download\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-download\">\r\n                                Save recipes\r\n                </Tooltip>\r\n                        }>\r\n                        {unsavedChanges\r\n                            ? <Download\r\n                                className=\"text-warning\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onSaveFile} />\r\n                            : <Download\r\n                                style={{ color: \"#ffffff40\" }} />\r\n                        }\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Add new recipe\r\n                </Tooltip>\r\n                        }>\r\n                        <PlusCircle\r\n                            className=\"my-first-step-b\"\r\n                            style={{ color: \"#ffffff\", cursor: \"pointer\" }}\r\n                            onClick={onNewRecipe} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"pr-0\">\r\n                    <OverlayTrigger\r\n                        key=\"new\"\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id=\"tooltip-new\">\r\n                                Plan settings\r\n                </Tooltip>\r\n                        }>\r\n\r\n                        <Gear style={{\r\n                            color: \"#ffffff\",\r\n                            cursor: \"pointer\"\r\n                        }} onClick={onEditSettings} />\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\r\n\r\nfunction getVersionNumber() {\r\n    return `${process.env.REACT_APP_VERSION}`;\r\n}\r\n\r\nexport const MenuBar: FunctionComponent = () => {\r\n    return (\r\n        <Navbar bg=\"mealee-menu\" variant=\"dark\" className=\"pl-1\">\r\n            <Navbar.Brand className=\"logo\" href=\"#home\"><Image src=\"mealee_logo_v9.svg\" height={60}/></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"container-fluid\">\r\n                    <Nav.Item className=\"ml-auto\">\r\n                        <Nav.Link>v{getVersionNumber()}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport * as AppDialogs from \"./AppDialogs\";\r\nimport * as AppBodies from \"./AppBodies\";\r\n\r\nimport { RecipeIndex } from \"./db/RecipeDB\";\r\n\r\nimport { PlanSettings } from \"./model/PlanSettings\";\r\nimport { Plan } from \"./model/Plan\";\r\nimport { Recipe, serializeRecipes, deserializeRecipes } from \"./model/Recipe\";\r\n\r\nimport { IconBar } from \"./component/IconBar\";\r\nimport { MenuBar } from \"./component/MenuBar\";\r\n\r\nimport { Beforeunload } from \"react-beforeunload\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\ntype AppState = {\r\n  recipeIndex: RecipeIndex;\r\n  planSettings: PlanSettings;\r\n  plan: Plan;\r\n  showDialog?: Dialog;\r\n  recipeToEdit?: Recipe;\r\n  error: string | null;\r\n  unsavedChanges: boolean;\r\n  isInitialTour: boolean;\r\n};\r\n\r\nenum Dialog {\r\n  LoadFile,\r\n  SaveFile,\r\n  RecipeEditor,\r\n  SavePlanXLS,\r\n  ShoppingList,\r\n  PlanSettings\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    let recipeIndex = new RecipeIndex();\r\n    let planSettings = new PlanSettings();\r\n    let plan = Plan.new(planSettings.nrRecipes);\r\n\r\n    // Hard binding is needed if `loadFile` do not use arrow notation\r\n    // this.loadFile = this.loadFile.bind(this);\r\n    this.state = {\r\n      recipeIndex: recipeIndex,\r\n      planSettings: planSettings,\r\n      plan: plan,\r\n      showDialog: undefined,\r\n      recipeToEdit: undefined,\r\n      error: null,\r\n      unsavedChanges: false,\r\n      isInitialTour: false\r\n    };\r\n  }\r\n\r\n  public renderDialog = AppDialogs.renderDialog;\r\n  public renderInitialBody = AppBodies.renderInitialBody;\r\n  public renderDesktopBody = AppBodies.renderDesktopBody;\r\n  public renderMobileBody = AppBodies.renderMobileBody;\r\n\r\n  addRecipes = (newRecipes: Recipe[], fromFile = false) => {\r\n    this.setState((st) => {\r\n      // You want to save if it is not a first file load\r\n      let needsSave =\r\n        st.unsavedChanges || !(fromFile && st.recipeIndex.count() === 0);\r\n\r\n      let ret = {};\r\n      let newRecipeIndex = st.recipeIndex.addAll(newRecipes);\r\n\r\n      if (newRecipeIndex !== st.recipeIndex) {\r\n        ret = {\r\n          recipeIndex: newRecipeIndex,\r\n          unsavedChanges: needsSave,\r\n        };\r\n      }\r\n\r\n      return ret;\r\n    });\r\n  };\r\n\r\n  setIsInitialTour = (t: boolean) => {\r\n    this.setState({ isInitialTour: t });\r\n  }\r\n\r\n  saveRecipe = (recipe: Recipe) => {\r\n    this.addRecipes([recipe]);\r\n    this.closeRecipeEditor();\r\n  };\r\n\r\n  onFileLoaded = (ev: ProgressEvent<FileReader>) => {\r\n    let res = ev.target?.result;\r\n\r\n    if (typeof res == \"string\") {\r\n      try {\r\n        this.addRecipes(deserializeRecipes(res), true);\r\n      } catch (e) {\r\n        this.setState({ error: e.message });\r\n      }\r\n    }\r\n    this.closeDialog();\r\n  };\r\n\r\n  loadFile = (file: File) => {\r\n    var reader = new FileReader();\r\n    reader.onload = (ev) => this.onFileLoaded(ev);\r\n    reader.readAsText(file, \"UTF-8\");\r\n  };\r\n\r\n  genRecipeFileContent = () => {\r\n    return serializeRecipes(this.state.recipeIndex.all());\r\n  };\r\n\r\n  fileSaved = () => {\r\n    this.setState({ unsavedChanges: false });\r\n    this.closeDialog();\r\n  };\r\n\r\n  showDialog = (dialog: Dialog) => {\r\n    return () => this.setState({ showDialog: dialog });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ showDialog: undefined });\r\n  };\r\n\r\n  closeRecipeEditor = () => {\r\n    this.setState({ recipeToEdit: undefined, showDialog: undefined });\r\n  };\r\n\r\n  dismissError = () => {\r\n    this.setState({ error: null });\r\n  };\r\n\r\n  updatePlanSettings = (ps: PlanSettings) => {\r\n    this.setState((st) => {\r\n      return {\r\n        planSettings: ps,\r\n        plan: st.plan.setNrBuckets(ps.nrRecipes)\r\n      };\r\n    });\r\n  };\r\n\r\n  updatePlan = (plan: Plan) => {\r\n    this.setState({\r\n      plan: plan\r\n    });\r\n  };\r\n\r\n  editRecipe = (recipe: Recipe) => {\r\n    this.setState({ showDialog: Dialog.RecipeEditor, recipeToEdit: recipe });\r\n  };\r\n\r\n  deleteRecipe = (recipe: Recipe) => {\r\n    this.setState((st) => {\r\n      let newRecipeIndex = st.recipeIndex.delete(recipe.getId());\r\n\r\n      return {\r\n        recipeIndex: newRecipeIndex,\r\n        showDialog: undefined,\r\n        recipeToEdit: undefined,\r\n        unsavedChanges: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render(this: App) {\r\n\r\n    return (\r\n      <Container fluid className=\"d-flex flex-column vh-100\">\r\n        <Alert\r\n          variant=\"danger\"\r\n          onClose={this.dismissError}\r\n          show={!!this.state.error}\r\n          dismissible>\r\n          {this.state.error}\r\n        </Alert>\r\n\r\n        {this.state.unsavedChanges &&\r\n          <Beforeunload onBeforeunload={() => \"You'll lose your data!\"} />\r\n        }\r\n\r\n        {this.renderDialog()}\r\n\r\n        <Row>\r\n          <Col>\r\n            <MenuBar />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"h-100\" style={{ minHeight: 0 }}>\r\n          <Col xs=\"auto\" className=\"pl-0 pr-2 pt-3\">\r\n            <IconBar\r\n              onLoadFile={this.showDialog(Dialog.LoadFile)}\r\n              onNewRecipe={this.showDialog(Dialog.RecipeEditor)}\r\n              onSaveFile={this.showDialog(Dialog.SaveFile)}\r\n              onEditSettings={this.showDialog(Dialog.PlanSettings)}\r\n              unsavedChanges={this.state.unsavedChanges} />\r\n          </Col>\r\n          {this.state.recipeIndex.count() === 0 && this.renderInitialBody()}\r\n          {this.state.recipeIndex.count() > 0 && !isMobileOnly && this.renderDesktopBody()}\r\n          {this.state.recipeIndex.count() > 0 && isMobileOnly && this.renderMobileBody()}\r\n        </Row>\r\n\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { TouchBackend } from 'react-dnd-touch-backend'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n      <App />\r\n    </DndProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}